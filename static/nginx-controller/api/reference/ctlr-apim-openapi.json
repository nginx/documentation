{
    "openapi": "3.0.0",
    "info":{
        "title": "NGINX Controller API Management REST API",
        "version": "v1",
        "description": "Manage the NGINX Controller APIM module."
    },
    "servers": [
        {
            "description": "NGINX Controller API",
            "url": "https://{{CONTROLLER_FQDN}}/api/v1"
    }],
    "tags": [
        {
            "name": "Instances",
            "description": "Use the Instances API to manage NGINX Controller Instance resources."
        },
        {
            "name": "API Definitions",
            "description": "Use the \"API Definitions\" API to manage your APIs by using the NGINX Controller API Management module."
        },
        {
            "name": "Environments",
            "description": "Use the Environments API to manage your Application Environments."
        },
        {
            "name": "Services",
            "description": "Use the Services API to request a metadata list of a desired resource within a single environment or across all environments.\nSupported resources:\n  - published-apis\n"
        },
        {
            "name": "DevPortals",
            "description": "Use the DevPortals API to manage DevPortals resources."
        },
        {
            "name": "Instance Groups",
            "description": "Use the Instance Groups API to manage a set of instances that can be used for scaling and high availability."
        },
        {
            "name": "Identity Providers",
            "description": "Use the Identity Provider API to manage Identity providers in the API-M Credential Management partition."
        },
        {
            "name": "Certs",
            "description": "Use the Certs API to manage the certificates used to secure your App traffic."
        },
        {
            "name": "Gateways",
            "description": "Use the Gateways API to manage Gateway resources."
        },
        {
            "name": "Error Sets",
            "description": "Use the Error Sets API to view the default predefined Error Sets."
        },
        {
            "name": "Published APIs",
            "description": "Use the Published APIs API to manage your APIs by using the API Management module."
        },
        {
            "name": "Components",
            "description": "Use the Components API to define child components (for example, microservices) for your Apps."
        },
        {
            "name": "Locations",
            "description": "Use the Locations API to manage the deployment locations for NGINX Controller."
        },
        {
            "name": "Instance Templates",
            "description": "Use the Instance Templates API to manage templates that can be used to deploy new NGINX Plus instances."
        },
        {
            "name": "Apps",
            "description": "Use the Apps API to manage App resources."
        },
        {
            "name": "Integrations",
            "description": "Use the Integrations API to manage integrated cloud provider accounts."
        },
        {
            "name": "Policies",
            "description": "Use the Policies API to manage the policies used to secure your App traffic."
        }
    ],
    "paths": {
        "/infrastructure/instance-groups": {
            "get": {
                "tags": [
                    "Instance Groups"
                ],
                "summary": "List Instance Groups",
                "description": "Returns an unfiltered list of all Instance Group resources.",
                "operationId": "listInstanceGroups",
                "responses": {
                    "200": {
                        "description": "Successfully retieved a list of all the configured Instance Groups.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListInstanceGroupsResponse"
                                },
                                "example": {
                                    "value": {
                                        "items": [
                                            {
                                                "currentStatus": {
                                                    "instanceRefs": [],
                                                    "state": {
                                                        "conditions": [],
                                                        "selfConfigState": {
                                                            "configured": 1,
                                                            "configuring": 0,
                                                            "deleting": 0,
                                                            "error": 0,
                                                            "isConfigured": true,
                                                            "isConfiguring": false,
                                                            "isDeleting": false,
                                                            "isError": false,
                                                            "total": 1
                                                        }
                                                    }
                                                },
                                                "desiredState": {},
                                                "metadata": {
                                                    "createTime": "2020-05-13T09:29:49.464273Z",
                                                    "description": "us-west-2 autoscale group",
                                                    "displayName": "aws-autoscale-group",
                                                    "kind": "instance-group",
                                                    "links": {
                                                        "rel": "/api/v1/infrastructure/instance-groups/amz-us-west-2-as-group"
                                                    },
                                                    "name": "amz-us-west-2-as-group",
                                                    "uid": "802ef1f8-9105-474a-b9a7-599837efd6b4",
                                                    "updateTime": "2020-05-13T09:29:49.464273Z"
                                                }
                                            },
                                            {
                                                "currentStatus": {
                                                    "instanceRefs": [
                                                        {
                                                            "ref": "/infrastructure/locations/eks-cluster/instances/30dc361a3729"
                                                        },
                                                        {
                                                            "ref": "/infrastructure/locations/eks-cluster/instances/01a9eead50e5"
                                                        }
                                                    ],
                                                    "state": {
                                                        "conditions": [],
                                                        "selfConfigState": {
                                                            "configured": 1,
                                                            "configuring": 0,
                                                            "deleting": 0,
                                                            "error": 0,
                                                            "isConfigured": true,
                                                            "isConfiguring": false,
                                                            "isDeleting": false,
                                                            "isError": false,
                                                            "total": 1
                                                        }
                                                    }
                                                },
                                                "desiredState": {},
                                                "metadata": {
                                                    "createTime": "2020-05-13T16:58:17.058124Z",
                                                    "description": "K8S NGINX+ deployment",
                                                    "displayName": "k8s-nginx-deploy",
                                                    "kind": "instance-group",
                                                    "links": {
                                                        "rel": "/api/v1/infrastructure/instance-groups/k8s-nginx-deploy"
                                                    },
                                                    "name": "k8s-nginx-deploy",
                                                    "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                                    "updateTime": "2020-05-13T16:58:17.058124Z"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Instance Groups"
                ],
                "summary": "Create an Instance Group",
                "description": "Creates an new Instance Group resource.",
                "operationId": "addInstanceGroup",
                "requestBody": {
                    "description": "Defines the Instance Group resource to be added.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceGroup"
                            },
                            "example": {
                                "value": {
                                    "metadata": {
                                        "name": "k8s-nginx-deploy",
                                        "displayName": "K8S NGINX+ deployment",
                                        "description": "k8s-nginx-deploy"
                                    },
                                    "desiredState": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The Instance Group resource has been accepted for creation. The Instance Group will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceGroupResponse"
                                },
                                "example": {
                                    "value": {
                                        "metadata": {
                                            "createTime": "2020-05-13T16:58:17.058124Z",
                                            "description": "K8S NGINX+ deployment",
                                            "displayName": "k8s-nginx-deploy",
                                            "kind": "instance-group",
                                            "links": {
                                                "rel": "/api/v1/infrastructure/instance-groups/k8s-nginx-deploy"
                                            },
                                            "name": "k8s-nginx-deploy",
                                            "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                            "updateTime": "2020-05-13T16:58:17.058124Z"
                                        },
                                        "desiredState": {},
                                        "currentStatus": {
                                            "instanceRefs": [
                                                {
                                                    "ref": "/infrastructure/locations/eks-cluster/instances/30dc361a3729"
                                                },
                                                {
                                                    "ref": "/infrastructure/locations/eks-cluster/instances/01a9eead50e5"
                                                }
                                            ],
                                            "state": {
                                                "conditions": [],
                                                "selfConfigState": {
                                                    "configured": 1,
                                                    "configuring": 0,
                                                    "deleting": 0,
                                                    "error": 0,
                                                    "isConfigured": true,
                                                    "isConfiguring": false,
                                                    "isDeleting": false,
                                                    "isError": false,
                                                    "total": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    }
                }
            }
        },
        "/infrastructure/instance-groups/{instanceGroupName}": {
            "get": {
                "tags": [
                    "Instance Groups"
                ],
                "summary": "Get an Instance Group",
                "description": "Returns information about a specified Instance Groupe resource.",
                "operationId": "getInstanceGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstanceGroupName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the requested Instance Group resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceGroupResponse"
                                },
                                "example": {
                                    "value": {
                                        "metadata": {
                                            "createTime": "2020-05-13T16:58:17.058124Z",
                                            "description": "K8S NGINX+ deployment",
                                            "displayName": "k8s-nginx-deploy",
                                            "kind": "instance-group",
                                            "links": {
                                                "rel": "/api/v1/infrastructure/instance-groups/k8s-nginx-deploy"
                                            },
                                            "name": "k8s-nginx-deploy",
                                            "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                            "updateTime": "2020-05-13T16:58:17.058124Z"
                                        },
                                        "desiredState": {},
                                        "currentStatus": {
                                            "instanceRefs": [
                                                {
                                                    "ref": "/infrastructure/locations/eks-cluster/instances/30dc361a3729"
                                                },
                                                {
                                                    "ref": "/infrastructure/locations/eks-cluster/instances/01a9eead50e5"
                                                }
                                            ],
                                            "state": {
                                                "conditions": [],
                                                "selfConfigState": {
                                                    "configured": 1,
                                                    "configuring": 0,
                                                    "deleting": 0,
                                                    "error": 0,
                                                    "isConfigured": true,
                                                    "isConfiguring": false,
                                                    "isDeleting": false,
                                                    "isError": false,
                                                    "total": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Instance Groups"
                ],
                "summary": "Upsert an Instance Group",
                "description": "Creates a new Instance Group resource or updates an existing Instance Group resource.",
                "operationId": "upsertInstanceGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstanceGroupName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceGroup"
                            },
                            "example": {
                                "value": {
                                    "metadata": {
                                        "name": "k8s-nginx-deploy",
                                        "displayName": "K8S NGINX+ deployment",
                                        "description": "k8s-nginx-deploy"
                                    },
                                    "desiredState": {}
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The Instance Group resource has been accepted for creation or update.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceGroupResponse"
                                },
                                "example": {
                                    "value": {
                                        "metadata": {
                                            "createTime": "2020-05-13T16:58:17.058124Z",
                                            "description": "K8S NGINX+ deployment",
                                            "displayName": "k8s-nginx-deploy",
                                            "kind": "instance-group",
                                            "links": {
                                                "rel": "/api/v1/infrastructure/instance-groups/k8s-nginx-deploy"
                                            },
                                            "name": "k8s-nginx-deploy",
                                            "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                            "updateTime": "2020-05-13T16:58:17.058124Z"
                                        },
                                        "desiredState": {},
                                        "currentStatus": {
                                            "instanceRefs": [
                                                {
                                                    "ref": "/infrastructure/locations/eks-cluster/instances/30dc361a3729"
                                                },
                                                {
                                                    "ref": "/infrastructure/locations/eks-cluster/instances/01a9eead50e5"
                                                }
                                            ],
                                            "state": {
                                                "conditions": [],
                                                "selfConfigState": {
                                                    "configured": 1,
                                                    "configuring": 0,
                                                    "deleting": 0,
                                                    "error": 0,
                                                    "isConfigured": true,
                                                    "isConfiguring": false,
                                                    "isDeleting": false,
                                                    "isError": false,
                                                    "total": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Instance Groups"
                ],
                "summary": "Delete an Instance Group",
                "description": "Deletes the specified Instance Group resource.",
                "operationId": "deleteInstanceGroup",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/InstanceGroupName"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified Instance Group resource."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    }
                }
            }
        },
        "/infrastructure/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "List all Locations",
                "description": "Returns a list of all Locations.",
                "operationId": "listLocations",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all of the configured Locations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLocationResponse"
                                },
                                "example": {
                                    "value": {
                                        "items": [
                                            {
                                                "currentStatus": {
                                                    "type": "OTHER_LOCATION"
                                                },
                                                "desiredState": {
                                                    "type": "OTHER_LOCATION"
                                                },
                                                "metadata": {
                                                    "createTime": "2020-05-13T09:29:49.464273Z",
                                                    "description": "Location for instances where location has not been specified",
                                                    "displayName": "Unspecified (default)",
                                                    "kind": "location",
                                                    "links": {
                                                        "rel": "/api/v1/infrastructure/locations/unspecified"
                                                    },
                                                    "name": "unspecified",
                                                    "tags": [
                                                        "default"
                                                    ],
                                                    "uid": "802ef1f8-9105-474a-b9a7-599837efd6b4",
                                                    "updateTime": "2020-05-13T09:29:49.464273Z"
                                                }
                                            },
                                            {
                                                "currentStatus": {
                                                    "type": "OTHER_LOCATION"
                                                },
                                                "desiredState": {
                                                    "type": "OTHER_LOCATION"
                                                },
                                                "metadata": {
                                                    "createTime": "2020-05-13T16:58:17.058124Z",
                                                    "description": "Other Location for managing instances",
                                                    "displayName": "OtherLocation-1",
                                                    "kind": "location",
                                                    "links": {
                                                        "rel": "/api/v1/infrastructure/locations/my-other-location"
                                                    },
                                                    "name": "my-other-location",
                                                    "tags": [
                                                        "dev",
                                                        "prod"
                                                    ],
                                                    "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                                    "updateTime": "2020-05-13T16:58:17.058124Z"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a Location",
                "description": "Creates a new Location resource.",
                "operationId": "addLocation",
                "requestBody": {
                    "description": "Defines the Location resource to be added.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            },
                            "examples": {
                                "OTHER_LOCATION": {
                                    "$ref": "#/components/examples/OtherLocationRequest"
                                },
                                "AWS_LOCATION": {
                                    "$ref": "#/components/examples/AWSLocationRequest"
                                },
                                "AZURE_LOCATION": {
                                    "$ref": "#/components/examples/AzureLocationRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the requested Location.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLocationResponse"
                                },
                                "examples": {
                                    "OTHER_LOCATION": {
                                        "$ref": "#/components/examples/OtherLocationResponse"
                                    },
                                    "AWS_LOCATION": {
                                        "$ref": "#/components/examples/AWSLocationResponse"
                                    },
                                    "AZURE_LOCATION": {
                                        "$ref": "#/components/examples/AzureLocationResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "405": {
                        "$ref": "#/components/responses/NotAllowed"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    }
                }
            }
        },
        "/infrastructure/locations/{locationName}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a Location",
                "description": "Returns information about a specified Location resource.",
                "operationId": "getLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the requested Location resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLocationResponse"
                                },
                                "examples": {
                                    "OTHER_LOCATION": {
                                        "$ref": "#/components/examples/OtherLocationResponse"
                                    },
                                    "AWS_LOCATION": {
                                        "$ref": "#/components/examples/AWSLocationResponse"
                                    },
                                    "AZURE_LOCATION": {
                                        "$ref": "#/components/examples/AzureLocationResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Upsert a Location",
                "description": "Creates a new Location resource or updates an existing Location resource.",
                "operationId": "upsertLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            },
                            "examples": {
                                "OTHER_LOCATION": {
                                    "$ref": "#/components/examples/OtherLocationRequest"
                                },
                                "AWS_LOCATION": {
                                    "$ref": "#/components/examples/AWSLocationRequest"
                                },
                                "AZURE_LOCATION": {
                                    "$ref": "#/components/examples/AzureLocationRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully received the request to update the specified Location resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLocationResponse"
                                },
                                "examples": {
                                    "OTHER_LOCATION": {
                                        "$ref": "#/components/examples/OtherLocationResponse"
                                    },
                                    "AWS_LOCATION": {
                                        "$ref": "#/components/examples/AWSLocationResponse"
                                    },
                                    "AZURE_LOCATION": {
                                        "$ref": "#/components/examples/AzureLocationResponse"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully updated the specified Location resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLocationResponse"
                                },
                                "examples": {
                                    "OTHER_LOCATION": {
                                        "$ref": "#/components/examples/OtherLocationResponse"
                                    },
                                    "AWS_LOCATION": {
                                        "$ref": "#/components/examples/AWSLocationResponse"
                                    },
                                    "AZURE_LOCATION": {
                                        "$ref": "#/components/examples/AzureLocationResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "405": {
                        "$ref": "#/components/responses/NotAllowed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a Location",
                "description": "Deletes the specified Location resource.",
                "operationId": "deleteLocation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified Location resource."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "405": {
                        "$ref": "#/components/responses/NotAllowed"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    }
                }
            }
        },
        "/infrastructure/locations/{locationName}/instances": {
            "get": {
                "tags": [
                    "Instances"
                ],
                "summary": "List all Instances in a Location",
                "description": "Returns the status and metadata for all of the Instances in the specified Location.",
                "operationId": "listInstances",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned the status and metadata for all of the Instances in the specified Location.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListInstanceResponse"
                                },
                                "examples": {
                                    "INSTANCES": {
                                        "$ref": "#/components/examples/ListInstanceResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Instances"
                ],
                "summary": "Create an Instance",
                "description": "Creates a new Instance resource.",
                "operationId": "createInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceRequest"
                            },
                            "examples": {
                                "AWS_INSTANCE": {
                                    "$ref": "#/components/examples/AWSInstanceRequest"
                                },
                                "AZURE_INSTANCE": {
                                    "$ref": "#/components/examples/AzureInstanceRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The Instance resource has been accepted for creation. The Instance will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceResponse"
                                },
                                "examples": {
                                    "AWS_INSTANCE": {
                                        "$ref": "#/components/examples/AWSInstance"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter or URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error creating the instance: could not parse the request payload. Check the format of the request, then try again.",
                                    "code": 120647
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a conflict with an existing Instance resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error creating the instance: the instance already exists. Use a unique name for the instance, then try again.",
                                    "code": 120652
                                }
                            }
                        }
                    }
                }
            }
        },
        "/infrastructure/locations/{locationName}/instances/{instanceName}": {
            "get": {
                "tags": [
                    "Instances"
                ],
                "summary": "Get an Instance",
                "description": "Returns the status and metadata for a single Instance.",
                "operationId": "getInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    },
                    {
                        "$ref": "#/components/parameters/InstanceName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully returned the details for an Instance.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceResponse"
                                },
                                "examples": {
                                    "OTHER_INSTANCE": {
                                        "$ref": "#/components/examples/OtherInstance"
                                    },
                                    "AWS_INSTANCE": {
                                        "$ref": "#/components/examples/AWSInstance"
                                    },
                                    "AZURE_INSTANCE": {
                                        "$ref": "#/components/examples/AzureInstance"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Instance not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error getting the instance: the specified instance does not exist. Check the instance name, then try again.",
                                    "code": 120603
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Instances"
                ],
                "summary": "Update an Instance",
                "description": "Updates the description or display name of an existing Instance.",
                "operationId": "updateInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    },
                    {
                        "$ref": "#/components/parameters/InstanceName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceRequest"
                            },
                            "examples": {
                                "OTHER_INSTANCE": {
                                    "$ref": "#/components/examples/InstanceUpdateRequest"
                                },
                                "AWS_INSTANCE": {
                                    "$ref": "#/components/examples/InstanceUpdateRequest"
                                },
                                "AZURE_INSTANCE": {
                                    "$ref": "#/components/examples/InstanceUpdateRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the existing Instance.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceResponse"
                                },
                                "examples": {
                                    "OTHER_INSTANCE": {
                                        "$ref": "#/components/examples/OtherInstance"
                                    },
                                    "AWS_INSTANCE": {
                                        "$ref": "#/components/examples/AWSInstance"
                                    },
                                    "AZURE_INSTANCE": {
                                        "$ref": "#/components/examples/AzureInstance"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter or URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error updating the instance: could not parse the request payload. Check the format of the request, then try again.",
                                    "code": 120612
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Instance not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error updating the instance: the specified instance does not exist. Check the instance name, then try again.",
                                    "code": 120614
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Instances"
                ],
                "summary": "Delete an Instance",
                "operationId": "deleteInstance",
                "description": "Deletes the specified Instance.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    },
                    {
                        "$ref": "#/components/parameters/InstanceName"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request for delete accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the Instance. No content is returned."
                    },
                    "404": {
                        "description": "Instance not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error deleting the instance: the specified instance does not exist. Check the instance name, then try again.",
                                    "code": 120609
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed to delete the requested Instance resource.\n\nThe Instance is referenced by another resource. Remove the references to the Instance, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "example": {
                                    "message": "Error deleting the instance: the NGINX instance is being configured. Try again later. If the problem persists, contact the system administrator.",
                                    "code": 120640
                                }
                            }
                        }
                    }
                }
            }
        },
        "/infrastructure/locations/{locationName}/instance-templates": {
            "get": {
                "tags": [
                    "Instance Templates"
                ],
                "summary": "List Instance Templates",
                "description": "Returns an unfiltered list of all Instance Template resources in the specified Location.",
                "operationId": "listInstanceTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all Instance Template resources for the specified Location.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListInstanceTemplateResponse"
                                },
                                "examples": {
                                    "INSTANCE_TEMPLATES": {
                                        "$ref": "#/components/examples/AWSListResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Instance Templates"
                ],
                "summary": "Create an Instance Template",
                "description": "Creates a new Instance Template resource.",
                "operationId": "addInstanceTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    }
                ],
                "requestBody": {
                    "description": "Defines the Instance Template resource.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceTemplate"
                            },
                            "examples": {
                                "AWS_INSTANCE_TEMPLATE": {
                                    "$ref": "#/components/examples/AWSRequest"
                                },
                                "AZURE_INSTANCE_TEMPLATE": {
                                    "$ref": "#/components/examples/AzureRequestWithMarketplaceImageAndUsingExistingNic"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the requested Instance Template resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceTemplateResponse"
                                },
                                "examples": {
                                    "AWS_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AWSResponse"
                                    },
                                    "AZURE_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AzureResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    }
                }
            }
        },
        "/infrastructure/locations/{locationName}/instance-templates/{instanceTemplateName}": {
            "get": {
                "tags": [
                    "Instance Templates"
                ],
                "summary": "Get an Instance Template",
                "description": "Gets information for the specified Instance Template resource.",
                "operationId": "getInstanceTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    },
                    {
                        "$ref": "#/components/parameters/InstanceTemplateName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the requested Instance Template resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceTemplateResponse"
                                },
                                "examples": {
                                    "AWS_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AWSResponse"
                                    },
                                    "AZURE_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AzureResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Instance Templates"
                ],
                "summary": "Upsert an Instance Template",
                "description": "Creates a new Instance Template resource or updates an existing Instance Template resource.",
                "operationId": "upsertInstanceTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    },
                    {
                        "$ref": "#/components/parameters/InstanceTemplateName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstanceTemplate"
                            },
                            "examples": {
                                "AWS_INSTANCE_TEMPLATE": {
                                    "$ref": "#/components/examples/AWSRequest"
                                },
                                "AZURE_INSTANCE_TEMPLATE": {
                                    "$ref": "#/components/examples/AzureRequestWithCustomImageAndCreatingNewNicAndPublicIP"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Instance Template resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceTemplateResponse"
                                },
                                "examples": {
                                    "AWS_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AWSResponse"
                                    },
                                    "AZURE_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AzureResponse"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested Instance Template resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstanceTemplateResponse"
                                },
                                "examples": {
                                    "AWS_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AWSResponse"
                                    },
                                    "AZURE_INSTANCE_TEMPLATE": {
                                        "$ref": "#/components/examples/AzureResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Instance Templates"
                ],
                "summary": "Delete an Instance Template",
                "description": "Deletes the specified Instance Template resource.",
                "operationId": "deleteInstanceTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LocationName"
                    },
                    {
                        "$ref": "#/components/parameters/InstanceTemplateName"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified Instance Template resource."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/platform/integrations": {
            "get": {
                "tags": [
                    "Integrations"
                ],
                "summary": "List all Integrations",
                "description": "Returns an unfiltered list of account Integrations.",
                "operationId": "listIntegrations",
                "x-f5-experimental": true,
                "responses": {
                    "200": {
                        "description": "Successfully retreived all Integration accounts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListIntegrationResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integrations"
                ],
                "summary": "Create an Integration account",
                "description": "Creates a new Integration account.",
                "operationId": "addIntegration",
                "x-f5-experimental": true,
                "requestBody": {
                    "description": "Defines the Integration account to be added.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the requested Integration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIntegrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a conflict with an existing Integration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/platform/integrations/{integrationName}": {
            "get": {
                "tags": [
                    "Integrations"
                ],
                "summary": "Get an Integration account",
                "description": "Gets information about a specific Integration account.",
                "operationId": "getIntegration",
                "x-f5-experimental": true,
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntegrationName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the requested Integration account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIntegrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Integration not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Integrations"
                ],
                "summary": "Update an Integration account",
                "description": "Updates an Integration account.",
                "operationId": "updateIntegration",
                "x-f5-experimental": true,
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntegrationName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully received the request to update the specified Integration account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIntegrationResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully updated the specified Integration account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIntegrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integrations"
                ],
                "summary": "Delete an Integration account",
                "description": "Deletes the specified Integration account resource.",
                "operationId": "deleteIntegration",
                "x-f5-experimental": true,
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IntegrationName"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified Integration resource."
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/security/identity-providers": {
            "get": {
                "tags": [
                    "Identity Providers"
                ],
                "summary": "List Identity Providers",
                "description": "Returns a list of all Identity Provider resources.\n\n> **Note:** These resources were known as Client Groups in pre-3.x versions of NGINX Controller.\n",
                "operationId": "identityProvidersSearch",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of Identity Provider resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/security/identity-providers/{identityProviderName}": {
            "get": {
                "tags": [
                    "Identity Providers"
                ],
                "summary": "Get an Identity Provider",
                "description": "Returns the specified Identity Provider resource.",
                "operationId": "identityProvidersGet",
                "responses": {
                    "200": {
                        "description": "Successfully returnd the specified Identity Provider resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed due to insufficient privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request cannot be processed because of an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Identity Providers"
                ],
                "summary": "Upsert an Identity Provider",
                "description": "Creates a new Identity Provider, or creates an existing Identity Provider resource.\n",
                "operationId": "identityProvidersPut",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityProvider"
                            },
                            "examples": {
                                "IdentityProviderRequest": {
                                    "$ref": "#/components/examples/IdentityProviderRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Identity Provider resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested Identity Provider resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successfully accepted the requested Identity Provider resource and is currently processing it.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to update or create an Identity Provider resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Identity Providers"
                ],
                "summary": "Delete an Identity Provider",
                "description": "Deletes the specified Identity Provider resource.",
                "operationId": "identityProvidersDelete",
                "responses": {
                    "202": {
                        "description": "The Identity Provider resource has been marked for deletion. The resource will be deleted after the publish/cleanup succeeds.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProvider"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified Identity Provider resource. No content is returned."
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to delete an Identity Provider resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request cannot be processed because of an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/identityProviderName"
                }
            ]
        },
        "/security/identity-providers/{identityProviderName}/clients": {
            "get": {
                "tags": [
                    "Identity Provider Clients"
                ],
                "summary": "List Identity Provider Clients",
                "description": "Returns a list of all Identity Provider Client resources.\n",
                "operationId": "identityProviderClientsSearch",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of Identity Provider Client resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClientList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Identity Provider Clients"
                ],
                "summary": "Create Multiple Identity Provider Clients",
                "description": "Creates or updates multiple Identity Provider Client resources.\n",
                "operationId": "identityProviderClientsPutList",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityProviderClientList"
                            },
                            "examples": {
                                "IdentityProviderClientListRequest": {
                                    "$ref": "#/components/examples/IdentityProviderClientListRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully upserted the Identity Provider Client resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClientList"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successfully accepted the requested Identity Provider Client resources and is currently processing it.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClientList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The Identity Provider Client resource conflicts with another resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/identityProviderName"
                }
            ]
        },
        "/security/identity-providers/{identityProviderName}/clients/{identityProviderClientName}": {
            "get": {
                "tags": [
                    "Identity Provider Clients"
                ],
                "summary": "Get an Identity Provider Client",
                "description": "Returns information for the specified Identity Provider Client resource.",
                "operationId": "identityProviderClientsGet",
                "responses": {
                    "200": {
                        "description": "Successfully returned the specified Identity Provider Client resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider Client resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Identity Provider Clients"
                ],
                "summary": "Update an Identity Provider Client",
                "description": "Updates the specified Identity Provider Client resource.",
                "operationId": "identityProviderClientsPut",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityProviderClient"
                            },
                            "examples": {
                                "IdentityProviderClientRequest": {
                                    "$ref": "#/components/examples/IdentityProviderClientRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Identity Provider Client resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the specified Identity Provider Client resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successfully accepted the requested Identity Provider Client resource and is currently processing it.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to update or create an Identity Provider Client resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Identity Provider Clients"
                ],
                "summary": "Update an Identity Provider Client",
                "description": "Updates the specified Identity Provider Client resource.",
                "operationId": "identityProviderClientsPatch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdentityProviderClient"
                            },
                            "examples": {
                                "IdentityProviderClientPatchMetadataRequest": {
                                    "$ref": "#/components/examples/IdentityProviderClientPatchMetadataRequest"
                                },
                                "IdentityProviderClientPatchDesiredStateRequest": {
                                    "$ref": "#/components/examples/IdentityProviderClientPatchDesiredStateRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Identity Provider Client resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Successfully accepted the request to update an Identity Provider Client resource and is currently processing it.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider Client resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to update an Identity Provider Client resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Identity Provider Clients"
                ],
                "summary": "Delete an Identity Provider Client",
                "description": "Deletes the specified Identity Provider Client resource.",
                "operationId": "identityProviderClientsDelete",
                "responses": {
                    "202": {
                        "description": "Identity Provider Client resource has been marked for deletion. The resource will be\ndeleted after the publish/cleanup succeeds.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProviderClient"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified Identity Provider Client resource. No content is returned."
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Identity Provider Client resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to delete an Identity Provider Client resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/identityProviderName"
                },
                {
                    "$ref": "#/components/parameters/identityProviderClientName"
                }
            ]
        },
        "/services": {
            "x-f5-experimental": true,
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "List the metadata for all instances of the desired resource.",
                "description": "Returns a metadata list of the requested resource. The resources that can be queried is currently restricted to published-apis.\n",
                "operationId": "listResources",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a metadata list of the requested resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceMeta"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The resource defined in the query parameters could not be found or is not yet supported. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The environment defined in the query parameters could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "resource",
                    "in": "query",
                    "description": "Desired resource to list.",
                    "required": true,
                    "style": "form",
                    "explode": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "published-apis"
                        ]
                    }
                },
                {
                    "name": "environment",
                    "in": "query",
                    "description": "Filter desired resource based on the environment.",
                    "required": false,
                    "style": "form",
                    "explode": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/services/api-definitions": {
            "get": {
                "tags": [
                    "API Definitions"
                ],
                "summary": "List API Definitions",
                "description": "Returns a list of API Definition resources.",
                "operationId": "apiDefinitionsSearch",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all API Definitions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/services/api-definitions/{apiDefinitionName}": {
            "get": {
                "tags": [
                    "API Definitions"
                ],
                "summary": "Get an API Definition",
                "description": "Gets information about a specified API Definition.\n",
                "operationId": "apiDefinitionsGet",
                "responses": {
                    "200": {
                        "description": "Successfully returned the specified API Definition resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinition"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified API Definition resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "API Definitions"
                ],
                "summary": "Upsert an API Definition",
                "description": "Creates a new API Definition or updates an existing API Definition resource.\n",
                "operationId": "apiDefinitionsPut",
                "requestBody": {
                    "description": "Defines the API Definition resource to create, or the updates to apply to an existing API Definition resource.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified API Definition resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinition"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested API Definition resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "API Definitions"
                ],
                "summary": "Delete an API Definition",
                "description": "Deletes the specified API Definition resource.",
                "operationId": "apiDefinitionsDelete",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the requested API Definition resource. No content is returned.\n"
                    },
                    "404": {
                        "description": "The specified API Definition resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed to delete the specified API Definition resource. Delete any referenced Published APIs or remove the references, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/apiDefinitionName"
                }
            ]
        },
        "/services/api-definitions/{apiDefinitionName}/versions": {
            "get": {
                "tags": [
                    "API Definition Versions"
                ],
                "summary": "List API Definition Versions",
                "description": "Lists all Versions for the specified API Definition resource.\n",
                "operationId": "definitionVersionsSearch",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of API Definition Version resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersionList"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified API Definition resource was not found or does not contain any Versions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "API Definition Versions"
                ],
                "summary": "Add an API Definition Version",
                "description": "Creates a single new API Definition Version resource or multiple Version resources.\n",
                "operationId": "definitionVersionsPutList",
                "requestBody": {
                    "description": "Creates, updates, or deletes an API Definition Version resource. It interacts with a list of items.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIDefinitionVersionList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully received the request to create the API Definition Version resource(s).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersionList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed to delete the specified API Definition Version resource(s) as it has at least one dependent Published API. Delete the referenced Published API(s), then try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "API Definition Versions"
                ],
                "summary": "Delete API Definition Versions",
                "description": "Deletes all Versions for the specified API Definition resource.\n",
                "operationId": "definitionVersionsDeleteList",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the Versions for the requested API Definition resource. No content is returned.\n"
                    },
                    "404": {
                        "description": "The specified API Definition resource was not found or does not contain any Versions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed to delete the Versions for the specified API Definition resource. Delete or remove any references to Published APIs, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/apiDefinitionName"
                }
            ]
        },
        "/services/api-definitions/{apiDefinitionName}/versions/{version}": {
            "get": {
                "tags": [
                    "API Definition Versions"
                ],
                "summary": "Get an API Definition Version",
                "description": "Gets information about an API Definition Version resource.\n",
                "operationId": "definitionVersionsGet",
                "responses": {
                    "200": {
                        "description": "Successfully returned the specified API Definition Version resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified API Definition Version resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "API Definition Versions"
                ],
                "summary": "Upsert an API Definition Version",
                "description": "Creates a single new Version resource or updates an existing API Definition Version resource.\n",
                "operationId": "definitionVersionsPut",
                "requestBody": {
                    "description": "Creates or updates an API Definition Version resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIDefinitionVersion"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified API Definition Version resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersion"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested API Definition Version resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "API Definition Versions"
                ],
                "summary": "Delete an API Definition Version",
                "description": "Deletes an API Definition Version resource.\n",
                "operationId": "definitionVersionsDelete",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the API Definition Version resource.\n"
                    },
                    "404": {
                        "description": "The specified API Definition Version resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed to delete the specified API Definition resource. Delete or remove any references to Published APIs, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/apiDefinitionName"
                },
                {
                    "$ref": "#/components/parameters/versionName"
                }
            ]
        },
        "/services/api-definitions/{apiDefinitionName}/versions/{version}/import": {
            "put": {
                "tags": [
                    "API Definition Version Import"
                ],
                "summary": "Import an API Definition Version",
                "description": "Imports an API spec to the specified Version of an API Definition.\n\nUse this endpoint to import a raw API specification to define your API.\n\n- This endpoint accepts a valid OpenAPI 3 spec, formatted as valid JSON or YAML.\n- The file provided for import will be validated against the\n  [OAS v3 schema](https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v3.0/schema.yaml).\n- You must specify a \"Content-Type\" header when importing an API spec.\n  The endpoint accepts the following \"Content-Type\" values:\n\n  - application/json\n  - application/yaml\n  - text/x-yaml\n  - application/x-yaml\n  - text/yaml\n  - application/xml\n  - text/xml\n",
                "operationId": "definitionVersionsImport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/x-yaml": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/yaml": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "text/xml": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully completed the API Version Import request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersion"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested API Definition Version resource from the spec provided.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDefinitionVersion"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request body contains an unsupported content type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/apiDefinitionName"
                },
                {
                    "$ref": "#/components/parameters/versionName"
                }
            ]
        },
        "/services/environments": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "List all Environments",
                "description": "Returns a list of all Environment resources.\n",
                "operationId": "listEnvironments",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all Environment resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EnvironmentList"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Create an Environment",
                "description": "Creates a new Environment resource.\n",
                "operationId": "createEnvironment",
                "requestBody": {
                    "description": "Defines the Environment resource to create.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Environment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the specified Environment.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Environment resource has been accepted for creation. The Environment will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/services/environments/{environmentName}": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get an Environment",
                "description": "Returns information for the specified Environment.\n",
                "operationId": "getEnvironment",
                "responses": {
                    "200": {
                        "description": "Successfully returned information for the specified Environment resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Environments"
                ],
                "summary": "Upsert an Environment",
                "description": "Creates a new Environment or updates an existing Environment resource.\n",
                "operationId": "updateEnvironment",
                "requestBody": {
                    "description": "Defines the Environment to create or the updates to make to an existing Environment.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Environment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Environment resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the specified Environment resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Environment resource has been accepted for creation or update. The Environment will be created or updated after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Environments"
                ],
                "summary": "Delete an Environment",
                "description": "Deletes the specified Environment resource.",
                "operationId": "deleteEnvironment",
                "responses": {
                    "202": {
                        "description": "The Environment resource has been marked for deletion. The Environment will be deleted after the underlying resources have been deleted.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified Environment resource. No content returned.\n"
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Failed to delete the requested Environment resource.\n\nThe Environment contains references to other objects. Delete the referenced objects or remove the references, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/apps": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "List all Apps",
                "description": "Returns a list of all App resources.\n",
                "operationId": "listApps",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all App resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AppList"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Apps"
                ],
                "summary": "Create an App",
                "description": "Creates a new App resource.",
                "operationId": "createApp",
                "requestBody": {
                    "description": "An App.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the specified App resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The App resource has been accepted for creation. The App will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the App.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/apps/{appName}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Get an App",
                "description": "Gets the information for a specific App resource.\n",
                "operationId": "getApp",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved information for the requested App resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Apps"
                ],
                "summary": "Upsert an App",
                "description": "Creates a new App resource or updates an existing App resource.\n",
                "operationId": "updateApp",
                "requestBody": {
                    "description": "Defines the App resource to create or update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified App resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the specified App resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The App resource has been accepted for creation or update. The App will be created or updated after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Apps"
                ],
                "summary": "Delete an App",
                "description": "Deletes the specified App resource.\n\nYou must delete all of an App's child resources before you delete the App.\n",
                "operationId": "deleteApp",
                "responses": {
                    "202": {
                        "description": "The App resource has been marked for deletion. The App will be deleted after the underlying resources have been deleted.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified App resource.\n"
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request to delete the specified App resource failed.\nThe App contains references to active objects and cannot be deleted. Delete the child objects or remove the references, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the App.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                },
                {
                    "name": "appName",
                    "description": "The name of the App.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/AppName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/apps/{appName}/components": {
            "get": {
                "tags": [
                    "Components"
                ],
                "summary": "List all Components",
                "description": "Returns a list of all of the Component resources that are contained by the specified App.\n",
                "operationId": "listAppComponents",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of Component resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Components"
                ],
                "summary": "Create a Component",
                "description": "Creates a new Component resource.\n",
                "operationId": "createAppComponent",
                "requestBody": {
                    "description": "Defines the Component resource to create.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Component"
                            },
                            "examples": {
                                "ComponentRequest": {
                                    "$ref": "#/components/examples/ComponentRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the requested Component resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Component resource has been accepted for creation. The Component will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to create a Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the Component's parent App.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                },
                {
                    "name": "appName",
                    "description": "The name of the App that contains the Component resource.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/AppName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/apps/{appName}/components/{componentName}": {
            "get": {
                "tags": [
                    "Components"
                ],
                "summary": "Get a Component",
                "description": "Returns information for the specified Component.\n",
                "operationId": "getAppComponent",
                "responses": {
                    "200": {
                        "description": "Successfully returned the requested Component resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Components"
                ],
                "summary": "Upsert a Component",
                "description": "Creates a new Component or updates an existing Component resource.\n",
                "operationId": "updateAppComponent",
                "requestBody": {
                    "description": "Defines the Component resource to create or update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Component"
                            },
                            "examples": {
                                "ComponentRequest": {
                                    "$ref": "#/components/examples/ComponentRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Component resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the specified Component resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Component resource has been accepted for creation or update. The Component will be created or updated after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to update or create a Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Components"
                ],
                "summary": "Delete a Component",
                "description": "Deletes the specified Component resource.",
                "operationId": "deleteAppComponent",
                "responses": {
                    "202": {
                        "description": "Component resource has been marked for deletion. The resource will be\ndeleted after the underlying resources have been freed.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Component"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified Component. No content returned.\n"
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to delete a Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the Component's parent App.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                },
                {
                    "name": "appName",
                    "description": "The name of the App that contains the Component resource.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/AppName"
                    }
                },
                {
                    "name": "componentName",
                    "description": "The name of the Component resource.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/ComponentName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/apps/{appName}/published-apis": {
            "get": {
                "tags": [
                    "Published APIs"
                ],
                "summary": "List Published APIs",
                "description": "Returns a list of all Published APIs for the specified Environment and App.\n",
                "operationId": "listPublishedAPIs",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of Published APIs for the specified Environment.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishedAPIList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/environmentName"
                },
                {
                    "$ref": "#/components/parameters/appName"
                }
            ]
        },
        "/services/environments/{environmentName}/apps/{appName}/published-apis/{publishedApiName}": {
            "get": {
                "tags": [
                    "Published APIs"
                ],
                "summary": "Get a Published API",
                "description": "Gets information about the specified Published API.\n",
                "operationId": "getPublishedAPI",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the specified Published API resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishedAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Published API resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Published APIs"
                ],
                "summary": "Upsert a Published API",
                "description": "Creates a new Published API or updates an existing Published API resource.",
                "operationId": "upsertPublishedAPI",
                "requestBody": {
                    "description": "Defines the Published API to create, or the updates to apply to an existing Published API resource.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublishedAPI"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Published API resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishedAPI"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested Published API resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishedAPI"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The request to create a Published API succeeded. The resource will be created when the configuration is complete.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishedAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Published APIs"
                ],
                "summary": "Delete a Published API",
                "description": "Deletes the specified Published API resource.",
                "operationId": "deletePublishedAPI",
                "responses": {
                    "202": {
                        "description": "Published API has been marked for deletion. The resource will be\ndeleted after the publish/cleanup succeeds.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublishedAPI"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified Published API resource. No content is returned."
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified Published API resource was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/environmentName"
                },
                {
                    "$ref": "#/components/parameters/appName"
                },
                {
                    "$ref": "#/components/parameters/publishedApiName"
                }
            ]
        },
        "/services/environments/{environmentName}/certs": {
            "get": {
                "tags": [
                    "Certs"
                ],
                "summary": "List all Certs",
                "description": "Returns a list of Cert metadata objects for all of the Certs in the specified environment.",
                "operationId": "listCerts",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of Certs for the specified Environment.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Certs"
                ],
                "summary": "Create a Cert",
                "operationId": "createCert",
                "description": "Creates a new Cert resource in the specified Environment.\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Cert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the specified Cert resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the Cert.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/certs/{certName}": {
            "get": {
                "tags": [
                    "Certs"
                ],
                "summary": "Get a Cert",
                "operationId": "getCert",
                "description": "Returns information for a specific Cert resource.",
                "responses": {
                    "200": {
                        "description": "Sucessfully retrieved the requested Cert.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Certs"
                ],
                "summary": "Upsert a Cert",
                "operationId": "updateCert",
                "description": "Creates a new Cert or updates an existing Cert resource.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Cert"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sucessfully updated the specified Cert resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertStatus"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested Cert resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Certs"
                ],
                "summary": "Delete a Cert",
                "operationId": "deleteCert",
                "description": "Deletes the specified Cert resource.",
                "responses": {
                    "204": {
                        "description": "The specified Cert resource was successfully deleted."
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request to delete the specified Cert resource failed.\nThe Cert is referenced by active objects and cannot be deleted. Delete the referencing objects or remove the references, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the Cert.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                },
                {
                    "name": "certName",
                    "description": "The name of the Cert.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/ResourceName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/devportals": {
            "get": {
                "tags": [
                    "DevPortals"
                ],
                "summary": "List all DevPortals",
                "description": "Returns a list of all DevPortal resources.\n",
                "operationId": "ListDevPortals",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all DevPortals resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DevPortalsList"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Illegal input parameter or malformed URI specified. Check for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DevPortals"
                ],
                "summary": "Create DevPortal",
                "description": "Creates new Dev Portal resource.",
                "operationId": "CreateDevPortal",
                "requestBody": {
                    "description": "A Dev Portal.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DevPortal"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a specified Dev Portal resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Dev Portal resource has been accepted for creation. A Dev Portal will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Illegal input parameter or malformed URI specified. Check for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the DevPortal.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/devportals/{devPortalName}": {
            "get": {
                "tags": [
                    "DevPortals"
                ],
                "summary": "Get Dev Portal",
                "description": "Gets the information for a specific Dev Portal resource.\n",
                "operationId": "GetDevPortal",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved information for the requested Dev Portal resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Illegal input parameter or malformed URI specified. Check for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DevPortals"
                ],
                "summary": "Upsert Dev Portal",
                "description": "Creates a new Dev Portal resource or updates an existing Dev Portal resource.\n",
                "operationId": "UpsertDevPortal",
                "requestBody": {
                    "description": "Defines a Dev Portal resource to create or update.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DevPortal"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Dev Portal resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the specified Dev Portal resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Dev Portal resource has been accepted for creation or update. Dev Portal will be created or updated after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Illegal input parameter or malformed URI specified. Check for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DevPortals"
                ],
                "summary": "Delete a DevPortal",
                "description": "Deletes the specified Dev Portal resource.\nYou must delete all of a Dev Portal's child resources before you delete the Dev Portal.\n",
                "operationId": "DeleteDevPortal",
                "responses": {
                    "202": {
                        "description": "The DevPortal resource has been marked for deletion. DevPortal will be deleted after the underlying resources have been deleted.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevPortal"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified DevPortal resource.\n"
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request to delete the specified App resource failed.\nThe App contains references to active objects and cannot be deleted. Delete the child objects or remove the references, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the DevPortal.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                },
                {
                    "name": "devPortalName",
                    "description": "The name of the DevPortal.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/gateways": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "List all Gateways",
                "description": "Returns a list of all Gateways in the specified Environment.\n",
                "operationId": "listGateways",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of all Gateways for the specified Environment.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GatewayList"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Create a Gateway",
                "description": "Creates a new Gateway resource.\n",
                "operationId": "createGateway",
                "requestBody": {
                    "description": "Defines the Gateway resource to create.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gateway"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the specified Gateway resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Gateway resource has been accepted for creation. The Gateway will be created after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to create a Gateway resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the Gateway resource.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                }
            ]
        },
        "/services/environments/{environmentName}/gateways/{gatewayName}": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Get a Gateway",
                "description": "Returns information for the specified Gateway resource.\n",
                "operationId": "getGateway",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the requested Gateway resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Upsert a Gateway",
                "description": "Creates a new Gateway or updates an existing Gateway resource.\n",
                "operationId": "updateGateway",
                "requestBody": {
                    "description": "Defines the Gateway resource to create or the updates to make to an existing Gateway resource.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gateway"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the specified Gateway resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the specified Gateway resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The Gateway resource has been accepted for creation or update. The Gateway will be created or updated after it is done configuring.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to update or create a Gateway resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Delete a Gateway",
                "description": "Deletes the specified Gateway resource.",
                "operationId": "deleteGateway",
                "responses": {
                    "202": {
                        "description": "The Gateway resource has been marked for deletion. The Gateway will be deleted after the underlying resources have been deleted.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successfully deleted the specified Gateway resource. No content is returned.\n"
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request to delete a Gateway resource failed.\nThe Gateway is referenced by an App Component(s) and cannot be deleted.\nDelete the App Component or remove the reference, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The request to delete a Gateway resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "environmentName",
                    "description": "The name of the Environment that contains the Gateway resource.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentName"
                    }
                },
                {
                    "name": "gatewayName",
                    "description": "The name of the Gateway.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/GatewayName"
                    }
                }
            ]
        },
        "/services/errorsets": {
            "get": {
                "tags": [
                    "Error Sets"
                ],
                "summary": "List all Error Sets.",
                "description": "Returns a list of all the Error Sets.",
                "operationId": "listErrorSets",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of Error Sets.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSetList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/services/errorsets/{errorSetName}": {
            "get": {
                "tags": [
                    "ErrorSets"
                ],
                "summary": "Get an Error Set.",
                "operationId": "getErrorSet",
                "description": "Returns the information for a specific Error Set.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the requested Error Set.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSet"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "errorSetName",
                    "description": "The name of the Error Set.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/ResourceName"
                    }
                }
            ]
        },
        "/security/policies": {
            "x-f5-experimental": true,
            "get": {
                "x-f5-experimental": true,
                "tags": [
                    "Policies"
                ],
                "summary": "List all Policies",
                "description": "Returns a list of Policy metadata objects for all of the Policies.",
                "operationId": "listPolicies",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of Policies.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "x-f5-experimental": true,
                "tags": [
                    "Policies"
                ],
                "summary": "Create a Policy",
                "operationId": "createPolicy",
                "description": "Creates a new Policy resource.\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Policy"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created the specified Policy resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request failed due to a naming conflict with an existing resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/security/policies/{policyName}": {
            "get": {
                "x-f5-experimental": true,
                "tags": [
                    "Policies"
                ],
                "summary": "Get a Policy",
                "operationId": "getPolicy",
                "description": "Returns information for a specific Policy resource.",
                "responses": {
                    "200": {
                        "description": "Sucessfully retrieved the requested Policy.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "x-f5-experimental": true,
                "tags": [
                    "Policies"
                ],
                "summary": "Upsert a Policy",
                "operationId": "updatePolicy",
                "description": "Creates a new Policy or updates an existing Policy resource.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Policy"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sucessfully updated the specified Policy resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyStatus"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Successfully created the requested Policy resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "x-f5-experimental": true,
                "tags": [
                    "Policies"
                ],
                "summary": "Delete a Policy",
                "operationId": "deletePolicy",
                "description": "Deletes the specified Policy resource.",
                "responses": {
                    "204": {
                        "description": "The specified Policy resource was successfully deleted."
                    },
                    "404": {
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request to delete the specified Policy resource failed.\nThe Policy is referenced by active objects and cannot be deleted. Delete the referencing objects or remove the references, then try again.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "policyName",
                    "description": "The name of the Policy.",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/ResourceName"
                    }
                }
            ]
        }
    },
    "components": {
        "parameters": {
            "LocationName": {
                "name": "locationName",
                "in": "path",
                "description": "The name of the Location that contains the Instance.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "InstanceName": {
                "name": "instanceName",
                "in": "path",
                "description": "The name of the Instance.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "environmentName": {
                "name": "environmentName",
                "description": "The name of the Environment that contains the Component's parent App.",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/EnvironmentName"
                }
            },
            "appName": {
                "name": "appName",
                "description": "The name of the App that contains the Component resource.",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/AppName"
                }
            },
            "apiDefinitionName": {
                "name": "apiDefinitionName",
                "in": "path",
                "description": "The name of the API Definition resource.",
                "required": true,
                "style": "simple",
                "explode": false,
                "example": "shopping-app-api-def",
                "schema": {
                    "type": "string"
                }
            },
            "publishedApiName": {
                "name": "publishedApiName",
                "in": "path",
                "description": "The name of the Published API resource.",
                "required": true,
                "style": "simple",
                "explode": false,
                "example": "shopping-app-api-staging",
                "schema": {
                    "type": "string"
                }
            },
            "versionName": {
                "name": "version",
                "in": "path",
                "description": "The Version of the API Definition.",
                "required": true,
                "style": "simple",
                "explode": false,
                "example": "v1_2fd4e1c6",
                "schema": {
                    "type": "string"
                }
            },
            "InstanceGroupName": {
                "name": "instanceGroupName",
                "in": "path",
                "description": "The name of the Instance Group.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "identityProviderName": {
                "name": "identityProviderName",
                "in": "path",
                "description": "The name of the Identity Provider.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "identityProviderClientName": {
                "name": "identityProviderClientName",
                "in": "path",
                "description": "The name of the Identity Provider Client.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "InstanceTemplateName": {
                "name": "instanceTemplateName",
                "in": "path",
                "description": "The name of the Instance Template resource.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "IntegrationName": {
                "name": "integrationName",
                "in": "path",
                "description": "The name of the Integration resource.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "SelfLinks": {
                "type": "object",
                "description": "The SelfLinks object contains a link from the resource to itself.\nThis object is used only in responses.\n",
                "properties": {
                    "rel": {
                        "type": "string",
                        "example": "/api/v1/services/environments/prod",
                        "description": "`rel` contains the complete path fragment of a URI and can be used\nto construct a query to the object.\n"
                    }
                }
            },
            "ResourceMeta": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[^A-Z\\s\\x00-\\x1f\\x60\\x7f\\;\\*\\\"\\[\\]\\{\\}\\\\\\/%\\?:=&\\~\\^|#<>]+$",
                        "minLength": 1,
                        "maxLength": 1024,
                        "example": "resource-name",
                        "description": "Resource name is a unique identifier for a resource within the context of a namespace.\nResource names must conform to [RFC 1738 Section 2.2](https://www.ietf.org/rfc/rfc1738.txt) and have a valid syntax for email addresses. The following rules are enforced:\n\n- do not utilize URL encoding;\n- do not include spaces;\n- do not use uppercase characters, for example, 'A-Z'; extended character sets are supported;\n- do not use the following characters: `\"`, `*`, `:`, `;`, `/`, `\\`, `%`, `?`, `hash`, `=`, `&`, `|`, `~`, `^`, `{`, `}`, `[`, `]`, `<`, `>`;\n- cannot start or end with an `@` sign;\n\nFor example: For a collection resource located at\n\n`https://controller.example.com/api/v1/services/apps/shopping_@1`\n\nthe resource name is \"shopping_@1\".\n"
                    },
                    "displayName": {
                        "type": "string",
                        "example": "My Display Name",
                        "description": "`displayName` is a user friendly resource name. It can be used to define \na longer, and less constrained, name for a resource.\n\nDisplay names:\n\n- are optional (defaults to an empty string if no value is provided),\n- do not have to be unique, \n- cannot be assigned by the server.\n"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a sample description string. It provides information about the resource.",
                        "description": "`description` is a free-form text property. You can use it to provide information that helps \nto identify the resource.\n\nDescriptions:\n\n- are optional (defaults to an empty string if no value is provided),\n- do not have to be unique, \n- cannot be assigned by the server.\n"
                    },
                    "kind": {
                        "type": "string",
                        "example": "<collection>-<object>",
                        "description": "Kind is a string representation of an API resource's data type.\nIt is assigned by the server and cannot be changed. \n\nWhen creating a `kind`, the server uses hyphens to connect word segments; \nsingleton and collection item resources are not pluralized.\n"
                    },
                    "uid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                        "description": "Unique Identifier (UID)\n\nUID is a unique identifier in time and space for a resource. \nWhen you create a resource, the server assigns a UID to the resource.\n\nRefer to [IETF RFC 4122](https://tools.ietf.org/html/rfc4122) for more information.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "production_public",
                            "dev",
                            "new_app",
                            "us-west-1",
                            "emea"
                        ],
                        "description": "You can assign `tags` to a resource as a way to help map, scope, \nand organize resources. \n\nThe system uses tag selectors to specify selection criteria that \nmatch resources that have particular tags.\n"
                    },
                    "ref": {
                        "type": "string",
                        "example": "/services/environments/prod",
                        "description": "The `ref` field contains a reference to another NGINX Controller resource.\n"
                    },
                    "links": {
                        "$ref": "#/components/schemas/SelfLinks"
                    },
                    "createTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-07-29T09:12:33.001Z",
                        "description": "A timestamp that represents the server time when the resource was created.\n\nCreate time is not guaranteed to be set in \"happens-before\" order\nacross separate operations.\n\nIn JSON format, `create_time` type is encoded as a string in the\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt).\n\nFor example: 2018-04-01T01:30:15.01Z\n\nCreate Time is assigned by the server and cannot be changed.\n"
                    },
                    "updateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-07-29T10:12:33.001Z",
                        "description": "A timestamp that represents the server time when the resource was last modified.\n\nResources that have never been updated do not have an `update_time` stamp.\n\nThe default value for resources that have never been updated is the local \nlanguage-specific equivalent of \"null\".\n\nIn JSON format, `update_time` type is encoded as a string as described in \n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt).\n"
                    }
                }
            },
            "ResourceName": {
                "type": "string",
                "description": "The name of a resource.",
                "example": "production"
            },
            "ConfigStateTally": {
                "type": "object",
                "properties": {
                    "isConfigured": {
                        "type": "boolean",
                        "description": "The configuration operation is complete."
                    },
                    "isConfiguring": {
                        "type": "boolean",
                        "description": "The configuration of the resource, or of its child(ren), is in process."
                    },
                    "isError": {
                        "type": "boolean",
                        "description": "An error occurred while configuring the resource or its child(ren)."
                    },
                    "isDeleting": {
                        "type": "boolean",
                        "description": "A delete operation is in progress for the resource or its child(ren)."
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of resources to which the configuration operation applies."
                    },
                    "configured": {
                        "type": "integer",
                        "description": "The number of resources that have a complete and valid configuration."
                    },
                    "configuring": {
                        "type": "integer",
                        "description": "The number of resources that are in the process of being configured."
                    },
                    "error": {
                        "type": "integer",
                        "description": "The number of resources that have encountered an error during the configuration process."
                    },
                    "deleting": {
                        "type": "integer",
                        "description": "The number of resources that are in the process of being deleted."
                    }
                }
            },
            "ConfigCondition": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The condition type."
                    },
                    "message": {
                        "type": "string",
                        "description": "A human-readable message that provides additional information about the configuration operation."
                    }
                }
            },
            "ConfigState": {
                "type": "object",
                "description": "A representation of the resource's current configuration state \nthat comprises the status of the resource itself (`selfConfigState`) and any child \nresources (`childrenConfigState`).\n\nThe conditions array provides additional information during configuration changes.\n",
                "properties": {
                    "selfConfigState": {
                        "$ref": "#/components/schemas/ConfigStateTally"
                    },
                    "childrenConfigState": {
                        "$ref": "#/components/schemas/ConfigStateTally"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigCondition"
                        }
                    }
                }
            },
            "NamedLinks": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SelfLinks"
                    },
                    {
                        "type": "object",
                        "description": "Contains information about the object being referred to.\n\nThese are generally details -- like the object name and display name --\nthat are useful to a consumer of the API that performs further\nprocessing. \n\nThis object is only present in responses.\n  \n",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "production",
                                "description": "The name of the linked resource.\n"
                            },
                            "displayName": {
                                "type": "string",
                                "example": "Production Environment",
                                "description": "A user friendly resource name."
                            }
                        }
                    }
                ]
            },
            "ResourceRef": {
                "type": "object",
                "required": [
                    "ref"
                ],
                "properties": {
                    "ref": {
                        "type": "string",
                        "example": "/services/environments/prod",
                        "description": "A reference to another NGINX Controller resource.\n"
                    },
                    "links": {
                        "$ref": "#/components/schemas/NamedLinks"
                    }
                }
            },
            "ErrorDetail": {
                "type": "object",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "Error doing <action>: <reason for error>. This can lead to <potential consequences>. Try <action> to resolve the issue.",
                        "description": "A detailed error message returned by the server. \n\nThese messages contain the following information, where applicable:\n\n- What happened.\n- Why it happened.\n- What the consequences are (if any).\n- Recommended action to take to resolve the issue.\n"
                    }
                }
            },
            "ErrorModel": {
                "type": "object",
                "required": [
                    "message",
                    "code"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error doing <action>.",
                        "description": "A human-readable message, in English, that describes the error.\n"
                    },
                    "code": {
                        "type": "integer",
                        "example": 1234567,
                        "description": "A numeric error code that can be used to identify errors for support purposes.\n"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        }
                    }
                }
            },
            "EnvironmentName": {
                "type": "string"
            },
            "AppName": {
                "type": "string"
            },
            "Instance": {
                "type": "object",
                "description": "An NGINX Instance.",
                "required": [
                    "metadata"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/InstanceCurrentStatus"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/InstanceDesiredState"
                    }
                }
            },
            "GetInstanceResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Instance"
                    }
                ]
            },
            "ListInstanceResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Instance"
                        }
                    }
                }
            },
            "InstanceRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Instance"
                    }
                ],
                "description": "Describes the Instance to update."
            },
            "InstanceDesiredState": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/OtherInstanceDesiredState"
                    },
                    {
                        "$ref": "#/components/schemas/AWSInstanceDesiredState"
                    },
                    {
                        "$ref": "#/components/schemas/AzureInstanceDesiredState"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "OTHER_INSTANCE": "#/components/schemas/OtherInstanceDesiredState",
                        "AWS_INSTANCE": "#/components/schemas/AWSInstanceDesiredState",
                        "AZURE_INSTANCE": "#/components/schemas/AzureInstanceDesiredState"
                    }
                }
            },
            "InstanceCurrentStatus": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/OtherInstanceCurrentStatus"
                    },
                    {
                        "$ref": "#/components/schemas/AWSInstanceCurrentStatus"
                    },
                    {
                        "$ref": "#/components/schemas/AzureInstanceCurrentStatus"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "OTHER_INSTANCE": "#/components/schemas/OtherInstanceCurrentStatus",
                        "AWS_INSTANCE": "#/components/schemas/AWSInstanceCurrentStatus",
                        "AZURE_INSTANCE": "#/components/schemas/AzureInstanceCurrentStatus"
                    }
                }
            },
            "OtherInstanceDesiredState": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "OTHER_INSTANCE is an Instance pre-installed and self-registered during NGINX installation.\n",
                        "enum": [
                            "OTHER_INSTANCE"
                        ]
                    },
                    "nginx": {
                        "$ref": "#/components/schemas/Nginx"
                    }
                }
            },
            "AWSInstanceDesiredState": {
                "type": "object",
                "required": [
                    "type",
                    "templateRef"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "AWS_INSTANCE is an Instance hosted in Amazon Web Services (AWS).\n",
                        "enum": [
                            "AWS_INSTANCE"
                        ]
                    },
                    "templateRef": {
                        "$ref": "#/components/schemas/TemplateRef"
                    },
                    "nginx": {
                        "$ref": "#/components/schemas/Nginx"
                    }
                }
            },
            "AzureInstanceDesiredState": {
                "x-f5-experimental": true,
                "type": "object",
                "required": [
                    "type",
                    "templateRef"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "AZURE_INSTANCE is an Instance hosted in Microsoft Azure.",
                        "enum": [
                            "AZURE_INSTANCE"
                        ]
                    },
                    "templateRef": {
                        "$ref": "#/components/schemas/TemplateRef"
                    },
                    "nginx": {
                        "$ref": "#/components/schemas/Nginx"
                    }
                }
            },
            "OtherInstanceCurrentStatus": {
                "type": "object",
                "description": "Contains the current status of the Other Instance.",
                "required": [
                    "type",
                    "hostname",
                    "version",
                    "agent",
                    "status",
                    "muted"
                ],
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the Instance."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of NGINX running on the Instance."
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Indicates the status of notifications and alerts.\n- 'True' means that notifications and alerts are muted.\n- 'False' means that notifications and alerts are active.\n",
                        "deprecated": true
                    },
                    "type": {
                        "type": "string",
                        "description": "OTHER_INSTANCE is an Instance pre-installed and self-registered during NGINX installation.\n",
                        "enum": [
                            "OTHER_INSTANCE"
                        ]
                    },
                    "networkConfig": {
                        "$ref": "#/components/schemas/OtherNetworkConfig"
                    },
                    "agent": {
                        "$ref": "#/components/schemas/Agent"
                    },
                    "nginx": {
                        "$ref": "#/components/schemas/Nginx"
                    },
                    "status": {
                        "deprecated": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConfigState"
                            }
                        ]
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "legacyNginxMetadata": {
                        "deprecated": true,
                        "$ref": "#/components/schemas/LegacyNginxMetadata"
                    },
                    "legacySystemMetadata": {
                        "deprecated": true,
                        "$ref": "#/components/schemas/LegacySystemMetadata"
                    }
                }
            },
            "AWSInstanceCurrentStatus": {
                "type": "object",
                "description": "Contains the current status of the AWS Instance.",
                "required": [
                    "type",
                    "hostname",
                    "version",
                    "agent",
                    "muted"
                ],
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the Instance."
                    },
                    "instanceID": {
                        "type": "string",
                        "description": "The ID of the Instance."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of NGINX running on the Instance."
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Indicates the status of notifications and alerts.\n- 'True' means that notifications and alerts are muted.\n- 'False' means that notifications and alerts are active.\n",
                        "deprecated": true
                    },
                    "type": {
                        "type": "string",
                        "description": "AWS_INSTANCE is an Instance hosted in Amazon Web Services (AWS).\n",
                        "enum": [
                            "AWS_INSTANCE"
                        ]
                    },
                    "networkConfig": {
                        "$ref": "#/components/schemas/AWSNetworkConfig"
                    },
                    "agent": {
                        "$ref": "#/components/schemas/Agent"
                    },
                    "templateRef": {
                        "$ref": "#/components/schemas/TemplateRef"
                    },
                    "nginx": {
                        "$ref": "#/components/schemas/Nginx"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "legacyNginxMetadata": {
                        "deprecated": true,
                        "$ref": "#/components/schemas/LegacyNginxMetadata"
                    },
                    "legacySystemMetadata": {
                        "deprecated": true,
                        "$ref": "#/components/schemas/LegacySystemMetadata"
                    }
                }
            },
            "AzureInstanceCurrentStatus": {
                "x-f5-experimental": true,
                "type": "object",
                "description": "Contains the current status of the Azure Instance.",
                "required": [
                    "type",
                    "hostname",
                    "version",
                    "agent"
                ],
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the Instance."
                    },
                    "instanceID": {
                        "type": "string",
                        "description": "The ID of the Instance."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of NGINX running on the Instance."
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Indicates the mute status of notifications and alerts.\n- 'True' means that notifications and alerts are muted.\n- 'False' means that notifications and alerts are active.\n",
                        "deprecated": true
                    },
                    "type": {
                        "type": "string",
                        "description": "AZURE_INSTANCE is an Instance hosted in Microsoft Azure.",
                        "enum": [
                            "AZURE_INSTANCE"
                        ]
                    },
                    "networkConfig": {
                        "$ref": "#/components/schemas/AzureNetworkConfig"
                    },
                    "agent": {
                        "$ref": "#/components/schemas/Agent"
                    },
                    "templateRef": {
                        "$ref": "#/components/schemas/TemplateRef"
                    },
                    "nginx": {
                        "$ref": "#/components/schemas/Nginx"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "legacyNginxMetadata": {
                        "deprecated": true,
                        "$ref": "#/components/schemas/LegacyNginxMetadata"
                    },
                    "legacySystemMetadata": {
                        "deprecated": true,
                        "$ref": "#/components/schemas/LegacySystemMetadata"
                    }
                }
            },
            "TemplateRef": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceRef"
                    }
                ],
                "description": "Reference to an existing Instance Template resource. This field cannot be updated."
            },
            "LegacySystemMetadata": {
                "type": "object",
                "deprecated": true,
                "description": "Metadata that describe the operating system attributes and properties of an Instance host system.  It is\nintended for internal use only and is subject to change.\n",
                "additionalProperties": true
            },
            "LegacyNginxMetadata": {
                "type": "object",
                "deprecated": true,
                "description": "Metadata that describe an Instance's NGINX process configuration and properties.  It is intended\nfor internal use only and is subject to change.\n",
                "additionalProperties": true
            },
            "Agent": {
                "type": "object",
                "description": "The properties of the Controller Agent running on the Instance",
                "required": [
                    "version"
                ],
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "The version of Controller Agent that is currently running on the Instance."
                    },
                    "online": {
                        "type": "boolean",
                        "description": "The status of Controller Agent that is currently running on the Instance."
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/AgentCredentials"
                    }
                }
            },
            "AgentCredentials": {
                "type": "object",
                "description": "The credentials of the Controller Agent running on the Instance.",
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the Agent."
                    },
                    "uuid": {
                        "type": "string",
                        "description": "The uuid of the Agent."
                    }
                }
            },
            "OtherNetworkConfig": {
                "type": "object",
                "description": "The network config of a customer deployed Instance.",
                "properties": {
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OtherNetworkInterface"
                        }
                    }
                }
            },
            "OtherNetworkInterface": {
                "type": "object",
                "description": "A network interface for a customer deployed Instance.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network interface attached to the Instance."
                    },
                    "privateDnsName": {
                        "type": "string",
                        "description": "The private, internal hostname of the instance, which resolves to the Instance's private IP address.\n"
                    },
                    "privateIP": {
                        "type": "string",
                        "description": "The private IP address of the network interface."
                    },
                    "privateIPv6": {
                        "type": "string",
                        "description": "The private IPv6 address of the network interface."
                    },
                    "alternateIPList": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alternateIPv6List": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subnet": {
                        "type": "object",
                        "description": "The subnet that contains the interface.",
                        "properties": {
                            "cidrIPv4": {
                                "type": "string",
                                "description": "The IPv4 CIDR for the subnet."
                            },
                            "cidrIPv6": {
                                "type": "string",
                                "description": "The IPv6 CIDR for the subnet."
                            }
                        }
                    }
                }
            },
            "AWSNetworkConfig": {
                "type": "object",
                "description": "The network config of an AWS Instance.",
                "properties": {
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AWSNetworkInterface"
                        }
                    }
                }
            },
            "AWSNetworkInterface": {
                "type": "object",
                "description": "A network interface for an AWS Instance.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network interface attached to the Instance."
                    },
                    "privateDnsName": {
                        "type": "string",
                        "description": "The private, internal hostname of the instance, which resolves to the Instance's private IP address. \n"
                    },
                    "publicDnsName": {
                        "type": "string",
                        "description": "The public hostname of the instance, which resolves to the public IP address of the Instance. \n"
                    },
                    "privateIP": {
                        "type": "string",
                        "description": "The private IP address of the network interface."
                    },
                    "publicIP": {
                        "type": "string",
                        "description": "The public IP address of the network interface."
                    },
                    "subnet": {
                        "type": "object",
                        "description": "The subnet that contains the interface.",
                        "properties": {
                            "subnetID": {
                                "type": "string",
                                "description": "The ID of the subnet into which the instance was launched."
                            },
                            "cidrIPv4": {
                                "type": "string",
                                "description": "The IPv4 CIDR for the subnet."
                            },
                            "cidrIPv6": {
                                "type": "string",
                                "description": "The IPv6 CIDR for the subnet."
                            }
                        }
                    }
                }
            },
            "AzureNetworkConfig": {
                "type": "object",
                "description": "The network config of an Azure Instance.",
                "properties": {
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureNetworkInterface"
                        }
                    }
                }
            },
            "AzureNetworkInterface": {
                "type": "object",
                "description": "A network interface associated with an Azure Instance.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network interface attached to the Instance."
                    },
                    "publicDnsName": {
                        "type": "string",
                        "description": "The public hostname of the instance, which resolves to the public IP address of the Instance. \n"
                    },
                    "privateIP": {
                        "type": "string",
                        "description": "The private IP address of the network interface."
                    },
                    "publicIP": {
                        "type": "string",
                        "description": "The public IP address of the network interface."
                    },
                    "privateIPv6": {
                        "type": "string",
                        "description": "The private IPv6 address of the network interface."
                    },
                    "publicIPv6": {
                        "type": "string",
                        "description": "The public IPv6 address of the network interface."
                    },
                    "subnet": {
                        "type": "object",
                        "description": "The subnet that contains the interface.",
                        "properties": {
                            "subnetID": {
                                "type": "string",
                                "description": "The ID of the subnet that contains the Instance."
                            },
                            "cidrIPv4": {
                                "type": "string",
                                "description": "The IPv4 CIDR for the subnet."
                            },
                            "cidrIPv6": {
                                "type": "string",
                                "description": "The IPv6 CIDR for the subnet."
                            }
                        }
                    }
                }
            },
            "Nginx": {
                "type": "object",
                "description": "Defines properties and configuration values for Nginx.\n",
                "properties": {
                    "process": {
                        "$ref": "#/components/schemas/NginxProcess"
                    }
                }
            },
            "NginxProcess": {
                "type": "object",
                "description": "Defines configuration directives that are defined in the main configuration context.\n",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "Defines user credentials used by worker processes.\n",
                        "default": "nginx"
                    },
                    "group": {
                        "type": "string",
                        "description": "Defines group credentials used by worker processes.  This will be ignored if the user\nproperty is not defined.\n",
                        "default": "nginx"
                    }
                }
            },
            "APIDefinition": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/APIDefinitionCurrentStatus"
                    }
                }
            },
            "APIDefinitionCurrentStatus": {
                "type": "object",
                "properties": {
                    "apiDefinitionVersionRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    }
                }
            },
            "APIDefinitionList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIDefinition"
                        }
                    }
                }
            },
            "APIDefinitionSpecMapping": {
                "type": "object",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/components/schemas/RESTAPISpec"
                        },
                        {
                            "$ref": "#/components/schemas/gRPCProxySpec"
                        },
                        {
                            "$ref": "#/components/schemas/SOAPAPISpec"
                        }
                    ]
                }
            },
            "RESTAPISpec": {
                "type": "object",
                "description": "Validates an Imported OpenAPI 3 spec formatted as JSON using the [OAS v3 schema.yaml](https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v3.0/schema.yaml) specification.\n"
            },
            "SOAPAPISpec": {
                "type": "object",
                "description": "Validates and Transforms an Imported WSDL spec.\n",
                "properties": {
                    "wsdl": {
                        "type": "string"
                    },
                    "soap-config": {
                        "$ref": "#/components/schemas/SoapConfig"
                    }
                },
                "required": [
                    "soap-config"
                ]
            },
            "SoapConfig": {
                "type": "object",
                "description": "Transformed WSDL to OpenAPI spec config.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "tns": {
                        "type": "string"
                    },
                    "qualifiedFields": {
                        "type": "boolean"
                    },
                    "endpoints": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SoapConfigEndpoint"
                        }
                    },
                    "types": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SoapConfigWSDLType"
                        }
                    },
                    "messages": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SoapConfigMessage"
                        }
                    }
                },
                "required": [
                    "name",
                    "url",
                    "tns",
                    "endpoints",
                    "types",
                    "messages",
                    "qualifiedFields"
                ]
            },
            "SoapConfigEndpoint": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "in": {
                        "type": "string"
                    },
                    "out": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "restHTTPMethod": {
                        "type": "string",
                        "enum": [
                            "get",
                            "head",
                            "post",
                            "put",
                            "patch",
                            "delete"
                        ]
                    },
                    "restURI": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "in",
                    "out",
                    "enabled",
                    "restHTTPMethod",
                    "restURI"
                ]
            },
            "SoapConfigMessage": {
                "type": "object",
                "description": "Validates and Transforms an Imported WSDL spec.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "parts": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/SoapConfigMessagePart"
                        }
                    }
                },
                "required": [
                    "name",
                    "parts"
                ]
            },
            "SoapConfigMessagePart": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "restName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "ref": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "restName"
                ]
            },
            "SoapConfigWSDLType": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SoapConfigNestedWSDLType"
                        }
                    },
                    "hasOneOfProperties": {
                        "type": "boolean"
                    },
                    "hasOrderedProperties": {
                        "type": "boolean"
                    },
                    "enum": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "type",
                    "hasOneOfProperties",
                    "hasOrderedProperties"
                ]
            },
            "SoapConfigNestedWSDLType": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "restName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "ref": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "isArray": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "restName",
                    "isRequired",
                    "isArray"
                ]
            },
            "gRPCProxySpec": {
                "x-f5-experimental": true,
                "type": "object",
                "description": "Validates an Imported gRPC spec.\n"
            },
            "APIDefinitionVersion": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/APIDefinitionVersionMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/APIDefinitionVersionDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/APIDefinitionVersionCurrentStatus"
                    }
                }
            },
            "APIDefinitionVersionList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIDefinitionVersion"
                        }
                    }
                }
            },
            "APIDefinitionVersionDesiredState": {
                "type": "object",
                "properties": {
                    "specs": {
                        "$ref": "#/components/schemas/APIDefinitionSpecMapping"
                    }
                }
            },
            "APIDefinitionVersionCurrentStatus": {
                "type": "object",
                "properties": {
                    "specs": {
                        "$ref": "#/components/schemas/APIDefinitionSpecMapping"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "publishedApiRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    }
                }
            },
            "apiDefinitionVersionRef": {
                "type": "object",
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Reference to the Version of the API Definition.\n",
                        "example": "/services/api-definitions/baseball-stats/versions/v1"
                    },
                    "links": {
                        "$ref": "#/components/schemas/NamedLinks"
                    }
                }
            },
            "APIDefinitionVersionMeta": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isDefaultVersion": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "EnvironmentList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Environment"
                        }
                    }
                }
            },
            "Environment": {
                "type": "object",
                "description": "An Environment is a logical container that you can use to organize your Apps. A few commonly-used examples of Environments are \"dev\" and \"production\".",
                "required": [
                    "metadata"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "x-f5-experimental": true,
                        "type": "object"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/EnvironmentCurrentStatus"
                    }
                }
            },
            "EnvironmentCurrentStatus": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "gatewayRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "appRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "certRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    }
                }
            },
            "DevPortalsList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DevPortal"
                        }
                    }
                }
            },
            "DevPortal": {
                "type": "object",
                "description": "A Dev Portal.",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/DevPortalDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/DevPortalCurrentStatus"
                    }
                },
                "additionalProperties": false
            },
            "DevPortalDesiredState": {
                "type": "object",
                "required": [
                    "ingress"
                ],
                "properties": {
                    "ingress": {
                        "type": "object",
                        "required": [
                            "gatewayRefs"
                        ],
                        "properties": {
                            "gatewayRefs": {
                                "type": "array",
                                "description": "Reference to the Gateways that act as a Developer Portal.",
                                "items": {
                                    "$ref": "#/components/schemas/ResourceRef"
                                }
                            }
                        },
                        "additionalProperties": false
                    },
                    "devPortalTheme": {
                        "$ref": "#/components/schemas/DevPortalTheme"
                    },
                    "publishedApiRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "devPortalType": {
                        "type": "string",
                        "enum": [
                            "private",
                            "public",
                            "partner"
                        ]
                    }
                },
                "additionalProperties": false
            },
            "DevPortalCurrentStatus": {
                "type": "object",
                "properties": {
                    "ingress": {
                        "type": "object",
                        "required": [
                            "gatewayRefs"
                        ],
                        "properties": {
                            "gatewayRefs": {
                                "type": "array",
                                "description": "Reference to the Gateways that act as a Developer Portal.",
                                "items": {
                                    "$ref": "#/components/schemas/ResourceRef"
                                }
                            }
                        }
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "devPortalTheme": {
                        "$ref": "#/components/schemas/DevPortalTheme"
                    },
                    "publishedApiRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "publishedTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-07-29T10:12:33.001Z",
                        "description": "Published time is a timestamp that represents the server time when the resource was published.\nResources that have never been published do not have an `published_time` stamp.\nThe default value is language-specific and, in general, should be equivalent of the null construct.\nIn JSON format, `published_time` type is encoded as a string as described in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt).\n\nFor example: 2018-04-01T01:30:15.01Z\n"
                    }
                }
            },
            "DevPortalTheme": {
                "description": "Specifies the theming for the Developer Portal.",
                "type": "object",
                "properties": {
                    "overrideDefaultTheme": {
                        "type": "boolean",
                        "example": false,
                        "description": "Override the default Dev Portal theme with a custom theme."
                    },
                    "customConfig": {
                        "type": "object",
                        "properties": {
                            "primary": {
                                "$ref": "#/components/schemas/ThemeConfig"
                            },
                            "secondary": {
                                "$ref": "#/components/schemas/ThemeConfig"
                            },
                            "fonts": {
                                "type": "object",
                                "properties": {
                                    "assignments": {
                                        "$ref": "#/components/schemas/FontAssignments"
                                    }
                                },
                                "additionalProperties": false
                            }
                        },
                        "additionalProperties": false
                    },
                    "brandName": {
                        "$ref": "#/components/schemas/BrandName"
                    },
                    "logo": {
                        "$ref": "#/components/schemas/FileEncodedString"
                    },
                    "defaultLogo": {
                        "$ref": "#/components/schemas/FileEncodedString"
                    },
                    "favicon": {
                        "$ref": "#/components/schemas/FileEncodedString"
                    }
                },
                "additionalProperties": false
            },
            "ThemeConfig": {
                "type": "object",
                "properties": {
                    "color": {
                        "$ref": "#/components/schemas/ThemeConfigColors"
                    }
                },
                "additionalProperties": false
            },
            "ThemeConfigColors": {
                "type": "object",
                "properties": {
                    "primary": {
                        "type": "string",
                        "example": "#575fe6",
                        "description": "A CSS color string used as a primary brand theme color."
                    },
                    "accent": {
                        "type": "string",
                        "example": "#48dbac",
                        "description": "A CSS color string used as an optional second brand theme color."
                    },
                    "gray": {
                        "type": "string",
                        "example": "#1e1f27",
                        "description": "A CSS color string used to generate a grayscale color palette."
                    },
                    "link": {
                        "type": "string",
                        "example": "#0f55bd",
                        "description": "A CSS color string used to generate anchor link colors."
                    },
                    "fill": {
                        "type": "string",
                        "example": "#fafbfc",
                        "description": "A CSS color string used as the main background color."
                    },
                    "ink": {
                        "type": "string",
                        "example": "#323441",
                        "description": "A CSS color string used as the main text color."
                    },
                    "status": {
                        "$ref": "#/components/schemas/ThemeConfigStatusColors"
                    }
                },
                "additionalProperties": false
            },
            "ThemeConfigStatusColors": {
                "type": "object",
                "description": "A collection of CSS color strings used to indicate status.",
                "properties": {
                    "info": {
                        "type": "string",
                        "example": "#20a9ea",
                        "description": "A CSS color string used to indicate an informational status."
                    },
                    "success": {
                        "type": "string",
                        "example": "#37c497",
                        "description": "A CSS color string used to indicate a success status."
                    },
                    "error": {
                        "type": "string",
                        "example": "#ed4f54",
                        "description": "A CSS color string used to indicate an error status."
                    },
                    "warning": {
                        "type": "string",
                        "example": "#ffb900",
                        "description": "A CSS color string used to indicate a warning status."
                    }
                },
                "additionalProperties": false
            },
            "ThemeConfigFonts": {
                "type": "object",
                "description": "A collection of fonts for theming typography.",
                "properties": {
                    "headings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeConfigFont"
                            }
                        ],
                        "description": "A font used for headlines."
                    },
                    "body": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeConfigFont"
                            }
                        ],
                        "description": "A font used for body copy."
                    },
                    "cta": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeConfigFont"
                            }
                        ],
                        "description": "A font used for calls to action."
                    },
                    "code": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeConfigFont"
                            }
                        ],
                        "description": "A font used for code and syntax highlighting."
                    },
                    "special": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeConfigFont"
                            }
                        ],
                        "description": "A font used for special accent typography."
                    },
                    "baseFontSize": {
                        "$ref": "#/components/schemas/BaseFontSize"
                    },
                    "embeddedLink": {
                        "$ref": "#/components/schemas/EmbeddedLink"
                    }
                },
                "additionalProperties": false
            },
            "ThemeConfigFont": {
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string",
                        "enum": [
                            "google-web-font"
                        ]
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "FileEncodedString": {
                "type": "string",
                "example": "c29tZXRoaW5nIA==",
                "description": "Base64 encoded string of a logo."
            },
            "BrandName": {
                "type": "string",
                "example": "Acme",
                "description": "Name of the brand."
            },
            "BaseFontSize": {
                "type": "integer",
                "example": 14
            },
            "EmbeddedLink": {
                "type": "string"
            },
            "FontAssignments": {
                "type": "object",
                "$ref": "#/components/schemas/ThemeConfigFonts"
            },
            "ListInstanceGroupsResponse": {
                "x-f5-experimental": true,
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstanceGroup"
                        }
                    }
                }
            },
            "GetInstanceGroupResponse": {
                "x-f5-experimental": true,
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceGroup"
                    }
                ]
            },
            "InstanceGroup": {
                "x-f5-experimental": true,
                "type": "object",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/InstanceGroupState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/InstanceGroupStatus"
                    }
                }
            },
            "InstanceGroupState": {
                "x-f5-experimental": true,
                "type": "object",
                "properties": {
                    "bigIpIntegration": {
                        "$ref": "#/components/schemas/BigIpIntegration"
                    }
                }
            },
            "InstanceGroupStatus": {
                "x-f5-experimental": true,
                "type": "object",
                "required": [
                    "state"
                ],
                "properties": {
                    "instanceRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstanceRef"
                        }
                    },
                    "bigIpIntegration": {
                        "$ref": "#/components/schemas/BigIpIntegration"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    }
                }
            },
            "InstanceRef": {
                "x-f5-experimental": true,
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceRef"
                    }
                ],
                "description": "Reference to a member Instance resource."
            },
            "BigIpIntegration": {
                "x-f5-experimental": true,
                "type": "object",
                "properties": {
                    "integrationRef": {
                        "description": "Reference to a BIG-IP Integration object, indicating that the Instances will be members of a BIG-IP server pool.",
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    "serverPoolIp": {
                        "description": "The Instance IP address or CIDR to use when the Instance is a member of a BIG-IP server pool.\nIf this is a CIDR, then the Instance IP address that matches the mask will be the member address in the BIG-IP server pool.\nOtherwise, if this is an absolute IP address, that will be used as the server-pool member address.\n",
                        "type": "string"
                    }
                }
            },
            "IdentityProviderList": {
                "type": "object",
                "description": "Contains a list of Identity Provider resources.",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProvider"
                        }
                    }
                }
            },
            "APIKeyIdentityProvider": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Use an API key for authentication.\n\n> **Note:** Use of API Key authN is not recommended in production environments.\n",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "API_KEY"
                        ]
                    }
                }
            },
            "JWTIdentityProvider": {
                "required": [
                    "jwkFile",
                    "type"
                ],
                "type": "object",
                "description": "Use a JWT for authentication.",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "JWT"
                        ]
                    },
                    "jwkFile": {
                        "description": "Provide the path to - or URI for - a `.jwk` file to use for authentication.\nYou can also provide the `.jwk` file contents inline.\n",
                        "discriminator": {
                            "propertyName": "type",
                            "mapping": {
                                "INLINE": "#/components/schemas/JWKInline",
                                "REMOTE_FILE": "#/components/schemas/JWKRemoteFile"
                            }
                        },
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/JWKInline"
                            },
                            {
                                "$ref": "#/components/schemas/JWKRemoteFile"
                            }
                        ]
                    }
                }
            },
            "IdentityProviderDesiredState": {
                "required": [
                    "environmentRefs",
                    "identityProvider"
                ],
                "type": "object",
                "properties": {
                    "environmentRefs": {
                        "description": "The Enviroment associated with the Identity Provider.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "identityProvider": {
                        "$ref": "#/components/schemas/IdentityProviderData"
                    }
                },
                "example": {
                    "environmentRefs": [
                        {
                            "ref": "/services/environments/env1"
                        }
                    ],
                    "identityProvider": {
                        "type": "JWT",
                        "jwkFile": {
                            "type": "REMOTE_FILE",
                            "uri": "https://example.com/keys.jwk",
                            "cacheExpire": "10h"
                        }
                    }
                }
            },
            "IdentityProviderCurrentStatus": {
                "required": [
                    "environmentRefs",
                    "identityProvider",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "environmentRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "identityProvider": {
                        "$ref": "#/components/schemas/IdentityProviderData"
                    }
                }
            },
            "IdentityProvider": {
                "required": [
                    "desiredState",
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/IdentityProviderCurrentStatus"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/IdentityProviderDesiredState"
                    }
                }
            },
            "IdentityProviderData": {
                "description": "The means of authentication used by the Identity Provider (JWT or APIKey).",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/JWTIdentityProvider"
                    },
                    {
                        "$ref": "#/components/schemas/APIKeyIdentityProvider"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "API_KEY": "#/components/schemas/APIKeyIdentityProvider",
                        "JWT": "#/components/schemas/JWTIdentityProvider"
                    }
                }
            },
            "IdentityProviderClientDesiredState": {
                "type": "object",
                "properties": {
                    "credential": {
                        "$ref": "#/components/schemas/IdentityProviderClientCredential"
                    }
                }
            },
            "IdentityProviderClientCurrentStatus": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "credential": {
                        "$ref": "#/components/schemas/IdentityProviderClientCredential"
                    }
                }
            },
            "IdentityProviderClient": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/IdentityProviderClientCurrentStatus"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/IdentityProviderClientDesiredState"
                    }
                }
            },
            "IdentityProviderClientCredential": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/IdentityProviderAPIKey"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "API_KEY": "#/components/schemas/IdentityProviderAPIKey"
                    }
                }
            },
            "IdentityProviderClientList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProviderClient"
                        }
                    }
                }
            },
            "UpdateIdentityProviderClient": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/IdentityProviderClientCurrentStatus"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/IdentityProviderClientDesiredState"
                    }
                }
            },
            "JWK": {
                "type": "object",
                "properties": {
                    "kty": {
                        "type": "string",
                        "description": "The cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\"."
                    },
                    "use": {
                        "type": "string",
                        "description": "The intended use of the public key, whether for encrypting data or verifying the signature on data."
                    },
                    "key_ops": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The operation(s) for which the key is intended to be used."
                    },
                    "alg": {
                        "type": "string",
                        "description": "The algorithm intended for use with the key."
                    },
                    "kid": {
                        "type": "string",
                        "description": "The key ID used to match a specific key."
                    },
                    "x5u": {
                        "type": "string",
                        "description": "The X.509 URL that refers to a resource for an X.509 public key certificate or certificate chain."
                    },
                    "x5c": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The X.509 Certificate Chain of one or more PKIX certificates. The PKIX certificate containing the key value MUST be the first certificate."
                    },
                    "x5t": {
                        "type": "string",
                        "description": "The X.509 Certificate SHA-1 Thumbprint (a.k.a. digest) of the DER encoding of an X.509 certificate."
                    },
                    "x5t256": {
                        "type": "string",
                        "description": "The X.509 Certificate SHA-256 Thumbprint (a.k.a. digest) of the DER encoding of an X.509 certificate."
                    },
                    "p2s": {
                        "type": "string",
                        "description": "The salt input value  for PBES2 key encryption, which is used as part of the PBKDF2 salt value."
                    },
                    "p2c": {
                        "type": "string",
                        "description": "The PBKDF2 iteration count for PBES2 key encryption, represented as a positive JSON integer. The iteration count adds computational expense, ideally compounded by the possible range of keys introduced by the salt.  A minimum iteration count of 1000 is RECOMMENDED."
                    },
                    "crv": {
                        "type": "string",
                        "description": "The cryptographic curve used for an Elliptic Curve public key."
                    },
                    "x": {
                        "type": "string",
                        "description": "The x coordinate of the point for an Elliptic Curve public key."
                    },
                    "y": {
                        "type": "string",
                        "description": "The y coordinate of the point for an Elliptic Curve public key."
                    },
                    "e": {
                        "type": "string",
                        "description": "The exponent value for an RSA public key."
                    },
                    "exp": {
                        "type": "string",
                        "description": "The exponent value for an RSA public key."
                    },
                    "n": {
                        "type": "string",
                        "description": "The modulus value for an RSA public key."
                    },
                    "mod": {
                        "type": "string",
                        "description": "The modulus value for an RSA public key."
                    },
                    "d": {
                        "type": "string",
                        "description": "The private key value for an Elliptic Curve private key OR the private exponent value for an RSA private key."
                    },
                    "p": {
                        "type": "string",
                        "description": "The first prime factor for an RSA private key."
                    },
                    "q": {
                        "type": "string",
                        "description": "The second prime factor for an RSA private key."
                    },
                    "dp": {
                        "type": "string",
                        "description": "The Chinese Remainder Theorem (CRT) exponent of the first factor for an RSA private key."
                    },
                    "dq": {
                        "type": "string",
                        "description": "The CRT exponent of the second factor for an RSA private key."
                    },
                    "qi": {
                        "type": "string",
                        "description": "The CRT coefficient of the second factor for an RSA private key."
                    },
                    "oth": {
                        "description": "An array of information about any third and subsequent primes, should they exist.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "r": {
                                    "type": "string",
                                    "description": "The prime factor."
                                },
                                "d": {
                                    "type": "string",
                                    "description": "The factor CRT exponent of the corresponding prime factor."
                                },
                                "t": {
                                    "type": "string",
                                    "description": "The factor CRT coefficient of the corresponding prime factor."
                                }
                            }
                        }
                    },
                    "iv": {
                        "type": "string",
                        "description": "The base64url-encoded representation of the 96-bit Initialization Vector value used for the AES GCM key encryption operation."
                    },
                    "tag": {
                        "type": "string",
                        "description": "The base64url-encoded representation of the 128-bit Authentication Tag value resulting from the AES GCM key encryption operation."
                    },
                    "k": {
                        "type": "string",
                        "description": "The key value of the symmetric (or other single-valued) key."
                    },
                    "enc": {
                        "type": "string",
                        "description": "The encryption algorithm for JWE."
                    },
                    "epk": {
                        "type": "object",
                        "description": "The ephemeral public key value created by the originator for use in ECDH-ES key agreement algorithms."
                    },
                    "apu": {
                        "type": "string",
                        "description": "The agreement PartyUInfo for ECDH-ES key agreement algorithms, containing information about the producer."
                    },
                    "apv": {
                        "type": "string",
                        "description": "The agreement PartyVInfo for ECDH-ES key agreement algorithms."
                    }
                }
            },
            "JWKInline": {
                "required": [
                    "type",
                    "keys"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "INLINE"
                        ]
                    },
                    "keys": {
                        "type": "array",
                        "description": "The JSON Web Keys.\n",
                        "items": {
                            "$ref": "#/components/schemas/JWK"
                        },
                        "example": [
                            {
                                "k": "ZmFudGFzdGljand0",
                                "kty": "oct",
                                "kid": 1
                            }
                        ]
                    }
                },
                "description": "Inline contents of a JWK JSON file.\n"
            },
            "JWKRemoteFile": {
                "required": [
                    "uri",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "REMOTE_FILE"
                        ]
                    },
                    "uri": {
                        "type": "string"
                    },
                    "cacheExpire": {
                        "pattern": "^[0-9]+[h|m|s]{1}$",
                        "type": "string",
                        "description": "The length of time for which to cache the remote file.\nNGINX will retrieve the file from the source URI when the cache time expires.\n",
                        "example": "10h"
                    }
                }
            },
            "IdentityProviderAPIKey": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "API_KEY"
                        ]
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "If left empty, a key will automatically be generated.\nThe apikey must contain only alphanumeric characters, underscores, and hyphens.\nThe length of the apikey must be between 8 - 256 characters.\n",
                        "example": "ADv-2ZheQnL_jVx5klhQ39"
                    }
                }
            },
            "CertMetadata": {
                "type": "object",
                "description": "Public certificate metadata.",
                "required": [
                    "authorityKeyIdentifier",
                    "commonName",
                    "expired",
                    "expiry",
                    "issuer",
                    "publicKeyType",
                    "serialNumber",
                    "signatureAlgorithm",
                    "subject",
                    "subjectAlternativeName",
                    "subjectKeyIdentifier",
                    "thumbprint",
                    "thumbprintAlgorithm",
                    "validFrom",
                    "validTo",
                    "version"
                ],
                "properties": {
                    "authorityKeyIdentifier": {
                        "type": "string",
                        "example": "2B D0 69 47 94 76 09 FE F4 6B 8D 2E 40 A6 F7 47 4D 7F 08 5E",
                        "description": "The identifier of the signing authority for the certificate."
                    },
                    "commonName": {
                        "type": "string",
                        "example": "www.myapp.com",
                        "description": "The Common Name (CN) for the certificate. This is typically a Fully Qualified Domain Name (FQDN), and must be the same as the web address users access when connecting to a web site."
                    },
                    "expired": {
                        "type": "boolean",
                        "example": false,
                        "description": "Indicates the expiration status of the certificate."
                    },
                    "expiry": {
                        "type": "integer",
                        "example": 35500034,
                        "description": "The number of seconds until the certificate will expire."
                    },
                    "issuer": {
                        "type": "string",
                        "example": "DigiCert Class 3 Extended Validation SSL SGC CA.",
                        "description": "Identifies the entity who signed and issued the certificate."
                    },
                    "publicKeyType": {
                        "type": "string",
                        "example": "RSA (2048 Bits)",
                        "description": "Identifies the encryption algorithm used to create the public key for the ceritficate."
                    },
                    "serialNumber": {
                        "type": "string",
                        "example": "16469416336579571270",
                        "description": "A unique identifier for the certificate."
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "example": "SHA-256",
                        "description": "Identifies the algorithm used to sign the certificate."
                    },
                    "subject": {
                        "type": "string",
                        "example": "www.myapp.com",
                        "description": "Contains the Distinguished Name (DN) information for the certificate."
                    },
                    "subjectAlternativeName": {
                        "type": "string",
                        "example": "DNS Name=static.xxxx",
                        "description": "Defines additional identifies bound to the subject of the certificate. For example, the DNS name is used to add addtional domain names to a certificate."
                    },
                    "subjectKeyIdentifier": {
                        "type": "string",
                        "example": "31 EA 76 A9 23 74 A5 DF D4 FD EE A0 C1 A6 9E C6 11 0E 11 EC",
                        "description": "A hash value of the SSL certificate that can be used to identify certificates that contain a particular public key."
                    },
                    "thumbprint": {
                        "type": "string",
                        "example": "E6 A7 87 96 E0 C7 A3 E5 43 78 35 CA 16 78 5B 48 5A A9 DD C4 5C CD 0A 65 AA 89 33 E3 C3 D0 89 71",
                        "description": "A hash to ensure that the certificate has not been modified."
                    },
                    "thumbprintAlgorithm": {
                        "type": "string",
                        "example": "SHA-1",
                        "description": "Defines the algorithm used to hash the certificate."
                    },
                    "validFrom": {
                        "type": "string",
                        "example": "2019-07-29T09:12:33.001Z",
                        "description": "The start of the validity period for the certificate."
                    },
                    "validTo": {
                        "type": "string",
                        "example": "2029-07-29T09:12:33.001Z",
                        "description": "The end of the validity period for the certificate."
                    },
                    "version": {
                        "type": "integer",
                        "example": 3,
                        "description": "The version of the certificate, typically 3 for X.509 certificates."
                    }
                }
            },
            "CertDesiredState": {
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PEM": "#/components/schemas/PEM",
                        "PKCS12": "#/components/schemas/PKCS12",
                        "REMOTE_FILE": "#/components/schemas/RemoteFile"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PEM"
                    },
                    {
                        "$ref": "#/components/schemas/PKCS12"
                    },
                    {
                        "$ref": "#/components/schemas/RemoteFile"
                    }
                ]
            },
            "CertList": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CertStatus"
                        }
                    }
                }
            },
            "CertStatus": {
                "type": "object",
                "required": [
                    "metadata",
                    "desiredState",
                    "currentStatus"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/CertDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/CertCurrentStatus"
                    }
                }
            },
            "CertCurrentStatus": {
                "type": "object",
                "description": "'Shows the current status of the certificate.\n\nWhen any certificates have expired, the Certs service sets `state.selfConfigState.isConfigured` and `state.selfConfigState.isError` to `true`. The service will also add a value to the conditons array with the type \"expiration\" and a message that shows when the first certificate will expire. For example, `conditions: [{type: \"expiration\", message: \"Certificate www.example.com will expire in 29 days.\"}])`'\n",
                "required": [
                    "state",
                    "certMetadata",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "publicCert": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "caCerts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "certMetadata": {
                        "type": "array",
                        "description": "Public certificate metadata.",
                        "items": {
                            "$ref": "#/components/schemas/CertMetadata"
                        }
                    }
                }
            },
            "Cert": {
                "type": "object",
                "description": "Contains the certificate to upload.",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/CertDesiredState"
                    }
                }
            },
            "PEM": {
                "type": "object",
                "description": "Defines a PEM-formatted certificate that contains a key and certificates.\n\nBecause JSON does not support multi-line strings, you must replace binary line feeds with ASCII line feeds (`\\n`).\nThe private key data will be redacted in the response for all get and list requests.\n",
                "required": [
                    "privateKey",
                    "publicCert",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "PEM"
                        ]
                    },
                    "password": {
                        "type": "string",
                        "example": "myPa$$w0rd",
                        "description": "The passphrase to use to decrypt the private key. Required if the private key is encrypted."
                    },
                    "privateKey": {
                        "type": "string",
                        "example": "-----BEGIN PRIVATE KEY-----\\n MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALSQBtRafNJtTqN0\\n <EXAMPLE_SNIPPED> nYiZq6TZUsHjfG2R9PlK6jsvno9O6amN96Al6ZSTTDjhr4VU7/RJ0p/cisiCboCX\\n 4cCq6lFKpIpeZJI=\\n -----END PRIVATE KEY-----",
                        "description": "The private key used to sign the public certificate.\n\nBecause JSON does not support multi-line strings, you must replace binary line feeds with ASCII line feeds (`\\n`). The private key data will be redacted in the response for all get and list requests.\n"
                    },
                    "publicCert": {
                        "type": "string",
                        "example": "-----BEGIN CERTIFICATE-----\\n MIICpzCCAhACCQDkjx7mP9cuRjANBgkqhkiG9w0BAQsFADCBlzELMAkGA1UEBhMC\\n <EXAMPLE_SNIPPED> MiJVGawyxDzBm2UhzNOE0ABHfjAgM6PAYmtMhhQawk6bmttXYhJeqhLSji4LEj5d\\n Z4FmXQ5rWM0RWBs=\\n -----END CERTIFICATE-----",
                        "description": "The end-entity certificate, in PEM format.\n\nBecause JSON does not support multi-line strings, you must replace binary line feeds with ASCII line feeds (`\\n`).\n"
                    },
                    "caCerts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "-----BEGIN CERTIFICATE-----\\n MIIE+zCCBGSgAwIBAgICAQ0wDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcTG1Zh\\n <EXAMPLE_SNIPPED> WBsUs5iB0QQeyAfJg594RAoYC5jcdnplDQ1tgMQLARzLrUc+cb53S8wGd9D0Vmsf\\n SxOaFIqII6hR8INMqzW/Rn453HWkrugp++85j09VZw==\\n -----END CERTIFICATE-----"
                        ],
                        "description": "An optional list of intermediate certificates in PEM format that are used to validate the public certificate.\n\nBecause JSON does not support multi-line strings, you must replace binary line feeds with ASCII line feeds (`\\n`).\n"
                    }
                }
            },
            "PKCS12": {
                "type": "object",
                "description": "Defines a cert with key and certificates encoded in PKCS12 format.",
                "required": [
                    "data",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "PKCS12"
                        ]
                    },
                    "data": {
                        "type": "string",
                        "example": "MIIGoQIBAzCCBmcGCSqGSIb3DQEHAaCCBlgEggZUMIIGUDCCA08GCSqGSIb3DQEHBqCCA0AwggM8AgEAMIIDNQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIe7ZblBoEW3QCAggAgIIDCCgLEvzp9n6<EXAMPLE_SNIPPED>9QbpGT0MDEwITAJBgUrDgMCGgUABBQJs6ZgeAMcxVLrq1hU+TlUOArMuQQIGK59vCBn0wECAggA",
                        "description": "A base-64-encoded string that contains a private key, a public certificate, and, optionally, other intermediate certificates."
                    },
                    "password": {
                        "type": "string",
                        "example": "myPa$$w0rd",
                        "description": "The password to use to decrypt PKCS12 data."
                    }
                }
            },
            "RemoteFile": {
                "type": "object",
                "description": "Define a Cert resource by providing references to remote files.\n\n> **Note:** These are file path references only. The system can not validate the file contents or extract the certificate metadata. Providing a PEM or PKCS12 certificate is recommended.\n",
                "required": [
                    "privateKey",
                    "publicCert",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "REMOTE_FILE"
                        ]
                    },
                    "privateKey": {
                        "type": "string",
                        "example": "/certs/www.example.com/example.key",
                        "description": "The path to the private key file."
                    },
                    "publicCert": {
                        "type": "string",
                        "example": "/certs/www.example.com/example.crt",
                        "description": "The path to the certificate bundle file. The file must contain the public certificate and may contain additional intermediate certificates."
                    }
                }
            },
            "GatewayName": {
                "type": "string"
            },
            "GatewayList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Gateway"
                        }
                    }
                }
            },
            "GZip": {
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip"
                        }
                    },
                    "buffers": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "integer"
                            },
                            "size": {
                                "type": "string",
                                "pattern": "^[0-9]+[k|K|m|M]{1}$"
                            }
                        },
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_buffers"
                        }
                    },
                    "level": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 9,
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_comp_level"
                        }
                    },
                    "disabledUserAgents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "uniqueItems": true,
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable"
                        }
                    },
                    "httpVersion": {
                        "type": "string",
                        "pattern": "^[1-3]{1}\\.[0-1]{1}$",
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version"
                        }
                    },
                    "minLength": {
                        "type": "integer",
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_min_length"
                        }
                    },
                    "proxied": {
                        "type": "string",
                        "enum": [
                            "DISABLED",
                            "EXPIRED",
                            "NOCACHE",
                            "NOSTORE",
                            "PRIVATE",
                            "NOLASTMODIFIED",
                            "NOETAG",
                            "AUTH",
                            "ANY"
                        ],
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied"
                        }
                    },
                    "mimeTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "uniqueItems": true,
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_types"
                        }
                    },
                    "vary": {
                        "type": "string",
                        "enum": [
                            "DISABLED",
                            "ENABLED"
                        ],
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary"
                        }
                    },
                    "static": {
                        "type": "string",
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "ALWAYS"
                        ],
                        "externalDocs": {
                            "url": "http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static"
                        }
                    }
                }
            },
            "Compression": {
                "description": "Gzip compression settings.",
                "type": "object",
                "properties": {
                    "gzip": {
                        "$ref": "#/components/schemas/GZip"
                    }
                }
            },
            "GatewayWebState": {
                "description": "Non-ingress settings in a Gateway that apply only to Web Components.",
                "type": "object",
                "properties": {
                    "errorSetRef": {
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    "compression": {
                        "$ref": "#/components/schemas/Compression"
                    }
                }
            },
            "NginxDirective": {
                "x-f5-experimental": true,
                "required": [
                    "directive"
                ],
                "properties": {
                    "directive": {
                        "type": "string",
                        "description": "The name of the NGINX directive. For a list of NGINX Directives, refer to [the NGINX documentation](http://nginx.org/en/docs/dirindex.html).\n"
                    },
                    "args": {
                        "type": "array",
                        "description": "Directive arguments.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "block": {
                        "type": "array",
                        "description": "The directives to include within a block directive or context.",
                        "items": {
                            "$ref": "#/components/schemas/NginxDirective"
                        }
                    }
                }
            },
            "NginxConf": {
                "x-f5-experimental": true,
                "required": [
                    "path",
                    "op",
                    "block"
                ],
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "Path is a JSONPath expression. See [goessner.net/articles/JsonPath](https://goessner.net/articles/JsonPath/) for more information on JSONPath.\n",
                        "example": "$..[?(@.directive=='server')]"
                    },
                    "op": {
                        "type": "string",
                        "description": "Indicates where to insert the block of directives in relation to the directives\nselected by the given path.\n\n* `APPEND` - Add after the selected directives\n\n* `APPEND_CHILD` - Add after the last directive in the selected directives' block\n\n* `PREPEND` - Add before the selected directives\n\n* `PREPEND_CHILD` - Add before the first directive in the selected directives' block\n",
                        "enum": [
                            "APPEND",
                            "APPEND_CHILD",
                            "PREPEND",
                            "PREPEND_CHILD"
                        ]
                    },
                    "block": {
                        "type": "array",
                        "description": "Block contains a list of directives that you want to add to the NGINX configuration.\n",
                        "items": {
                            "$ref": "#/components/schemas/NginxDirective"
                        }
                    }
                }
            },
            "NginxConfs": {
                "x-f5-experimental": true,
                "description": "NGINX raw configuration",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/NginxConf"
                }
            },
            "HA": {
                "description": "Data path high availability settings",
                "type": "object",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Enables or disables HA.\n\nWhen set to `true`, supports configuring instances in an active‑passive, high‑availability (HA) setup.\n\nTo configure the gateway on HA mode:\n  - `keepalived` must be installed and configured on the desired instances.\n  - At least one listen IP address must be specified in the `listenIps` section within `InstanceRefs`\n\n  See the `listenIps` section for additional requirements for configuring HA.\n"
                    }
                }
            },
            "GatewayStateCommon": {
                "description": "Non-ingress settings in a Gateway that apply to Web and TCP/UDP Components.",
                "type": "object",
                "properties": {
                    "nginxConfs": {
                        "$ref": "#/components/schemas/NginxConfs"
                    },
                    "ha": {
                        "$ref": "#/components/schemas/HA"
                    }
                }
            },
            "ServiceConfigState": {
                "type": "string",
                "enum": [
                    "ENABLED",
                    "DISABLED"
                ],
                "default": "DISABLED"
            },
            "GatewaySocketSettings": {
                "description": "Socket settings in a Gateway.",
                "type": "object",
                "properties": {
                    "setFib": {
                        "x-f5-experimental": true,
                        "type": "integer"
                    },
                    "fastOpen": {
                        "x-f5-experimental": true,
                        "type": "integer"
                    },
                    "acceptFilter": {
                        "x-f5-experimental": true,
                        "type": "string",
                        "enum": [
                            "DATA_READY",
                            "HTTP_READY"
                        ]
                    },
                    "deferred": {
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "backlog": {
                        "x-f5-experimental": true,
                        "type": "integer",
                        "default": -1
                    },
                    "isIpv6Only": {
                        "x-f5-experimental": true,
                        "type": "boolean",
                        "default": false
                    },
                    "reusePort": {
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "tcpKeepAlive": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "$ref": "#/components/schemas/ServiceConfigState"
                            },
                            "idle": {
                                "type": "string",
                                "pattern": "^[0-9]+[h|m|s]{1}$"
                            },
                            "interval": {
                                "type": "string",
                                "pattern": "^[0-9]+[h|m|s]{1}$"
                            },
                            "count": {
                                "type": "integer"
                            }
                        }
                    },
                    "receiveBufferSize": {
                        "type": "string",
                        "pattern": "^[0-9]+[k|K|m|M]{1}$"
                    },
                    "sendBufferSize": {
                        "type": "string",
                        "pattern": "^[0-9]+[k|K|m|M]{1}$"
                    }
                }
            },
            "URIMatchMethod": {
                "description": "Specifies how to determine a match between an incoming Web URI and configured Web URI.",
                "type": "string",
                "enum": [
                    "PREFIX",
                    "REGEX",
                    "REGEX_CASE_SENSITIVE",
                    "SUFFIX",
                    "EXACT"
                ],
                "default": "PREFIX"
            },
            "TLS": {
                "description": "TLS settings applicable to URIs.",
                "type": "object",
                "required": [
                    "certRef"
                ],
                "properties": {
                    "certRef": {
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "TLSv1|TLSv1\\.[1-3]|SSLv2|SSLv3"
                        }
                    },
                    "cipher": {
                        "type": "string",
                        "example": "ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;"
                    },
                    "preferServerCipher": {
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "sessionCache": {
                        "type": "string",
                        "enum": [
                            "OFF",
                            "NONE",
                            "BUILTIN",
                            "SHARED"
                        ],
                        "default": "OFF"
                    }
                }
            },
            "IngressUri": {
                "type": "object",
                "properties": {
                    "matchMethod": {
                        "$ref": "#/components/schemas/URIMatchMethod"
                    },
                    "tls": {
                        "$ref": "#/components/schemas/TLS"
                    },
                    "serverPoolPort": {
                        "x-f5-experimental": true,
                        "description": "The port number used when the IngressUri is deployed to an Instance that's a member of a BIG-IP server pool.",
                        "type": "integer"
                    }
                }
            },
            "IngressUris": {
                "type": "object",
                "description": "Defines the URI in Gateways and Components. The URI has different requirements depending on where it is used.\n\nFor Web URIs in Gateways, `uris` must be a complete URI that follows the format `<http|https>://host[:port]`;\nadditionally each URI can have a match method specified and an HTTPS URI can include TLS information.\n  Examples:\n  - `http://www.f5.com`\n  - `https://www.f5.com`\n  - `http://www.f5.com:8080`\n  - `http://*.info.f5.com`\n\nFor Web URIs in Components, `uris` can be either a complete URI that follows the format `<http|https>://host[:port][/path]`\nor a relative path that follows the format `/path[/...]`;\nadditionally each URI can have a match method specified and an HTTPS URI can include TLS information.\n  Examples:\n  - `/images`\n  - `/*.jpg`\n  - `/locations/us/wa*`\n  - `http://www.f5.com:8080/sales`\n  - `http://*.f5.com:5050/testing`\n\nFor TCP/UDP URIs in Gateways and Components,`uris` must be a complete URI that follows the format `<tcp|udp|tcp+tls>://<*|IP>:<port|portRange>`;\nadditionally a tcp+tls URI can include TLS information. Match method is not applicable to TCP/UDP URIs.\n  Examples:\n  - `tcp://192.168.1.1:12345`\n  - `tcp+tls://192.168.1.1:12346`\n  - `tcp://192.168.1.1:12345-12350`\n  - `tcp://*:12345`\n  - `udp://192.168.1.1:12345`\n  - `udp://*:12345`\n\nIn a TCP/UDP Component, URIs can either all have a protocol of udp or a mix of TCP and tcp+tls.\n",
                "additionalProperties": {
                    "description": "Provide the URI associated with the resource.",
                    "$ref": "#/components/schemas/IngressUri"
                }
            },
            "InstanceGroupRef": {
                "x-f5-experimental": true,
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "listenIps": {
                                "x-f5-experimental": true,
                                "description": "The list of Listen IP addresses.\nSets the BIG-IP virtual address(es) on which the server listens for and accepts requests.\n",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$",
                                    "example": "1.1.1.1"
                                }
                            }
                        }
                    }
                ]
            },
            "Placement": {
                "description": "Instances that have NGINX configuration applied corresponding to the Gateway and associated Components settings.",
                "type": "object",
                "properties": {
                    "instanceRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstanceRef"
                        }
                    },
                    "instanceGroupRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstanceGroupRef"
                        }
                    }
                }
            },
            "GatewayIngressCommon": {
                "description": "Ingress settings in a Gateway that apply to Web and TCP/UDP Components.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GatewaySocketSettings"
                    },
                    {
                        "type": "object",
                        "required": [
                            "uris",
                            "placement"
                        ],
                        "properties": {
                            "uris": {
                                "$ref": "#/components/schemas/IngressUris"
                            },
                            "tls": {
                                "$ref": "#/components/schemas/TLS"
                            },
                            "placement": {
                                "$ref": "#/components/schemas/Placement"
                            }
                        }
                    }
                ]
            },
            "HeaderMatchMethod": {
                "type": "string",
                "enum": [
                    "PREFIX",
                    "REGEX",
                    "REGEX_CASE_SENSITIVE",
                    "SUFFIX",
                    "EXACT"
                ],
                "default": "REGEX"
            },
            "IngressHeader": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "nameMatchMethod": {
                        "$ref": "#/components/schemas/HeaderMatchMethod"
                    },
                    "value": {
                        "type": "string"
                    },
                    "valueMatchMethod": {
                        "$ref": "#/components/schemas/HeaderMatchMethod"
                    }
                }
            },
            "WebIngressCommon": {
                "description": "Ingress settings in a Gateway and Component that apply only to Web Components.",
                "type": "object",
                "properties": {
                    "methods": {
                        "description": "Specifies the HTTP method to use in requests.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "POST",
                                "GET",
                                "PUT",
                                "DELETE",
                                "PATCH",
                                "HEAD",
                                "TRACE",
                                "OPTIONS",
                                "CONNECT"
                            ]
                        }
                    },
                    "clientMaxBodySize": {
                        "description": "Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field.",
                        "type": "string",
                        "pattern": "^[0-9]+[k|K|m|M]{1}$",
                        "deprecated": true,
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"
                        }
                    },
                    "headers": {
                        "description": "Specifies the match method for headers to be used in requests.",
                        "x-f5-experimental": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IngressHeader"
                        }
                    },
                    "http2": {
                        "description": "Enable or disable HTTP/2 connections on the port. Normally, for this to work the `ssl` parameter should be specified as well,\nbut NGINX can also be configured to accept HTTP/2 connections without SSL.\nPossible values are `ENABLED` or `DISABLED`.\n",
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#listen"
                        }
                    },
                    "spdy": {
                        "description": "Enables or disables acceptance of the SPDY connections on the specified port.\nNormally, for this to work the `ssl` parameter should be specified as well,\nbut NGINX can also be configured to accept SPDY connections without SSL. Possible values are `ENABLED` or `DISABLED`.\n",
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#listen"
                        }
                    },
                    "proxyProtocol": {
                        "description": "Enables or disables the proxy protocol for all connections accepted on the specified port.\nThe `proxy protocol` enables NGINX and NGINX Plus to receive client connection information passed through proxy servers and load balancers,\nsuch as HAproxy and Amazon Elastic Load Balancer (ELB). The possible values are `ENABLED` or `DISABLED`.\n",
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#listen"
                        }
                    },
                    "notFoundStatusCode": {
                        "x-f5-experimental": true,
                        "type": "integer",
                        "default": 404
                    },
                    "headersHashBucketSize": {
                        "description": "Sets the bucket size for hash tables used by the `proxy_hide_header` and `proxy_set_header` directives.",
                        "type": "integer",
                        "minimum": 1,
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_headers_hash_bucket_size"
                        }
                    },
                    "headersHashMaxSize": {
                        "description": "Sets the maximum size of hash tables used by the `proxy_hide_header` and `proxy_set_header` directives.",
                        "type": "integer",
                        "minimum": 1,
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_headers_hash_max_size"
                        }
                    }
                }
            },
            "GatewayWebIngressClient": {
                "description": "Non-buffer settings in a Gateway applicable to Web client requests.",
                "type": "object",
                "properties": {
                    "bodyInFileOnly": {
                        "description": "Determines whether NGINX Controller should save the entire client request body into a file.",
                        "type": "string",
                        "enum": [
                            "ENABLED",
                            "DISABLED",
                            "CLEAN"
                        ],
                        "default": "DISABLED",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only"
                        }
                    },
                    "bodyTimeout": {
                        "description": "Defines a timeout for reading the client request body.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_timeout"
                        }
                    },
                    "headerTimeout": {
                        "description": "Defines a timeout for reading the client request header.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_timeout"
                        }
                    },
                    "maxBodySize": {
                        "description": "Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field.\n\nDisables checking of client request body size when set to 0.\n",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"
                        }
                    }
                }
            },
            "WebIngressBuffersCommon": {
                "description": "Buffer settings common to a Gateway and Component applicable to web client requests.",
                "type": "object",
                "properties": {
                    "clientBodyBufferingIsEnabled": {
                        "description": "Enables or disables buffering of a client request body.",
                        "type": "boolean",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_request_buffering"
                        }
                    },
                    "clientBodyBufferSize": {
                        "description": "Sets the buffer size for reading the client request body.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size"
                        }
                    },
                    "clientBodyInSingleBuffer": {
                        "description": "Determines whether NGINX Controller should save the entire client request body in a single buffer.",
                        "type": "string",
                        "enum": [
                            "ENABLED",
                            "DISABLED"
                        ],
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_single_buffer"
                        }
                    }
                }
            },
            "GatewayWebIngress": {
                "description": "Ingress settings in a Gateway that apply only to Web Components.",
                "type": "object",
                "properties": {
                    "client": {
                        "$ref": "#/components/schemas/GatewayWebIngressClient"
                    },
                    "allowUnderscoresInHeaders": {
                        "type": "boolean",
                        "default": false,
                        "description": "Allows the use of underscores in client request header fields.\n\nWhen set to `disabled`, request headers with names that contain underscores are considered invalid and are ignored.\n"
                    },
                    "buffers": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WebIngressBuffersCommon"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "clientHeaderBufferSize": {
                                        "description": "Sets the buffer size for reading the client request header.",
                                        "type": "string",
                                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                                        "externalDocs": {
                                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_buffer_size"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "GatewayIngress": {
                "description": "Ingress settings in a Gateway.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GatewayIngressCommon"
                    },
                    {
                        "$ref": "#/components/schemas/WebIngressCommon"
                    },
                    {
                        "$ref": "#/components/schemas/GatewayWebIngress"
                    }
                ]
            },
            "GatewayDesiredState": {
                "description": "The desired gateway settings that the user wants in the configuration on NGINX instances referenced by this Gateway.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GatewayWebState"
                    },
                    {
                        "$ref": "#/components/schemas/GatewayStateCommon"
                    },
                    {
                        "type": "object",
                        "required": [
                            "ingress"
                        ],
                        "properties": {
                            "ingress": {
                                "$ref": "#/components/schemas/GatewayIngress"
                            }
                        }
                    }
                ]
            },
            "ErrorSetList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorSet"
                        }
                    }
                }
            },
            "ErrorSet": {
                "type": "object",
                "description": "Defines the set of error messages to be returned for HTTP errors.",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/ErrorSetDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/ErrorSetCurrentStatus"
                    }
                }
            },
            "ErrorSetDesiredState": {
                "type": "object",
                "properties": {
                    "errorCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorCode"
                        }
                    }
                }
            },
            "ErrorSetCurrentStatus": {
                "type": "object",
                "properties": {
                    "errorCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorCode"
                        }
                    }
                }
            },
            "ErrorCode": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "minimum": 400,
                        "maximum": 599,
                        "example": 404
                    },
                    "message": {
                        "type": "string",
                        "example": "{\"status\":404,\"message\":\"Resource not found\"}"
                    }
                }
            },
            "PublishedAPIList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublishedAPI"
                        }
                    }
                }
            },
            "PublishedAPI": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/PublishedAPICurrentStatus"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/PublishedAPIDesiredState"
                    }
                }
            },
            "PublishedAPICurrentStatus": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "basePath": {
                        "type": "string",
                        "default": "/"
                    },
                    "stripWorkloadBasePath": {
                        "type": "boolean",
                        "default": true
                    },
                    "componentRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "apiDefinitionVersionRef": {
                        "description": "Reference to the Version of the API Definition.\n",
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    "gatewayRefs": {
                        "type": "array",
                        "description": "Reference to the Gateway associated with the Published API.",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "devportalRefs": {
                        "type": "array",
                        "description": "Reference to the Dev Portal associated with the Published API.",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    }
                }
            },
            "PublishedAPIDesiredState": {
                "type": "object",
                "required": [
                    "apiDefinitionVersionRef",
                    "gatewayRefs"
                ],
                "properties": {
                    "basePath": {
                        "type": "string",
                        "default": "/"
                    },
                    "stripWorkloadBasePath": {
                        "type": "boolean",
                        "default": true
                    },
                    "apiDefinitionVersionRef": {
                        "description": "Reference to the Version of the API Definition.\n",
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    "gatewayRefs": {
                        "type": "array",
                        "description": "Reference to the Gateway associated with the Published API.",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "devportalRefs": {
                        "type": "array",
                        "description": "Reference to the Dev Portal associated with the Published API.",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    }
                }
            },
            "ComponentList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Component"
                        }
                    }
                }
            },
            "ComponentStateCommon": {
                "type": "object",
                "description": "Settings common to Web & TCP/UDP Components.",
                "properties": {
                    "nginxConfs": {
                        "$ref": "#/components/schemas/NginxConfs"
                    }
                }
            },
            "ComponentIngressCommon": {
                "description": "Ingress settings common to Web and TCP/UDP components.",
                "type": "object",
                "required": [
                    "uris"
                ],
                "properties": {
                    "uris": {
                        "$ref": "#/components/schemas/IngressUris"
                    },
                    "gatewayRefs": {
                        "description": "Reference(s) to existing Gateway resource(s).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "tls": {
                        "$ref": "#/components/schemas/TLS"
                    }
                }
            },
            "ComponentWebIngressClient": {
                "description": "Non-buffer settings in a Component applicable to Web client requests.",
                "type": "object",
                "properties": {
                    "bodyInFileOnly": {
                        "description": "Determines whether NGINX Controller should save the entire client request body into a file.",
                        "type": "string",
                        "enum": [
                            "ENABLED",
                            "DISABLED",
                            "CLEAN"
                        ],
                        "default": "DISABLED",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only"
                        }
                    },
                    "bodyTimeout": {
                        "description": "Defines a timeout for reading the client request body.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_timeout"
                        }
                    },
                    "maxBodySize": {
                        "description": "Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field.\n\nDisables checking of client request body size when set to 0.\n",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size"
                        }
                    }
                }
            },
            "ComponentWebIngress": {
                "description": "Ingress settings in a Web Component.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ComponentIngressCommon"
                    },
                    {
                        "$ref": "#/components/schemas/WebIngressCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "client": {
                                "$ref": "#/components/schemas/ComponentWebIngressClient"
                            },
                            "buffers": {
                                "$ref": "#/components/schemas/WebIngressBuffersCommon"
                            }
                        }
                    }
                ]
            },
            "MonitoringCommon": {
                "description": "Monitor settings common to Web and TCP/UDP.",
                "type": "object",
                "properties": {
                    "defaultState": {
                        "type": "string",
                        "enum": [
                            "HEALTHY",
                            "UNHEALTHY"
                        ],
                        "default": "HEALTHY"
                    },
                    "interval": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 5
                    },
                    "consecutiveSuccessThreshold": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                    },
                    "consecutiveFailureThreshold": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                }
            },
            "MonitorResponseStatus": {
                "type": "object",
                "properties": {
                    "range": {
                        "type": "object",
                        "properties": {
                            "startCode": {
                                "type": "integer",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "endCode": {
                                "type": "integer",
                                "minimum": 100,
                                "maximum": 599
                            }
                        }
                    },
                    "codes": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 100,
                            "maximum": 599
                        }
                    },
                    "match": {
                        "type": "boolean",
                        "default": true
                    }
                }
            },
            "MonitorResponseContent": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "match": {
                        "type": "boolean",
                        "default": true
                    }
                }
            },
            "WebMonitorResponse": {
                "description": "Settings that define successful responses to a Web monitor.",
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/MonitorResponseStatus"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MonitorResponseContent"
                        }
                    },
                    "body": {
                        "$ref": "#/components/schemas/MonitorResponseContent"
                    }
                }
            },
            "WebMonitoring": {
                "description": "Health monitor settings across all workload groups in a Web Component.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MonitoringCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uri": {
                                "description": "URI containing the relative path that the monitor probe is sent to; the host is specified in the URI in the workload group.",
                                "type": "string",
                                "default": "/"
                            },
                            "response": {
                                "description": "Settings that define successful responses to a Web monitor.",
                                "$ref": "#/components/schemas/WebMonitorResponse"
                            }
                        }
                    }
                ]
            },
            "RoundRobinLB": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ROUND_ROBIN"
                        ]
                    }
                }
            },
            "IPHashLB": {
                "type": "object",
                "description": "IP Hash Load Balancing only applicable to Web Components.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "IPHASH"
                        ]
                    }
                }
            },
            "LeastConnLB": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "LEAST_CONNECTIONS"
                        ]
                    }
                }
            },
            "HashLBMethod": {
                "type": "object",
                "required": [
                    "type",
                    "userKey"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "HASH"
                        ]
                    },
                    "userKey": {
                        "type": "string"
                    },
                    "consistentHash": {
                        "$ref": "#/components/schemas/ServiceConfigState"
                    }
                }
            },
            "LeastTimeLBMethod": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "LEAST_TIME"
                        ]
                    },
                    "latencyParameter": {
                        "type": "string",
                        "description": "Values applicable to a Web Component are: [HEADER, LAST_BYTE, LAST_BYTE_INFLIGHT];\nValues applicable to a TCP/UDP Component are: [CONNECT, FIRST_BYTE, LAST_BYTE, LAST_BYTE_INFLIGHT].\nThe default value is used for a web Component; there is no default for a TCP/UDP Component.\n",
                        "enum": [
                            "HEADER",
                            "CONNECT",
                            "FIRST_BYTE",
                            "LAST_BYTE",
                            "LAST_BYTE_INFLIGHT"
                        ],
                        "default": "HEADER"
                    }
                }
            },
            "RandomLBMethod": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "RANDOM"
                        ]
                    },
                    "twoServerLBMethod": {
                        "type": "string",
                        "description": "Values applicable to a Web Component are: [LEAST_CONNECTIONS, LEAST_TIME_HEADER, LEAST_TIME_LAST_BYTE];\nValues applicable to a TCP/UDP Component are: [LEAST_CONNECTIONS, LEAST_TIME_CONNECT, LEAST_TIME_FIRST_BYTE, LEAST_TIME_LAST_BYTE].\n",
                        "enum": [
                            "LEAST_CONNECTIONS",
                            "LEAST_TIME_HEADER",
                            "LEAST_TIME_CONNECT",
                            "LEAST_TIME_FIRST_BYTE",
                            "LEAST_TIME_LAST_BYTE"
                        ]
                    }
                }
            },
            "LoadBalancingMethod": {
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "ROUND_ROBIN": "#/components/schemas/RoundRobinLB",
                        "IPHASH": "#/components/schemas/IPHashLB",
                        "LEAST_CONNECTIONS": "#/components/schemas/LeastConnLB",
                        "HASH": "#/components/schemas/HashLBMethod",
                        "LEAST_TIME": "#/components/schemas/LeastTimeLBMethod",
                        "RANDOM": "#/components/schemas/RandomLBMethod"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/RoundRobinLB"
                    },
                    {
                        "$ref": "#/components/schemas/IPHashLB"
                    },
                    {
                        "$ref": "#/components/schemas/LeastConnLB"
                    },
                    {
                        "$ref": "#/components/schemas/HashLBMethod"
                    },
                    {
                        "$ref": "#/components/schemas/LeastTimeLBMethod"
                    },
                    {
                        "$ref": "#/components/schemas/RandomLBMethod"
                    }
                ]
            },
            "DNSServiceDiscovery": {
                "required": [
                    "servers"
                ],
                "properties": {
                    "servers": {
                        "type": "array",
                        "description": "Array of DNS servers. Possible options are:\n- An IPv4 address with an optional port number.\n   Port 53 is used if not specified.\n   For example, \"10.1.1.1\", \"10.1.1.1:5353\".\n- An IPv6 address with an optional port number.\n   Port 53 is used if not specified.\n   For example, \"[2001::1]\", \"[2001::1]:5353\",\n- Fully qualified domain name (FQDN). ASCII characters only.\n   NGINX uses the OS name server configuration\n   to identify the IP addresses of the DNS servers to use.\n",
                        "items": {
                            "type": "string",
                            "pattern": "^(?:(?:(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(?::(?:[1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?$)|(?:\\[\\s*(?:(?:(?:[0-9a-fA-F]{1,4}:){7}(?:[0-9a-fA-F]{1,4}|:))|(?:(?:[0-9a-fA-F]{1,4}:){6}(?::[0-9a-fA-F]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-fA-F]{1,4}:){5}(?:(?:(?::[0-9a-fA-F]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-fA-F]{1,4}:){4}(?:(?:(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?::[0-9a-fA-F]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-fA-F]{1,4}:){3}(?:(?:(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?::[0-9a-fA-F]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-fA-F]{1,4}:){2}(?:(?:(?::[0-9a-fA-F]{1,4}){1,5})|(?:(?::[0-9a-fA-F]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-fA-F]{1,4}:){1}(?:(?:(?::[0-9a-fA-F]{1,4}){1,6})|(?:(?::[0-9a-fA-F]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-fA-F]{1,4}){1,7})|(?:(?::[0-9a-fA-F]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?](?::(?:[1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?\\s*$)|(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*$))",
                            "minLength": 1,
                            "example": "10.1.1.1:5353"
                        },
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    "ttl": {
                        "type": "string",
                        "pattern": "^[0-9]+[h|m|s]{1}$",
                        "description": "Overrides the TTL setting present in the DNS record.",
                        "example": "10s"
                    },
                    "timeout": {
                        "type": "string",
                        "pattern": "^[0-9]+[h|m|s]{1}$",
                        "description": "Sets the timeout for domain name resolution.",
                        "example": "10s"
                    }
                }
            },
            "WorkloadGroupCommon": {
                "description": "Settings common to Web and TCP/UDP workloadGroups.",
                "type": "object",
                "properties": {
                    "locationRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    },
                    "loadBalancingMethod": {
                        "$ref": "#/components/schemas/LoadBalancingMethod"
                    },
                    "dnsServiceDiscovery": {
                        "$ref": "#/components/schemas/DNSServiceDiscovery"
                    }
                }
            },
            "WebProxy": {
                "description": "Proxy retry and timeout settings applicable to servers in a Web workloadGroup associated with a Component.",
                "type": "object",
                "properties": {
                    "nextUpstream": {
                        "description": "Specifies in which cases a request should be passed to the next server.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ERROR",
                                "TIMEOUT",
                                "INVALID_HEADER",
                                "HTTP_500",
                                "HTTP_502",
                                "HTTP_503",
                                "HTTP_504",
                                "HTTP_403",
                                "HTTP_404",
                                "HTTP_429",
                                "NON_IDEMPOTENT",
                                "OFF"
                            ]
                        }
                    },
                    "connectTimeout": {
                        "description": "Defines a timeout for establishing a connection with a proxied server.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$"
                    },
                    "sendTimeout": {
                        "description": "Sets a timeout for transmitting a request to the proxied server.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$"
                    }
                }
            },
            "SessionPersistenceCookie": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COOKIE"
                        ]
                    },
                    "srvID": {
                        "type": "string"
                    },
                    "expireTime": {
                        "type": "string",
                        "pattern": "^[0-9]+[h|m|s]{1}$"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "SessionPersistenceRoute": {
                "type": "object",
                "required": [
                    "type",
                    "routeInfoLocation"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ROUTE"
                        ]
                    },
                    "routeInfoLocation": {
                        "type": "string",
                        "enum": [
                            "COOKIE",
                            "URI",
                            "BOTH"
                        ]
                    }
                }
            },
            "SessionPersistenceCookieLearn": {
                "type": "object",
                "required": [
                    "type",
                    "create",
                    "lookup"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COOKIE_LEARN"
                        ]
                    },
                    "create": {
                        "type": "string",
                        "pattern": "^\\$.+"
                    },
                    "lookup": {
                        "type": "string",
                        "pattern": "^\\$.+"
                    }
                }
            },
            "SessionPersistence": {
                "description": "SessionPersistence settings in a Web workloadGroup.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "COOKIE": "#/components/schemas/SessionPersistenceCookie",
                        "ROUTE": "#/components/schemas/SessionPersistenceRoute",
                        "COOKIE_LEARN": "#/components/schemas/SessionPersistenceCookieLearn"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SessionPersistenceCookie"
                    },
                    {
                        "$ref": "#/components/schemas/SessionPersistenceRoute"
                    },
                    {
                        "$ref": "#/components/schemas/SessionPersistenceCookieLearn"
                    }
                ]
            },
            "WorkloadUri": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                    },
                    "maxConns": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                    },
                    "maxFails": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 1
                    },
                    "failTimeout": {
                        "x-f5-experimental": true,
                        "type": "string",
                        "default": "10s",
                        "pattern": "^[0-9]+[h|m|s]{1}$"
                    },
                    "isBackup": {
                        "type": "boolean",
                        "default": false
                    },
                    "isDown": {
                        "type": "boolean",
                        "default": false
                    },
                    "route": {
                        "x-f5-experimental": true,
                        "type": "string"
                    },
                    "srvService": {
                        "type": "string"
                    },
                    "slowStart": {
                        "x-f5-experimental": true,
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                    },
                    "isDrain": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "WebWorkloadGroup": {
                "description": "Group of servers hosting a part of a Web application represented by a Component.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkloadGroupCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "proxy": {
                                "$ref": "#/components/schemas/WebProxy"
                            },
                            "sessionPersistence": {
                                "$ref": "#/components/schemas/SessionPersistence"
                            },
                            "uris": {
                                "type": "object",
                                "description": "The URI for a server hosting a part of a Web application.\n\nIt must conform to the format `schema://address[:port]`\nwhere schema is chosen from http or https, address is IP or hostname,\nschema and address must be provided.\n\nFor example:\n\n- `http://192.0.2.247`\n- `https://192.0.2.247:8443`\n- `https://www.f5workload.com`\n",
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/WorkloadUri"
                                }
                            }
                        }
                    }
                ]
            },
            "BackendBuffers": {
                "description": "Proxy buffer settings applicable to servers across all Web workloadGroups associated with a Component.",
                "type": "object",
                "properties": {
                    "headerSize": {
                        "description": "Sets the size of the buffer used for reading the first part of the response received from the proxied server.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size"
                        }
                    },
                    "isEnabled": {
                        "description": "Enables or disables buffering of responses from the proxied server.",
                        "type": "boolean",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering"
                        }
                    },
                    "size": {
                        "description": "Sets the number and size of the buffers used for reading a response from the proxied server, for a single connection.",
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "integer"
                            },
                            "size": {
                                "type": "string",
                                "pattern": "^[0-9]{1,12}[kKmM]?$"
                            }
                        },
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers"
                        }
                    },
                    "busySize": {
                        "description": "When buffering of responses from the proxied server is enabled, it limits the total size of buffers that can be busy sending a response to the client while the response is not yet fully read.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_busy_buffers_size"
                        }
                    },
                    "ignoreClientAbort": {
                        "description": "Determines whether the connection with a proxied server should be closed when a client closes the connection without waiting for a response.",
                        "type": "string",
                        "enum": [
                            "ENABLED",
                            "DISABLED"
                        ],
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort"
                        }
                    },
                    "forceRanges": {
                        "description": "Enables byte-range support for both cached and uncached responses from the proxied server regardless of the \"Accept-Ranges\" field in these responses.",
                        "type": "string",
                        "enum": [
                            "ENABLED",
                            "DISABLED"
                        ],
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_force_ranges"
                        }
                    },
                    "httpVersion": {
                        "description": "Sets the HTTP protocol version for proxying.",
                        "type": "string",
                        "enum": [
                            "1.0",
                            "1.1"
                        ],
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version"
                        }
                    },
                    "rate": {
                        "description": "Limits the speed (in bytes per second) of reading the response from the proxied server.\n\nDisables rate limiting when set to 0. \n",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_limit_rate"
                        }
                    },
                    "readTimeout": {
                        "description": "Defines a timeout for reading a response from the proxied server.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_read_timeout"
                        }
                    },
                    "maxTempFileSize": {
                        "description": "Sets the maximum size of the temporary file that the response can be saved into. Note that the buffering of responses from proxied server is enabled and the response does not fit into the buffers.\n\nDisables temporary file usage when set to 0.\n",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size"
                        }
                    },
                    "tempFileWriteSize": {
                        "description": "Limits the size of data written to a temporary file at a time, when buffering of responses from the proxied server to temporary files is enabled.\n\nDisables temporary file usage when set to 0.\n",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[kKmM]?$",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size"
                        }
                    }
                }
            },
            "WebBackend": {
                "description": "Backend settings in a Web Component.\n",
                "type": "object",
                "properties": {
                    "keepAlive": {
                        "type": "object",
                        "properties": {
                            "connections": {
                                "type": "integer",
                                "minimum": 0,
                                "default": 0
                            },
                            "requestsPerConn": {
                                "type": "integer"
                            },
                            "idleTimeout": {
                                "type": "string",
                                "pattern": "^[0-9]+[h|m|s]{1}$",
                                "example": "1h"
                            }
                        }
                    },
                    "monitoring": {
                        "$ref": "#/components/schemas/WebMonitoring"
                    },
                    "workloadGroups": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/WebWorkloadGroup"
                        }
                    },
                    "preserveHostHeader": {
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "queue": {
                        "x-f5-experimental": true,
                        "type": "object",
                        "required": [
                            "length"
                        ],
                        "properties": {
                            "length": {
                                "type": "integer"
                            },
                            "timeOut": {
                                "type": "string",
                                "pattern": "^[0-9]+[h|m|s]{1}$",
                                "example": "1h"
                            }
                        }
                    },
                    "httpVersion": {
                        "x-f5-experimental": true,
                        "type": "string",
                        "pattern": "^[1-3]{1}\\.[0-1]{1}$",
                        "example": 1
                    },
                    "ntlmAuthentication": {
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "persistentState": {
                        "x-f5-experimental": true,
                        "type": "string"
                    },
                    "buffers": {
                        "$ref": "#/components/schemas/BackendBuffers"
                    },
                    "isSocketKeepaliveEnabled": {
                        "description": "Configures the “TCP keepalive” behavior for outgoing connections to a proxied server.",
                        "type": "boolean",
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_socket_keepalive"
                        }
                    },
                    "ignoreHeaders": {
                        "description": "Disables processing of certain response header fields from the proxied server.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "X-Accel-Redirect",
                            "X-Accel-Expires",
                            "X-Accel-Limit-Rate",
                            "X-Accel-Buffering",
                            "X-Accel-Charset",
                            "Expires",
                            "Cache-Control",
                            "Set-Cookie",
                            "Vary"
                        ],
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers"
                        }
                    },
                    "debugHeaders": {
                        "description": "Permits passing otherwise disabled header fields from a proxied server to a client.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "X-Accel-Redirect",
                            "X-Accel-Expires",
                            "X-Accel-Limit-Rate",
                            "X-Accel-Buffering",
                            "X-Accel-Charset",
                            "Expires",
                            "Cache-Control",
                            "Set-Cookie",
                            "Vary"
                        ],
                        "externalDocs": {
                            "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header"
                        }
                    },
                    "tls": {
                        "description": "TLS settings applicable to servers in Web workloadGroups.",
                        "type": "object",
                        "properties": {
                            "cipher": {
                                "description": "Specifies the enabled ciphers for requests to a proxied HTTPS server.",
                                "type": "string",
                                "example": "ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;",
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_ciphers"
                                }
                            },
                            "name": {
                                "description": "Allows overriding the server name used to verify the certificate of the proxied HTTPS server.",
                                "type": "string",
                                "example": "$proxy_host",
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_name"
                                }
                            },
                            "protocols": {
                                "description": "Enables the specified protocols for requests to a proxied HTTPS server.",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "TLSv1|TLSv1\\.[1-3]|SSLv2|SSLv3"
                                },
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_protocols"
                                }
                            },
                            "isServerNameEnabled": {
                                "description": "Enables or disables passing of the server name through TLS Server Name Indication extension (SNI, RFC 6066) when establishing a connection with the proxied HTTPS server.",
                                "type": "boolean",
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name"
                                }
                            },
                            "isSessionReuseEnabled": {
                                "description": "Determines whether SSL sessions can be reused when working with the proxied server.",
                                "type": "boolean",
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_session_reuse"
                                }
                            },
                            "isVerifiedEnabled": {
                                "description": "Enables or disables verification of the proxied HTTPS server certificate.",
                                "type": "boolean",
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify"
                                }
                            },
                            "verifyDepth": {
                                "description": "Sets the verification depth in the proxied HTTPS server certificates chain.",
                                "type": "integer",
                                "minimum": 0,
                                "externalDocs": {
                                    "url": "https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify_depth"
                                }
                            }
                        }
                    }
                }
            },
            "ApplicableUri": {
                "type": "object",
                "required": [
                    "uri"
                ],
                "properties": {
                    "uri": {
                        "type": "string"
                    },
                    "matchMethod": {
                        "$ref": "#/components/schemas/URIMatchMethod"
                    }
                }
            },
            "ApplicableUris": {
                "type": "array",
                "description": "Defines an array of ingress URIs with a corresponding matchMethod that this rewrite rule applies to.\nBy default, a rewrite rule applies to all of the ingress URIs in the component.\nA rewrite rule can also be applied at a gateway level by specifying ingress URIs\nfrom the gateway. For example \"http://www.nginx.com\". Note that applying the rewrite\nrule to URIs at a gateway level can affect other components. The URI and the matchMethod must\nmatch an ingress URI defined either at the component or gateway level. If no match is found\nthe request is rejected.\n",
                "items": {
                    "$ref": "#/components/schemas/ApplicableUri"
                }
            },
            "UriRewrite": {
                "type": "object",
                "required": [
                    "incomingPattern",
                    "rewritePattern"
                ],
                "properties": {
                    "applicableURIs": {
                        "$ref": "#/components/schemas/ApplicableUris"
                    },
                    "incomingPattern": {
                        "type": "string",
                        "description": "The regex pattern to match against the request URIs that are expected to be rewritten."
                    },
                    "rewritePattern": {
                        "type": "string",
                        "description": "The replacement regex pattern to apply to the URIs that are to be rewritten.",
                        "minLength": 1
                    },
                    "afterExecute": {
                        "type": "string",
                        "enum": [
                            "NONE",
                            "LAST",
                            "BREAK",
                            "REDIRECT",
                            "PERMANENT"
                        ],
                        "default": "BREAK"
                    }
                }
            },
            "UriRedirect": {
                "type": "object",
                "required": [
                    "responseCode"
                ],
                "properties": {
                    "applicableURIs": {
                        "$ref": "#/components/schemas/ApplicableUris"
                    },
                    "responseCode": {
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 308
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The return url to use for responses in the 301-308 range."
                    },
                    "text": {
                        "type": "string",
                        "description": "The return text to send for 300 responses."
                    }
                }
            },
            "ProgrammabilityAction": {
                "type": "string",
                "enum": [
                    "ADD",
                    "MODIFY",
                    "DELETE"
                ]
            },
            "CookieModification": {
                "type": "object",
                "required": [
                    "action",
                    "cookieName"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/ProgrammabilityAction"
                    },
                    "cookieName": {
                        "type": "string"
                    },
                    "cookieValue": {
                        "type": "string"
                    }
                }
            },
            "ProgrammabilityAddRequestHeader": {
                "type": "object",
                "required": [
                    "action",
                    "headerName",
                    "headerValue"
                ],
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Adds request header details.",
                        "enum": [
                            "ADD"
                        ]
                    },
                    "headerName": {
                        "type": "string",
                        "description": "The name of the response header to modify.",
                        "minLength": 1
                    },
                    "headerValue": {
                        "type": "string",
                        "description": "The value to apply to the request header.",
                        "minLength": 1
                    },
                    "applicableURIs": {
                        "$ref": "#/components/schemas/ApplicableUris"
                    }
                }
            },
            "ProgrammabilityDeleteRequestHeader": {
                "type": "object",
                "required": [
                    "action",
                    "headerName"
                ],
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Deletes request header details.",
                        "enum": [
                            "DELETE"
                        ]
                    },
                    "headerName": {
                        "type": "string",
                        "description": "The name of the request header to modify.",
                        "minLength": 1
                    },
                    "applicableURIs": {
                        "$ref": "#/components/schemas/ApplicableUris"
                    }
                }
            },
            "RequestHeaderModification": {
                "discriminator": {
                    "propertyName": "action",
                    "mapping": {
                        "ADD": "#/components/schemas/ProgrammabilityAddRequestHeader",
                        "DELETE": "#/components/schemas/ProgrammabilityDeleteRequestHeader"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ProgrammabilityAddRequestHeader"
                    },
                    {
                        "$ref": "#/components/schemas/ProgrammabilityDeleteRequestHeader"
                    }
                ]
            },
            "ProgrammabilityAddResponseHeader": {
                "type": "object",
                "required": [
                    "action",
                    "headerName",
                    "headerValue"
                ],
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Adds response header details.",
                        "enum": [
                            "ADD"
                        ]
                    },
                    "headerName": {
                        "type": "string",
                        "description": "The name of the response header to modify.",
                        "minLength": 1
                    },
                    "headerValue": {
                        "type": "string",
                        "description": "The value to apply to the response header.",
                        "minLength": 1
                    },
                    "responseCodeFilter": {
                        "type": "string",
                        "description": "The value to apply to the response code filter.",
                        "enum": [
                            "ALWAYS",
                            "PRE_DEFINED"
                        ],
                        "default": "PRE_DEFINED"
                    },
                    "applicableURIs": {
                        "$ref": "#/components/schemas/ApplicableUris"
                    }
                }
            },
            "ProgrammabilityDeleteResponseHeader": {
                "type": "object",
                "required": [
                    "action",
                    "headerName"
                ],
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Deletes response header details.",
                        "enum": [
                            "DELETE"
                        ]
                    },
                    "headerName": {
                        "type": "string",
                        "description": "The name of the response header to modify.\n\n> Warning: `Date`, `Content-Length`, and `Connection` headers cannot be deleted.\n",
                        "minLength": 1
                    },
                    "applicableURIs": {
                        "$ref": "#/components/schemas/ApplicableUris"
                    }
                }
            },
            "ResponseHeaderModification": {
                "discriminator": {
                    "propertyName": "action",
                    "mapping": {
                        "ADD": "#/components/schemas/ProgrammabilityAddResponseHeader",
                        "DELETE": "#/components/schemas/ProgrammabilityDeleteResponseHeader"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ProgrammabilityAddResponseHeader"
                    },
                    {
                        "$ref": "#/components/schemas/ProgrammabilityDeleteResponseHeader"
                    }
                ]
            },
            "Programmability": {
                "type": "object",
                "properties": {
                    "uriRewrites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UriRewrite"
                        }
                    },
                    "httpHttpsRedirect": {
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "uriRedirects": {
                        "x-f5-experimental": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UriRedirect"
                        }
                    },
                    "cookieModifications": {
                        "x-f5-experimental": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CookieModification"
                        }
                    },
                    "requestHeaderModifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestHeaderModification"
                        }
                    },
                    "responseHeaderModifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponseHeaderModification"
                        }
                    }
                }
            },
            "Logging": {
                "description": "Settings for error logs and access logs.",
                "type": "object",
                "properties": {
                    "errorLog": {
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "accessLog": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "$ref": "#/components/schemas/ServiceConfigState"
                            },
                            "format": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "WAF": {
                "description": "Defines the desired configurations for the WAF associated with the application component.",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Indicates whether the WAF is enabled or not."
                    },
                    "isMonitorOnly": {
                        "type": "boolean",
                        "default": true,
                        "description": "Indicates whether the WAF will monitor or block security violations."
                    },
                    "signatureOverrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "properties": {
                                "action": {
                                    "type": "string",
                                    "enum": [
                                        "IGNORE"
                                    ]
                                }
                            },
                            "description": "Identifies overrides for the signatures contained within the associated security strategy.\n",
                            "example": {
                                "1234": {
                                    "action": "IGNORE"
                                },
                                "1235": {
                                    "action": "IGNORE"
                                }
                            }
                        }
                    }
                }
            },
            "APIKeyClientAuth": {
                "description": "Defines how an API client should provide their API Key credentials.",
                "required": [
                    "keyLocation"
                ],
                "properties": {
                    "keyLocation": {
                        "type": "string",
                        "enum": [
                            "HEADER",
                            "QUERY_PARAM"
                        ]
                    },
                    "key": {
                        "type": "string"
                    }
                }
            },
            "JWTClientAuth": {
                "description": "Defines how an API Client should provide their JWT.",
                "required": [
                    "keyLocation"
                ],
                "properties": {
                    "keyLocation": {
                        "type": "string",
                        "enum": [
                            "BEARER",
                            "HEADER",
                            "QUERY_PARAM",
                            "COOKIE"
                        ]
                    },
                    "key": {
                        "type": "string"
                    }
                }
            },
            "ConditionalAuthPolicy": {
                "description": "Defines further fine-grained access control on top of API Key or JWT Auth.",
                "required": [
                    "sourceType",
                    "comparisonType",
                    "comparisonValues",
                    "action",
                    "denyStatusCode"
                ],
                "properties": {
                    "sourceType": {
                        "type": "string",
                        "enum": [
                            "HEADER",
                            "JWT_CLAIM"
                        ]
                    },
                    "sourceKey": {
                        "type": "string"
                    },
                    "comparisonType": {
                        "type": "string",
                        "enum": [
                            "EQUALS",
                            "NOT_EQUALS",
                            "IN",
                            "CONTAINS"
                        ]
                    },
                    "comparisonValues": {
                        "type": "array",
                        "description": "Valid values for the sourceType.",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "ALLOW",
                            "DENY"
                        ]
                    },
                    "denyStatusCode": {
                        "type": "integer"
                    }
                }
            },
            "RateLimit": {
                "required": [
                    "rate"
                ],
                "properties": {
                    "rate": {
                        "type": "string",
                        "pattern": "^[0-9]+r\\/[m|s]{1}$",
                        "description": "Sets the maximum number of allowed requests.\n\nYou can specify the rate limit as requests per second (r/s) or requests per minute (r/m).\n",
                        "example": "10r/s"
                    },
                    "burstBeforeReject": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "burstBeforeDelay": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "statusCode": {
                        "type": "integer",
                        "default": 429
                    },
                    "key": {
                        "type": "string",
                        "default": "$binary_remote_addr",
                        "description": "Parameters (NGINX variable) for a shared memory zone that stores states for various keys; used for `limit_req_zone`."
                    }
                }
            },
            "Security": {
                "type": "object",
                "description": "Defines the desired security configurations for the application component.",
                "properties": {
                    "strategyRef": {
                        "$ref": "#/components/schemas/ResourceRef"
                    },
                    "waf": {
                        "$ref": "#/components/schemas/WAF"
                    },
                    "identityProviderRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        },
                        "description": "The list of Identity Providers that are used in this Security policy."
                    },
                    "apiKeyClientAuth": {
                        "$ref": "#/components/schemas/APIKeyClientAuth"
                    },
                    "jwtClientAuth": {
                        "$ref": "#/components/schemas/JWTClientAuth"
                    },
                    "conditionalAuthPolicies": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ConditionalAuthPolicy"
                        }
                    },
                    "rateLimits": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RateLimit"
                        }
                    },
                    "interceptWorkloadErrors": {
                        "x-f5-experimental": true,
                        "$ref": "#/components/schemas/ServiceConfigState"
                    }
                }
            },
            "PublishedApiRefs": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ResourceRef"
                }
            },
            "ComponentWebDesiredState": {
                "description": "The desired settings in the Web Component that the user wants in the configuration on NGINX instances associated with\nthe Gateways which this component references.\n",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ComponentStateCommon"
                    },
                    {
                        "type": "object",
                        "required": [
                            "ingress",
                            "backend"
                        ],
                        "properties": {
                            "componentType": {
                                "description": "Defines the Component type. The default type is Web.",
                                "type": "string",
                                "enum": [
                                    "WEB"
                                ]
                            },
                            "ingress": {
                                "$ref": "#/components/schemas/ComponentWebIngress"
                            },
                            "backend": {
                                "$ref": "#/components/schemas/WebBackend"
                            },
                            "programmability": {
                                "$ref": "#/components/schemas/Programmability"
                            },
                            "logging": {
                                "$ref": "#/components/schemas/Logging"
                            },
                            "security": {
                                "$ref": "#/components/schemas/Security"
                            },
                            "publishedApiRefs": {
                                "$ref": "#/components/schemas/PublishedApiRefs"
                            },
                            "errorSetRef": {
                                "$ref": "#/components/schemas/ResourceRef"
                            },
                            "compression": {
                                "$ref": "#/components/schemas/Compression"
                            }
                        }
                    }
                ]
            },
            "ComponentTcpUdpIngress": {
                "description": "Ingress settings in a TCP/UDP Component.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ComponentIngressCommon"
                    }
                ]
            },
            "TcpUdpMonitoring": {
                "description": "Health monitor settings across all workload groups in a TCP/UDP Component.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MonitoringCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "send": {
                                "description": "Probe request for a TCP/UDP monitor.",
                                "type": "string"
                            },
                            "response": {
                                "description": "Case-sensitive regular expression for the expected success response to a TCP/UDP monitor.",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "TcpUdpProxy": {
                "description": "Proxy retry and timeout settings applicable to servers in a TcpUdp workloadGroup associated with a Component.",
                "type": "object",
                "properties": {
                    "nextUpstream": {
                        "description": "When a connection to the proxied server cannot be established, determines whether a client connection will be passed to the next server.",
                        "type": "string",
                        "enum": [
                            "ON",
                            "OFF"
                        ],
                        "default": "OFF"
                    },
                    "connectTimeout": {
                        "description": "Defines a timeout for establishing a connection with the proxied server.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$"
                    },
                    "proxyTimeout": {
                        "description": "Sets the timeout between two successive read or write operations on client or proxied server connections.",
                        "type": "string",
                        "pattern": "^[0-9]{1,12}[hms]?$"
                    }
                }
            },
            "TcpUdpWorkloadGroup": {
                "description": "Group of servers hosting a part of a TCP/UDP application represented by a Component.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WorkloadGroupCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "proxy": {
                                "$ref": "#/components/schemas/TcpUdpProxy"
                            },
                            "uris": {
                                "type": "object",
                                "description": "The URI for a server hosting a part of a TCP/UDP application.\n\nThe URI must conform to the format `schema://address:port`\nwhere schema is chosen from tcp, udp, or tcp+tls, address is IP or hostname.\nAll three of schema, address, and port must be provided.\n\nFor example:\n\n- `tcp://192.0.2.247:8443`\n- `tcp+tls://192.0.2.247:8449`\n- `udp://www.f5workload.com:989`\n",
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/WorkloadUri"
                                }
                            }
                        }
                    }
                ]
            },
            "TcpUdpBackend": {
                "description": "Backend settings in a TCP/UDP Component.\n",
                "type": "object",
                "properties": {
                    "monitoring": {
                        "$ref": "#/components/schemas/TcpUdpMonitoring"
                    },
                    "workloadGroups": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TcpUdpWorkloadGroup"
                        }
                    }
                }
            },
            "ComponentTcpUdpDesiredState": {
                "description": "The desired settings in the TCP/UDP Component to use in the configuration on NGINX instances associated with the Gateways that this Component references.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ComponentStateCommon"
                    },
                    {
                        "type": "object",
                        "required": [
                            "componentType",
                            "ingress",
                            "backend"
                        ],
                        "properties": {
                            "componentType": {
                                "description": "Defines what type of Component this is. The type must be TCPUDP.",
                                "type": "string",
                                "enum": [
                                    "TCPUDP"
                                ]
                            },
                            "ingress": {
                                "$ref": "#/components/schemas/ComponentTcpUdpIngress"
                            },
                            "backend": {
                                "$ref": "#/components/schemas/TcpUdpBackend"
                            },
                            "logging": {
                                "$ref": "#/components/schemas/Logging"
                            }
                        }
                    }
                ]
            },
            "ComponentDesiredState": {
                "description": "The desired component settings to use in the NGINX instance configuration that's associated with\nthe Gateways that this component references.\n",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ComponentWebDesiredState"
                    },
                    {
                        "$ref": "#/components/schemas/ComponentTcpUdpDesiredState"
                    }
                ]
            },
            "ComponentWebCurrentStatus": {
                "description": "The current snapshot of the web component settings that are reflected in the configuration on NGINX instances associated with\nthe Gateways that this component references.\n\nThese settings should converge to those in Desired State as the new configuration is applied unless there are issues;\nthe State setting gives a summary of how the convergence is proceeding.\n",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ComponentStateCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "componentType": {
                                "description": "Defines what type of Component this is.",
                                "type": "string",
                                "enum": [
                                    "WEB"
                                ]
                            },
                            "ingress": {
                                "$ref": "#/components/schemas/ComponentWebIngress"
                            },
                            "backend": {
                                "$ref": "#/components/schemas/WebBackend"
                            },
                            "programmability": {
                                "$ref": "#/components/schemas/Programmability"
                            },
                            "logging": {
                                "$ref": "#/components/schemas/Logging"
                            },
                            "security": {
                                "$ref": "#/components/schemas/Security"
                            },
                            "publishedApiRefs": {
                                "$ref": "#/components/schemas/PublishedApiRefs"
                            },
                            "errorSetRef": {
                                "$ref": "#/components/schemas/ResourceRef"
                            },
                            "compression": {
                                "$ref": "#/components/schemas/Compression"
                            },
                            "state": {
                                "$ref": "#/components/schemas/ConfigState"
                            }
                        }
                    }
                ]
            },
            "ComponentTcpUdpCurrentStatus": {
                "description": "The current snapshot of the TCP/UDP component settings that are reflected in the configuration on NGINX instances associated with\nthe Gateways that this component references.\n\nThese settings should converge to those in Desired State as the new configuration is applied unless there are issues;\nthe State setting gives a summary of how the convergence is proceeding.\n",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ComponentStateCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "componentType": {
                                "description": "Defines what type of Component this is.",
                                "type": "string",
                                "enum": [
                                    "TCPUDP"
                                ]
                            },
                            "ingress": {
                                "$ref": "#/components/schemas/ComponentTcpUdpIngress"
                            },
                            "backend": {
                                "$ref": "#/components/schemas/TcpUdpBackend"
                            },
                            "logging": {
                                "$ref": "#/components/schemas/Logging"
                            },
                            "state": {
                                "$ref": "#/components/schemas/ConfigState"
                            }
                        }
                    }
                ]
            },
            "ComponentCurrentStatus": {
                "description": "The current snapshot of the component settings that are reflected in the configuration on NGINX instances associated with\nthe Gateways that this Component references.\n\nThese settings should converge to those in Desired State as the new configuration is applied unless there are issues;\nthe State setting gives a summary of how the convergence is proceeding.\n",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ComponentWebCurrentStatus"
                    },
                    {
                        "$ref": "#/components/schemas/ComponentTcpUdpCurrentStatus"
                    }
                ]
            },
            "Component": {
                "description": "A component represents the processing –- reverse proxying, rate limiting, security policy enforcement, header rewrites, etc.\n–- of traffic associated with a logical part (for example, microservice) of an application/API. It also defines the subsequent\nload balancing of traffic to workloads implementing that part of the application/API.\n\nA component can be either a web or a TCP/UDP component –- indicated by the component type. Web components are used to\nconfigure NGINX functionality associated with HTTP/HTTPS protocols and inherit web and common settings from linked Gateways.\nTCP/UDP components are used to configure NGINX functionality associated with TCP/UDP protocols\nand inherit TCP/UDP and common settings from linked Gateways.\n",
                "type": "object",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/ComponentDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/ComponentCurrentStatus"
                    }
                }
            },
            "ComponentName": {
                "type": "string"
            },
            "Location": {
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/LocationState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/LocationState"
                    }
                }
            },
            "GetLocationResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Location"
                    }
                ]
            },
            "ListLocationResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    }
                }
            },
            "LocationState": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/OtherLocation"
                    },
                    {
                        "$ref": "#/components/schemas/AWSLocation"
                    },
                    {
                        "$ref": "#/components/schemas/AzureLocation"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "OTHER_LOCATION": "#/components/schemas/OtherLocation",
                        "AWS_LOCATION": "#/components/schemas/AWSLocation",
                        "AZURE_LOCATION": "#/components/schemas/AzureLocation"
                    }
                }
            },
            "AWSLocation": {
                "type": "object",
                "required": [
                    "vpcID",
                    "region",
                    "integrationRef",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The location type. Select the environment where you want to create the location. \nTo create a location that’s specific to the AWS cloud environment, select AWS_LOCATION.\n",
                        "enum": [
                            "AWS_LOCATION"
                        ]
                    },
                    "region": {
                        "description": "The AWS region.\n",
                        "type": "string"
                    },
                    "vpcID": {
                        "type": "string",
                        "description": "The vpcID of the AWS Virtual Private Cloud (VPC) where new Instances created under this location should reside.\nThe VPC must be in the specified AWS region.\n"
                    },
                    "integrationRef": {
                        "$ref": "#/components/schemas/ResourceRef"
                    }
                }
            },
            "AzureLocation": {
                "x-f5-experimental": true,
                "type": "object",
                "required": [
                    "type",
                    "region",
                    "resourceGroup",
                    "subscriptionID",
                    "integrationRef"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The location type.",
                        "enum": [
                            "AZURE_LOCATION"
                        ]
                    },
                    "region": {
                        "description": "The Azure region.",
                        "type": "string"
                    },
                    "resourceGroup": {
                        "type": "string",
                        "description": "The name of the resourceGroup."
                    },
                    "subscriptionID": {
                        "type": "string",
                        "description": "The unique alphanumeric string that identifies the Azure subscription."
                    },
                    "integrationRef": {
                        "description": "Integration ref.",
                        "$ref": "#/components/schemas/ResourceRef"
                    }
                }
            },
            "OtherLocation": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The location type. Select the environment where you want to create the location. \nTo create a location that’s not specific to any cloud environment, select OTHER_LOCATION.\n",
                        "enum": [
                            "OTHER_LOCATION"
                        ]
                    }
                }
            },
            "InstanceTemplate": {
                "type": "object",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/InstanceTemplateState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/InstanceTemplateState"
                    }
                }
            },
            "GetInstanceTemplateResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstanceTemplate"
                    }
                ]
            },
            "ListInstanceTemplateResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstanceTemplate"
                        }
                    }
                }
            },
            "InstanceTemplateState": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AWSInstanceTemplate"
                    },
                    {
                        "$ref": "#/components/schemas/AzureInstanceTemplate"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "AWS_INSTANCE_TEMPLATE": "#/components/schemas/AWSInstanceTemplate",
                        "AZURE_INSTANCE_TEMPLATE": "#/components/schemas/AzureInstanceTemplate"
                    }
                }
            },
            "AWSInstanceTemplate": {
                "type": "object",
                "required": [
                    "type",
                    "amiID",
                    "instanceType",
                    "subnetID"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of Instance Template.",
                        "enum": [
                            "AWS_INSTANCE_TEMPLATE"
                        ]
                    },
                    "amiID": {
                        "type": "string",
                        "description": "The AWS `amiID` for the image to use when deploying an Instance using the template.\n"
                    },
                    "instanceType": {
                        "type": "string",
                        "description": "The machine size.\n"
                    },
                    "subnetID": {
                        "type": "string",
                        "description": "The `subnetID` of the AWS subnet where new Instances created using the Instance Template should reside.\n\nThe specified subnet must be in the same AWS Virtual Private Cloud (VPC) as the Instance Template's parent Location resource.\n"
                    },
                    "securityGroupIDs": {
                        "type": "array",
                        "description": "The list of AWS securityGroupIDs that you want to apply to new Instances. \n\nThe Security GroupIDs must be available in the same AWS region and Virtual Private Cloud (VPC) as the Instance Template's parent Location resource.\n",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "Provide the public key that you want to use to authenticate to the EC2 instance that this template will create. \n"
                    },
                    "associatePublicIPAddress": {
                        "type": "boolean",
                        "description": "Specify if a public IP address should be assigned to the instance.\n"
                    }
                }
            },
            "AzureInstanceTemplate": {
                "x-f5-experimental": true,
                "type": "object",
                "required": [
                    "type",
                    "instanceType",
                    "image",
                    "networkInterface",
                    "adminUser",
                    "publicKey"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of Instance Template.",
                        "enum": [
                            "AZURE_INSTANCE_TEMPLATE"
                        ]
                    },
                    "image": {
                        "$ref": "#/components/schemas/AzureImage"
                    },
                    "instanceType": {
                        "type": "string",
                        "description": "The virtual machine size and type."
                    },
                    "networkInterface": {
                        "$ref": "#/components/schemas/AzureNetworkInterface"
                    },
                    "adminUser": {
                        "type": "string",
                        "description": "The name of the administration account."
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The Public Key string for the adminUser."
                    }
                }
            },
            "AzureImage": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AzureImageID"
                    },
                    {
                        "$ref": "#/components/schemas/AzureImageReference"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "AZURE_IMAGE_ID": "#/components/schemas/AzureImageID",
                        "AZURE_IMAGE_REFERENCE": "#/components/schemas/AzureImageReference"
                    }
                }
            },
            "AzureImageID": {
                "type": "object",
                "description": "The Azure resource ID for the image to use when deploying an Instance.",
                "required": [
                    "type",
                    "imageID"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the Azure Image.",
                        "enum": [
                            "AZURE_IMAGE_ID"
                        ]
                    },
                    "imageID": {
                        "type": "string",
                        "description": "The resource ID of the Azure image."
                    }
                }
            },
            "AzureImageReference": {
                "type": "object",
                "description": "The parameters that identify which Azure Marketplace image to use for the Instance.",
                "required": [
                    "type",
                    "publisher",
                    "offer",
                    "sku"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the Azure Image.",
                        "enum": [
                            "AZURE_IMAGE_REFERENCE"
                        ]
                    },
                    "publisher": {
                        "type": "string",
                        "description": "The publisher of the Azure Marketplace image."
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of the Azure Marketplace image."
                    },
                    "sku": {
                        "type": "string",
                        "description": "The SKU of the Azure Marketplace image."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the Azure Marketplace image (default is latest)."
                    }
                }
            },
            "AzureNetworkID": {
                "type": "object",
                "description": "Identifies the existing Azure Network Interface that you want the Instance to use.",
                "required": [
                    "type",
                    "nicID"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the Azure Network Interface.",
                        "enum": [
                            "AZURE_NIC_ID"
                        ]
                    },
                    "nicID": {
                        "type": "string",
                        "description": "The ID of the Azure Network Interface."
                    }
                }
            },
            "AppList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/App"
                        }
                    }
                }
            },
            "App": {
                "type": "object",
                "description": "An App is a collection of Components.",
                "required": [
                    "metadata"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "x-f5-experimental": true,
                        "type": "object"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/AppCurrentStatus"
                    }
                }
            },
            "AppCurrentStatus": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    },
                    "componentRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRef"
                        }
                    }
                }
            },
            "Integration": {
                "x-f5-experimental": true,
                "type": "object",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/IntegrationState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/IntegrationState"
                    }
                },
                "example": {
                    "metadata": {
                        "name": "my-aws-integration",
                        "endpointUri": "https://ec2.us-west-1.amazonaws.com",
                        "description": "AWS integration for us-west-1",
                        "displayName": "UsWest1-Integration",
                        "tags": [
                            "us-west-1"
                        ],
                        "uid": "619887de-a748-4931-853d-c6b706f95ddf",
                        "createTime": "2019-09-18T16:42:15.1183523Z",
                        "updateTime": "2019-09-18T16:42:15.1183523Z"
                    },
                    "desiredState": {
                        "type": "AWS_INTEGRATION",
                        "credential": {
                            "type": "AWS_ACCESS_KEY_CREDENTIAL",
                            "accessKeyID": "<access key id>",
                            "secretAccessKey": "*********"
                        }
                    },
                    "currentStatus": {
                        "type": "AWS_INTEGRATION",
                        "credential": {
                            "type": "AWS_ACCESS_KEY_CREDENTIAL",
                            "accessKeyID": "<access key id>",
                            "secretAccessKey": "*********"
                        }
                    }
                }
            },
            "GetIntegrationResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Integration"
                    }
                ]
            },
            "ListIntegrationResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Integration"
                        }
                    }
                }
            },
            "IntegrationState": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AWSIntegration"
                    }
                ],
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "AWSIntegration": {
                "required": [
                    "type",
                    "credential"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "AWS_INTEGRATION"
                        ]
                    },
                    "endpointUri": {
                        "type": "string"
                    },
                    "credential": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AWSAccessKeyCredential"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "type"
                        }
                    }
                }
            },
            "AWSAccessKeyCredential": {
                "required": [
                    "type",
                    "accessKeyID",
                    "secretAccessKey"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "AWS_ACCESS_KEY_CREDENTIAL"
                        ]
                    },
                    "accessKeyID": {
                        "type": "string"
                    },
                    "secretAccessKey": {
                        "type": "string"
                    }
                }
            },
            "PolicyDesiredState": {
                "type": "object",
                "description": "The defired state of the policy",
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "object",
                        "$ref": "#/components/schemas/PolicyData",
                        "example": "{\"policy\": {\"name\": \"/Common/NAPBlockingDefaultPolicy\", \"template\": {\"name\": \"POLICY_TEMPLATE_NGINX_BASE\"}, \"applicationLanguage\": \"utf-8\", \"enforcementMode\": \"blocking\", \"signatures\": [], \"bot-defense\": {\"settings\": {\"isEnabled\": false}}, \"headers\": [{\"name\": \"*\", \"type\": \"wildcard\", \"decodeValueAsBase64\": \"disabled\"}, {\"name\": \"*-bin\", \"type\": \"wildcard\", \"decodeValueAsBase64\": \"required\"},{\"name\": \"Referer\", \"type\": \"explicit\", \"decodeValueAsBase64\": \"disabled\"}, {\"name\": \"Authorization\", \"type\": \"explicit\", \"decodeValueAsBase64\": \"disabled\"}, {\"name\": \"Transfer-Encoding\", \"type\": \"explicit\", \"decodeValueAsBase64\": \"disabled\"}], \"cookies\": [{\"name\": \"*\", \"type\": \"wildcard\", \"decodeValueAsBase64\": \"disabled\"}], \"parameters\": [{\"name\": \"*\", \"type\": \"wildcard\", \"decodeValueAsBase64\": \"disabled\"}]}}"
                    }
                }
            },
            "PolicyList": {
                "type": "object",
                "required": [
                    "items"
                ],
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PolicyStatus"
                        }
                    }
                }
            },
            "PolicyStatus": {
                "type": "object",
                "required": [
                    "metadata",
                    "desiredState",
                    "currentStatus"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/PolicyDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/PolicyCurrentStatus"
                    }
                }
            },
            "PolicyCurrentStatus": {
                "type": "object",
                "description": "Shows the current status of the policy.",
                "required": [
                    "state",
                    "data"
                ],
                "properties": {
                    "content": {
                        "type": "object",
                        "$ref": "#/components/schemas/PolicyData"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ConfigState"
                    }
                }
            },
            "Policy": {
                "type": "object",
                "description": "Contains the policy to upload.",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/PolicyDesiredState"
                    }
                }
            },
            "PolicyData": {
                "type": "object",
                "description": "Contains the policy to upload."
            },
            "Gateway": {
                "type": "object",
                "description": "A Gateway represents the initial network entry point of application and/or API traffic into an NGINX instance that is\nin the data path of this traffic. Gateway settings are combined with Component settings that reference the Gateway;\nthe resulting composite config is sent to the NGINX instances that the Gateway references.\n\nA Gateway can be referenced by either web components and/or TCP/UDP components. Web-only settings in the Gateway (for example, web URIs)\napply only to web components. TCP/UDP-only settings in the Gateway (for example, TCP/UDP URIs) apply only to TCP/UDP components.\nWeb and TCP/UDP common settings in the Gateway (for example, global TLS, socket) apply to both web and TCP/UDP components.\n\nExamples:\nGateway with web and TCP/UDP URIs, web-specific settings, common settings. Web URIs and web settings apply to web components.\nCommon settings apply to both component types. TCP/UDP URIs apply only to TCP/UDP components –- presently, there are no other TCP/UDP only settings.\n\nGateway web URIs (for example, https://www.xyz.com) combined with web component URIs (for example, /blog) define web URI config (https://www.xyz.com/blog).\nComponent TCP/UDP URIs define TCP/UDP URI config (for example, tcp+tls://192.168.1.1:200); Gateway TCP/UDP URIs can provide TLS info plus restrict\nwhich TCP/UDP URIs can be in the component. Alternatively, component URIs fully define the URI config if the Gateway has no URIs.\n\nIf only a single URI type is in the Gateway, the URI config for that type is determined by combining the Gateway URIs with\nthe URIs from components of that type; only component URIs are used for the URI config for the other type.\n\nFor HTTPS URIs, global Gateway TLS settings are used when more specific TLS info is not present in the Gateway URIs,\nor for component URIs that have an HTTPS protocol and hostnames with no specific URI or component global TLS settings defined.\n\nFor tcp+tls URIs, Gateway TLS settings are used when TLS info is not defined in a component URI or component global TLS.\nA Gateway URI’s TLS info is used if it encompasses the component URI. For example, tcp+tls://192.168.1.5:100-104 in the Gateway and\ncomponent URI of tcp+tls://192.168.1.5:100. Global Gateway TLS is used if no other TLS settings apply.\n",
                "required": [
                    "metadata",
                    "desiredState"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ResourceMeta"
                    },
                    "desiredState": {
                        "$ref": "#/components/schemas/GatewayDesiredState"
                    },
                    "currentStatus": {
                        "$ref": "#/components/schemas/GatewayCurrentStatus"
                    }
                }
            },
            "GatewayCurrentStatus": {
                "description": "The current snapshot of the gateway settings that are reflected in the configuration on NGINX instances referenced by this Gateway.\nThese settings should converge to those in Desired State as the new configuration is applied unless there are issues;\nthe State setting gives a summary of how the convergence is proceeding.\n",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GatewayWebState"
                    },
                    {
                        "$ref": "#/components/schemas/GatewayStateCommon"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "ingress": {
                                "$ref": "#/components/schemas/GatewayIngress"
                            },
                            "state": {
                                "$ref": "#/components/schemas/ConfigState"
                            }
                        }
                    }
                ]
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again.\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorModel"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "User authentication is invalid or missing.\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorModel"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "The specified instance group resource was not found.\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorModel"
                        }
                    }
                }
            },
            "Conflict": {
                "description": "The request failed due to a conflict with an existing instance group resource.\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorModel"
                        }
                    }
                }
            },
            "NotAllowed": {
                "description": "The request is not allowed on the specified resource.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ErrorModel"
                    },
                    "example": {
                      "code": 120322,
                      "message": "Error deleting the location: the name 'unspecified' is reserved. Specify a different name for the location, then try again."
                    }
                  }
                }
            }
        },
        "examples": {
            "AWSInstanceRequest": {
                "value": {
                    "metadata": {
                        "name": "nginx-dp-1",
                        "displayName": "nginx-dp-1",
                        "tags": [
                            "prod-1",
                            "dev-1"
                        ]
                    },
                    "desiredState": {
                        "type": "AWS_INSTANCE",
                        "templateRef": {
                            "ref": "/infrastructure/locations/aws-east/instance-templates/small-dev-template"
                        }
                    }
                }
            },
            "AzureInstanceRequest": {
                "value": {
                    "metadata": {
                        "name": "nginx-dp-1",
                        "displayName": "nginx-dp-1",
                        "tags": [
                            "prod-1",
                            "dev-1"
                        ]
                    },
                    "desiredState": {
                        "type": "AZURE_INSTANCE",
                        "templateRef": {
                            "ref": "/infrastructure/locations/azure-westus2/instance-templates/small-dev-template"
                        }
                    }
                }
            },
            "InstanceUpdateRequest": {
                "value": {
                    "metadata": {
                        "name": "nginx-dp-1",
                        "displayName": "nginx-dp-1",
                        "description": "An example NGINX Instance.",
                        "tags": [
                            "prod-1",
                            "dev-1"
                        ]
                    }
                }
            },
            "AWSInstance": {
                "value": {
                    "metadata": {
                        "name": "instance-1",
                        "displayName": "My Instance",
                        "tags": [
                            "prod-1",
                            "dev-1"
                        ],
                        "links": {
                            "rel": "/infrastructure/locations/unspecified/instances/instance-1"
                        },
                        "createTime": "2019-07-29T09:12:33.001Z",
                        "updateTime": "2019-07-29T09:12:33.001Z"
                    },
                    "desiredState": {
                        "type": "AWS_INSTANCE",
                        "templateRef": {
                            "ref": "/infrastructure/locations/aws-uswest-2/instance-templates/my-t2-medium"
                        }
                    },
                    "currentStatus": {
                        "type": "AWS_INSTANCE",
                        "state": {
                            "selfConfigState": {
                                "configured": 1,
                                "configuring": 0,
                                "deleting": 0,
                                "error": 0,
                                "isConfigured": true,
                                "isConfiguring": false,
                                "isDeleting": false,
                                "isError": false,
                                "total": 1
                            }
                        },
                        "hostname": "instance-1.mycloud.net",
                        "version": "1.17.3",
                        "muted": false,
                        "networkConfig": {
                            "networkInterfaces": [
                                {
                                    "name": "eth0",
                                    "privateDnsName": "ip-172-16-0-71.us-west-2.compute.internal",
                                    "publicDnsName": "ec2-54-212-110-173.us-west-2.compute.amazonaws.com",
                                    "privateIP": "172.16.0.71",
                                    "publicIP": "54.212.110.173",
                                    "subnet": {
                                        "subnetID": "subnet-055d28be58feb0a7d",
                                        "cidrIPv4": "172.16.0.0/24"
                                    }
                                }
                            ]
                        },
                        "agent": {
                            "credentials": {
                                "hostname": "instance-1.mycloud.net",
                                "uuid": "c1088edfd9f35cd38d5b4ce109508fe9"
                            },
                            "version": 2.8
                        },
                        "legacyNginxMetadata": {
                            "build": "nginx-plus-r19",
                            "built_from_source": false,
                            "last_seen": "2019-11-12T23:47:52.966Z",
                            "pid": 2749,
                            "properties": {
                                "conf-path": "/etc/nginx/nginx.conf",
                                "error-log-path": "/var/log/nginx/error.log",
                                "group": "nginx",
                                "http-client-body-temp-path": "/var/cache/nginx/client_temp",
                                "http-fastcgi-temp-path": "/var/cache/nginx/fastcgi_temp",
                                "http-log-path": "/var/log/nginx/access.log",
                                "http-proxy-temp-path": "/var/cache/nginx/proxy_temp",
                                "http-scgi-temp-path": "/var/cache/nginx/scgi_temp",
                                "http-uwsgi-temp-path": "/var/cache/nginx/uwsgi_temp",
                                "loadable_modules": [],
                                "lock-path": "/var/run/nginx.lock",
                                "modules-path": "/usr/lib/nginx/modules",
                                "packages": {
                                    "nginx-plus": "19-1~bionic"
                                },
                                "path": {
                                    "bin": "/usr/sbin/nginx",
                                    "conf": "/etc/nginx/nginx.conf"
                                },
                                "pid-path": "/var/run/nginx.pid",
                                "prefix": "/etc/nginx",
                                "sbin-path": "/usr/sbin/nginx",
                                "status_module_enabled": false,
                                "stub_status_enabled": false,
                                "stub_status_url": null,
                                "user": "nginx",
                                "with-cc-opt": "-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-plus-1.17.3/debian/debuild-base/nginx-plus-1.17.3=. -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC",
                                "with-compat": true,
                                "with-file-aio": true,
                                "with-http_addition_module": true,
                                "with-http_auth_jwt_module": true,
                                "with-http_auth_request_module": true,
                                "with-http_dav_module": true,
                                "with-http_f4f_module": true,
                                "with-http_flv_module": true,
                                "with-http_gunzip_module": true,
                                "with-http_gzip_static_module": true,
                                "with-http_hls_module": true,
                                "with-http_mp4_module": true,
                                "with-http_random_index_module": true,
                                "with-http_realip_module": true,
                                "with-http_secure_link_module": true,
                                "with-http_session_log_module": true,
                                "with-http_slice_module": true,
                                "with-http_ssl_module": true,
                                "with-http_stub_status_module": true,
                                "with-http_sub_module": true,
                                "with-http_v2_module": true,
                                "with-ld-opt": "-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie",
                                "with-mail": true,
                                "with-mail_ssl_module": true,
                                "with-stream": true,
                                "with-stream_realip_module": true,
                                "with-stream_ssl_module": true,
                                "with-stream_ssl_preread_module": true,
                                "with-threads": true
                            },
                            "running": true,
                            "ssl": {
                                "built": [
                                    "OpenSSL",
                                    "1.1.1",
                                    "11 Sep 2018"
                                ],
                                "run": [
                                    "OpenSSL",
                                    "1.1.1",
                                    "11 Sep 2018"
                                ]
                            },
                            "start_time": 1573580604000
                        },
                        "legacySystemMetadata": {
                            "boot": 1573580280000,
                            "disk_partitions": [
                                {
                                    "device": "/dev/sda2",
                                    "fstype": "ext4",
                                    "mountpoint": "/"
                                },
                                {
                                    "device": "/dev/sda1",
                                    "fstype": "ext3",
                                    "mountpoint": "/boot"
                                }
                            ],
                            "network": {
                                "default": "lo",
                                "interfaces": {
                                    "ipv4": {
                                        "address": "127.0.0.1",
                                        "netmask": "255.0.0.0",
                                        "prefixlen": 8
                                    },
                                    "ipv6": {
                                        "address": "::1",
                                        "netmask": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
                                        "prefixlen": 128
                                    },
                                    "mac": "00:00:00:00:00:00",
                                    "name": "lo"
                                }
                            },
                            "os-type": "linux",
                            "processor": {
                                "architecture": "x86_64",
                                "cache": {
                                    "L1d": "32K",
                                    "L1i": "32K",
                                    "L2": "1024K",
                                    "L3": "25344K"
                                },
                                "cores": 1,
                                "cpus": 4,
                                "hypervisor": "VMware",
                                "mhz": 2300,
                                "model": "Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz",
                                "virtualization": "full"
                            },
                            "release": {
                                "codename": "bionic",
                                "id": "ubuntu",
                                "name": "Ubuntu",
                                "version": "18.04.2 LTS (Bionic Beaver)",
                                "version_id": 18.04
                            }
                        }
                    }
                }
            },
            "AzureInstance": {
                "value": {
                    "metadata": {
                        "name": "instance-1",
                        "createTime": "2020-10-27T22:14:36.994172Z",
                        "description": "My Azure Instance",
                        "displayName": "Instance-1",
                        "tags": [
                            "prod-1",
                            "dev-1"
                        ],
                        "kind": "instance",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/azure-westus2/instances/instance-1"
                        },
                        "ref": "/infrastructure/locations/azure-westus2/instances/instance-1",
                        "uid": "4ed722ec-1bc0-47a1-9772-87718fa9ddb8",
                        "updateTime": "2020-10-27T22:14:36.994172Z"
                    },
                    "desiredState": {
                        "nginx": {
                            "process": {
                                "group": "test",
                                "user": "testuser"
                            }
                        },
                        "templateRef": {
                            "ref": "/infrastructure/locations/azure-westus2/instance-templates/azure-standard-ds1v2"
                        },
                        "type": "AZURE_INSTANCE"
                    },
                    "currentStatus": {
                        "networkConfig": {
                            "networkInterfaces": [
                                {
                                    "name": "my-nic-1",
                                    "publicDnsName": "myapp.westus2.cloudapp.azure.com",
                                    "privateIP": "10.0.1.4",
                                    "publicIP": "52.229.16.198",
                                    "subnet": {
                                        "subnetID": "subnet-test",
                                        "cidrIPv4": "10.0.1.0/24"
                                    }
                                }
                            ]
                        },
                        "agent": {
                            "credentials": {
                                "hostname": "instance-1.mycloud.net",
                                "uuid": "c1088edfd9f35cd38d5b4ce109508fe9"
                            },
                            "version": "3.12.5"
                        },
                        "hostname": "instance-1",
                        "instanceID": "ce266e67-42ec-41a0-b8f4-f4cd0be01828",
                        "legacyNginxMetadata": {
                            "build": "nginx-plus-r22",
                            "built_from_source": true,
                            "id": 6,
                            "last_seen": "2020-10-27T22:30:34.376659Z",
                            "pid": 1138,
                            "properties": {
                                "conf-path": "/etc/nginx/nginx.conf",
                                "error-log-path": "/var/log/nginx/error.log",
                                "group": "nginx",
                                "http-client-body-temp-path": "/var/cache/nginx/client_temp",
                                "http-fastcgi-temp-path": "/var/cache/nginx/fastcgi_temp",
                                "http-log-path": "/var/log/nginx/access.log",
                                "http-proxy-temp-path": "/var/cache/nginx/proxy_temp",
                                "http-scgi-temp-path": "/var/cache/nginx/scgi_temp",
                                "http-uwsgi-temp-path": "/var/cache/nginx/uwsgi_temp",
                                "loadable_modules": [
                                    "ngx_http_f5_metrics_module-debug.so",
                                    "ngx_http_f5_metrics_module.so"
                                ],
                                "lock-path": "/var/run/nginx.lock",
                                "modules-path": "/usr/lib/nginx/modules",
                                "packages": {
                                    "nginx-plus": "nginx-plus-r22"
                                },
                                "path": {
                                    "bin": "/usr/sbin/nginx",
                                    "conf": "/etc/nginx/nginx.conf"
                                },
                                "pid-path": "/var/run/nginx.pid",
                                "prefix": "/etc/nginx",
                                "sbin-path": "/usr/sbin/nginx",
                                "status_module_enabled": false,
                                "stub_status_enabled": false,
                                "stub_status_url": "",
                                "user": "nginx",
                                "with-compat": true,
                                "with-file-aio": true,
                                "with-http_addition_module": true,
                                "with-http_auth_jwt_module": true,
                                "with-http_auth_request_module": true,
                                "with-http_dav_module": true,
                                "with-http_f4f_module": true,
                                "with-http_flv_module": true,
                                "with-http_gunzip_module": true,
                                "with-http_gzip_static_module": true,
                                "with-http_hls_module": true,
                                "with-http_mp4_module": true,
                                "with-http_random_index_module": true,
                                "with-http_realip_module": true,
                                "with-http_secure_link_module": true,
                                "with-http_session_log_module": true,
                                "with-http_slice_module": true,
                                "with-http_ssl_module": true,
                                "with-http_stub_status_module": true,
                                "with-http_sub_module": true,
                                "with-http_v2_module": true,
                                "with-ld-opt": "'-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'",
                                "with-mail": true,
                                "with-mail_ssl_module": true,
                                "with-stream": true,
                                "with-stream_realip_module": true,
                                "with-stream_ssl_module": true,
                                "with-stream_ssl_preread_module": true,
                                "with-threads": true
                            },
                            "running": true,
                            "ssl": {
                                "built": [
                                    "OpenSSL",
                                    "1.1.1",
                                    " 11 Sep 2018"
                                ],
                                "run": [
                                    "OpenSSL",
                                    "1.1.1",
                                    " 11 Sep 2018"
                                ]
                            },
                            "start_time": 1603836993,
                            "version": "1.19.0"
                        },
                        "legacySystemMetadata": {
                            "boot": 1603836911000,
                            "disk_partitions": [
                                {
                                    "device": "/dev/sda1",
                                    "fstype": "ext4",
                                    "mountpoint": "/"
                                },
                                {
                                    "device": "/dev/sda15",
                                    "fstype": "vfat",
                                    "mountpoint": "/boot/efi"
                                },
                                {
                                    "device": "/dev/sdb1",
                                    "fstype": "ext4",
                                    "mountpoint": "/mnt"
                                }
                            ],
                            "id": 5,
                            "network": {
                                "default": "eth0",
                                "interfaces": [
                                    {
                                        "ipv4": {
                                            "address": "127.0.0.1",
                                            "netmask": "255.0.0.0",
                                            "prefixlen": 8
                                        },
                                        "ipv6": {
                                            "address": "::1",
                                            "netmask": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
                                            "prefixlen": 128
                                        },
                                        "mac": "00:00:00:00:00:00",
                                        "name": "lo"
                                    },
                                    {
                                        "ipv4": {
                                            "address": "10.0.1.4",
                                            "netmask": "255.255.255.0",
                                            "prefixlen": 24
                                        },
                                        "ipv6": {
                                            "address": "fe80::20d:3aff:fec5:3f80",
                                            "netmask": "ffff:ffff:ffff:ffff::",
                                            "prefixlen": 64
                                        },
                                        "mac": "00:0d:3a:c5:3f:80",
                                        "name": "eth0"
                                    }
                                ]
                            },
                            "os-type": "linux",
                            "processor": {
                                "architecture": "x86_64",
                                "cache": {
                                    "L1d": "32K",
                                    "L1i": "32K",
                                    "L2": "1024K",
                                    "L3": "36608K"
                                },
                                "cores": "1",
                                "cpus": "1",
                                "hypervisor": "Microsoft",
                                "mhz": "2095.191",
                                "model": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz",
                                "virtualization": "full"
                            },
                            "release": {
                                "codename": "bionic",
                                "id": "ubuntu",
                                "name": "Ubuntu",
                                "version": "18.04.5 LTS (Bionic Beaver)",
                                "version_id": "18.04"
                            }
                        },
                        "muted": false,
                        "nginx": {
                            "process": {
                                "group": "test",
                                "user": "testuser"
                            }
                        },
                        "state": {
                            "conditions": [],
                            "selfConfigState": {
                                "configured": 1,
                                "configuring": 0,
                                "deleting": 0,
                                "error": 0,
                                "isConfigured": true,
                                "isConfiguring": false,
                                "isDeleting": false,
                                "isError": false,
                                "total": 1
                            }
                        },
                        "templateRef": {
                            "ref": "/infrastructure/locations/azure-westus2/instance-templates/azure-standard-ds1v2"
                        },
                        "type": "AZURE_INSTANCE",
                        "version": "1.19.0"
                    }
                }
            },
            "OtherInstance": {
                "value": {
                    "metadata": {
                        "name": "test_instance_1",
                        "displayName": "Test Instance 1",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/unspecified/instances/test_instance_1"
                        },
                        "createTime": "2020-05-20T20:02:18.107875Z",
                        "updateTime": "2020-05-20T20:02:18.107875Z"
                    },
                    "desiredState": {
                        "type": "OTHER_INSTANCE"
                    },
                    "currentStatus": {
                        "type": "OTHER_INSTANCE",
                        "state": {
                            "selfConfigState": {
                                "configured": 1,
                                "configuring": 0,
                                "deleting": 0,
                                "error": 0,
                                "isConfigured": true,
                                "isConfiguring": false,
                                "isDeleting": false,
                                "isError": false,
                                "total": 1
                            }
                        },
                        "status": {
                            "selfConfigState": {
                                "configured": 1,
                                "configuring": 0,
                                "deleting": 0,
                                "error": 0,
                                "isConfigured": true,
                                "isConfiguring": false,
                                "isDeleting": false,
                                "isError": false,
                                "total": 1
                            }
                        },
                        "agent": {
                            "credentials": {
                                "hostname": "instance-1.mycloud.net",
                                "uuid": "c1088edfd9f35cd38d5b4ce109508fe9"
                            },
                            "version": "999.0.0-1"
                        },
                        "hostname": "test-fab4edf8-data-1.test",
                        "legacyNginxMetadata": {
                            "build": "nginx-plus-r21",
                            "built_from_source": false,
                            "id": 2,
                            "last_seen": "2020-05-20T20:40:21.146894Z",
                            "pid": 2995,
                            "properties": {
                                "conf-path": "/etc/nginx/nginx.conf",
                                "error-log-path": "/var/log/nginx/error.log",
                                "group": "nginx",
                                "http-client-body-temp-path": "/var/cache/nginx/client_temp",
                                "http-fastcgi-temp-path": "/var/cache/nginx/fastcgi_temp",
                                "http-log-path": "/var/log/nginx/access.log",
                                "http-proxy-temp-path": "/var/cache/nginx/proxy_temp",
                                "http-scgi-temp-path": "/var/cache/nginx/scgi_temp",
                                "http-uwsgi-temp-path": "/var/cache/nginx/uwsgi_temp",
                                "loadable_modules": [
                                    "ngx_http_f5_metrics_module-debug.so",
                                    "ngx_http_f5_metrics_module.so"
                                ],
                                "lock-path": "/var/run/nginx.lock",
                                "modules-path": "/usr/lib/nginx/modules",
                                "packages": {
                                    "nginx-plus": "21-1~bionic"
                                },
                                "path": {
                                    "bin": "/usr/sbin/nginx",
                                    "conf": "/etc/nginx/nginx.conf"
                                },
                                "pid-path": "/var/run/nginx.pid",
                                "prefix": "/etc/nginx",
                                "sbin-path": "/usr/sbin/nginx",
                                "status_module_enabled": false,
                                "stub_status_enabled": false,
                                "stub_status_url": null,
                                "user": "nginx",
                                "with-cc-opt": "'-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-plus-1.17.9/debian/debuild-base/nginx-plus-1.17.9=. -fstack-protector-strong -Wformat -Werror=format-security,-D_FORTIFY_SOURCE=2 -fPIC'",
                                "with-compat": true,
                                "with-file-aio": true,
                                "with-http_addition_module": true,
                                "with-http_auth_jwt_module": true,
                                "with-http_auth_request_module": true,
                                "with-http_dav_module": true,
                                "with-http_f4f_module": true,
                                "with-http_flv_module": true,
                                "with-http_gunzip_module": true,
                                "with-http_gzip_static_module": true,
                                "with-http_hls_module": true,
                                "with-http_mp4_module": true,
                                "with-http_random_index_module": true,
                                "with-http_realip_module": true,
                                "with-http_secure_link_module": true,
                                "with-http_session_log_module": true,
                                "with-http_slice_module": true,
                                "with-http_ssl_module": true,
                                "with-http_stub_status_module": true,
                                "with-http_sub_module": true,
                                "with-http_v2_module": true,
                                "with-ld-opt": "'-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'",
                                "with-mail": true,
                                "with-mail_ssl_module": true,
                                "with-stream": true,
                                "with-stream_realip_module": true,
                                "with-stream_ssl_module": true,
                                "with-stream_ssl_preread_module": true,
                                "with-threads": true
                            },
                            "running": true,
                            "ssl": {
                                "built": [
                                    "OpenSSL",
                                    "1.1.1",
                                    "11 Sep 2018"
                                ],
                                "run": [
                                    "OpenSSL",
                                    "1.1.1",
                                    "11 Sep 2018"
                                ]
                            },
                            "start_time": 1590004864000
                        },
                        "legacySystemMetadata": {
                            "boot": 1590004492000,
                            "disk_partitions": [
                                {
                                    "device": "/dev/sda2",
                                    "fstype": "ext4",
                                    "mountpoint": "/"
                                },
                                {
                                    "device": "/dev/sda1",
                                    "fstype": "ext3",
                                    "mountpoint": "/boot"
                                }
                            ],
                            "id": 1,
                            "network": {
                                "default": "lo",
                                "interfaces": [
                                    {
                                        "ipv4": {
                                            "address": "127.0.0.1",
                                            "netmask": "255.0.0.0",
                                            "prefixlen": 8
                                        },
                                        "ipv6": {
                                            "address": "::1",
                                            "netmask": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
                                            "prefixlen": 128
                                        },
                                        "mac": "00:00:00:00:00:00",
                                        "name": "lo"
                                    },
                                    {
                                        "ipv4": {
                                            "address": "192.0.10.1",
                                            "netmask": "255.255.255.0",
                                            "prefixlen": 24
                                        },
                                        "mac": "02:42:98:fb:40:48",
                                        "name": "docker0"
                                    },
                                    {
                                        "ipv4": {
                                            "address": "10.149.41.181",
                                            "netmask": "255.255.240.0",
                                            "prefixlen": 20
                                        },
                                        "ipv6": {
                                            "address": "fe80::250:56ff:fe98:e2f1",
                                            "netmask": "ffff:ffff:ffff:ffff::",
                                            "prefixlen": 64
                                        },
                                        "mac": "00:50:56:98:e2:f1",
                                        "name": "ens32"
                                    }
                                ]
                            },
                            "os-type": "linux",
                            "processor": {
                                "architecture": "x86_64",
                                "cache": {
                                    "L1d": "32K",
                                    "L1i": "32K",
                                    "L2": "1024K",
                                    "L3": "25344K"
                                },
                                "cores": "1",
                                "cpus": "4",
                                "hypervisor": "VMware",
                                "mhz": "2300.000",
                                "model": "Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz",
                                "virtualization": "full"
                            },
                            "release": {
                                "codename": "bionic",
                                "id": "ubuntu",
                                "name": "Ubuntu",
                                "version": "18.04.2 LTS (Bionic Beaver)",
                                "version_id": "18.04"
                            }
                        },
                        "muted": false,
                        "version": "1.17.9"
                    }
                }
            },
            "ListInstanceResponse": {
                "value": {
                    "items": [
                        {
                            "currentStatus": {
                                "agent": {
                                    "version": "3.7.44"
                                },
                                "hostname": "i-563457274582",
                                "legacyNginxMetadata": {
                                    "build": "nginx-plus-r22",
                                    "built_from_source": false,
                                    "id": 2,
                                    "last_seen": "2020-07-08T17:24:07.869745Z",
                                    "pid": 3104,
                                    "properties": {
                                        "conf-path": "/etc/nginx/nginx.conf",
                                        "error-log-path": "/var/log/nginx/error.log",
                                        "group": "nginx",
                                        "http-client-body-temp-path": "/var/cache/nginx/client_temp",
                                        "http-fastcgi-temp-path": "/var/cache/nginx/fastcgi_temp",
                                        "http-log-path": "/var/log/nginx/access.log",
                                        "http-proxy-temp-path": "/var/cache/nginx/proxy_temp",
                                        "http-scgi-temp-path": "/var/cache/nginx/scgi_temp",
                                        "http-uwsgi-temp-path": "/var/cache/nginx/uwsgi_temp",
                                        "loadable_modules": [
                                            "ngx_http_f5_metrics_module-debug.so",
                                            "ngx_http_f5_metrics_module.so"
                                        ],
                                        "lock-path": "/var/run/nginx.lock",
                                        "modules-path": "/usr/lib/nginx/modules",
                                        "packages": {},
                                        "path": {
                                            "bin": "/usr/sbin/nginx",
                                            "conf": "/etc/nginx/nginx.conf"
                                        },
                                        "pid-path": "/var/run/nginx.pid",
                                        "prefix": "/etc/nginx",
                                        "sbin-path": "/usr/sbin/nginx",
                                        "status_module_enabled": false,
                                        "stub_status_enabled": false,
                                        "stub_status_url": "",
                                        "user": "nginx",
                                        "with-compat": true,
                                        "with-file-aio": true,
                                        "with-http_addition_module": true,
                                        "with-http_auth_jwt_module": true,
                                        "with-http_auth_request_module": true,
                                        "with-http_dav_module": true,
                                        "with-http_f4f_module": true,
                                        "with-http_flv_module": true,
                                        "with-http_gunzip_module": true,
                                        "with-http_gzip_static_module": true,
                                        "with-http_hls_module": true,
                                        "with-http_mp4_module": true,
                                        "with-http_random_index_module": true,
                                        "with-http_realip_module": true,
                                        "with-http_secure_link_module": true,
                                        "with-http_session_log_module": true,
                                        "with-http_slice_module": true,
                                        "with-http_ssl_module": true,
                                        "with-http_stub_status_module": true,
                                        "with-http_sub_module": true,
                                        "with-http_v2_module": true,
                                        "with-ld-opt": "'-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'",
                                        "with-mail": true,
                                        "with-mail_ssl_module": true,
                                        "with-stream": true,
                                        "with-stream_realip_module": true,
                                        "with-stream_ssl_module": true,
                                        "with-stream_ssl_preread_module": true,
                                        "with-threads": true
                                    },
                                    "running": true,
                                    "ssl": {
                                        "built": [
                                            "OpenSSL",
                                            "1.1.1",
                                            "",
                                            "11",
                                            "Sep",
                                            "2018"
                                        ],
                                        "run": [
                                            "OpenSSL",
                                            "1.1.1",
                                            "",
                                            "11",
                                            "Sep",
                                            "2018"
                                        ]
                                    },
                                    "start_time": 0
                                },
                                "legacySystemMetadata": {
                                    "boot": 1594225800000,
                                    "disk_partitions": [
                                        {
                                            "device": "/dev/sda2",
                                            "fstype": "ext4",
                                            "mountpoint": "/"
                                        },
                                        {
                                            "device": "/dev/sda1",
                                            "fstype": "ext3",
                                            "mountpoint": "/boot"
                                        }
                                    ],
                                    "id": 1,
                                    "network": {
                                        "default": "",
                                        "interfaces": [
                                            {
                                                "ipv4": {
                                                    "address": "127.0.0.1",
                                                    "netmask": "255.0.0.0",
                                                    "prefixlen": 8
                                                },
                                                "ipv6": {
                                                    "address": "::1",
                                                    "netmask": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
                                                    "prefixlen": 128
                                                },
                                                "mac": "00:00:00:00:00:00",
                                                "name": "lo"
                                            },
                                            {
                                                "ipv4": {
                                                    "address": "10.149.41.97",
                                                    "netmask": "255.255.240.0",
                                                    "prefixlen": 20
                                                },
                                                "ipv6": {
                                                    "address": "fe80::250:56ff:fe98:b512",
                                                    "netmask": "ffff:ffff:ffff:ffff::",
                                                    "prefixlen": 64
                                                },
                                                "mac": "00:50:56:98:b5:12",
                                                "name": "ens32"
                                            },
                                            {
                                                "ipv4": {
                                                    "address": "192.0.10.1",
                                                    "netmask": "255.255.255.0",
                                                    "prefixlen": 24
                                                },
                                                "mac": "02:42:24:f1:ae:8a",
                                                "name": "docker0"
                                            }
                                        ]
                                    },
                                    "os-type": "linux",
                                    "processor": {
                                        "architecture": "x86_64",
                                        "cache": {
                                            "L1d": "32K",
                                            "L1i": "32K",
                                            "L2": "1024K",
                                            "L3": "25344K"
                                        },
                                        "cores": "1",
                                        "cpus": "4",
                                        "hypervisor": "VMware",
                                        "mhz": "2300.000",
                                        "model": "Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz",
                                        "virtualization": "full"
                                    },
                                    "release": {
                                        "codename": "bionic",
                                        "id": "ubuntu",
                                        "name": "Ubuntu",
                                        "version": "18.04.2 LTS (Bionic Beaver)",
                                        "version_id": "18.04"
                                    }
                                },
                                "muted": false,
                                "state": {
                                    "selfConfigState": {
                                        "configured": 1,
                                        "configuring": 0,
                                        "deleting": 0,
                                        "error": 0,
                                        "isConfigured": true,
                                        "isConfiguring": false,
                                        "isDeleting": false,
                                        "isError": false,
                                        "total": 1
                                    }
                                },
                                "status": {
                                    "selfConfigState": {
                                        "configured": 1,
                                        "configuring": 0,
                                        "deleting": 0,
                                        "error": 0,
                                        "isConfigured": true,
                                        "isConfiguring": false,
                                        "isDeleting": false,
                                        "isError": false,
                                        "total": 1
                                    }
                                },
                                "type": "OTHER_INSTANCE",
                                "version": "1.19.0"
                            },
                            "desiredState": {
                                "type": "OTHER_INSTANCE"
                            },
                            "metadata": {
                                "createTime": "2020-07-08T16:42:07.97301Z",
                                "displayName": "Test Instance 1",
                                "kind": "instance",
                                "links": {
                                    "rel": "/api/v1/infrastructure/locations/unspecified/instances/instance-1"
                                },
                                "name": "instance-1",
                                "ref": "/infrastructure/locations/unspecified/instances/instance-1",
                                "uid": "ec8d8dac-10b6-4195-943b-1a5d65dd131c",
                                "updateTime": "2020-07-08T16:42:07.97301Z"
                            }
                        }
                    ]
                }
            },
            "InstanceGroupRequest": {
                "value": {
                    "metadata": {
                        "name": "k8s-nginx-deploy",
                        "displayName": "K8S NGINX+ deployment",
                        "description": "k8s-nginx-deploy"
                    },
                    "desiredState": {}
                }
            },
            "GetInstanceGroupResponse": {
                "value": {
                    "metadata": {
                        "createTime": "2020-05-13T16:58:17.058124Z",
                        "description": "K8S NGINX+ deployment",
                        "displayName": "k8s-nginx-deploy",
                        "kind": "instance-group",
                        "links": {
                            "rel": "/api/v1/infrastructure/instance-groups/k8s-nginx-deploy"
                        },
                        "name": "k8s-nginx-deploy",
                        "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                        "updateTime": "2020-05-13T16:58:17.058124Z"
                    },
                    "desiredState": {},
                    "currentStatus": {
                        "instanceRefs": [
                            {
                                "ref": "/infrastructure/locations/eks-cluster/instances/30dc361a3729"
                            },
                            {
                                "ref": "/infrastructure/locations/eks-cluster/instances/01a9eead50e5"
                            }
                        ],
                        "state": {
                            "conditions": [],
                            "selfConfigState": {
                                "configured": 1,
                                "configuring": 0,
                                "deleting": 0,
                                "error": 0,
                                "isConfigured": true,
                                "isConfiguring": false,
                                "isDeleting": false,
                                "isError": false,
                                "total": 1
                            }
                        }
                    }
                }
            },
            "ListInstanceGroupsResponse": {
                "value": {
                    "items": [
                        {
                            "currentStatus": {
                                "instanceRefs": [],
                                "state": {
                                    "conditions": [],
                                    "selfConfigState": {
                                        "configured": 1,
                                        "configuring": 0,
                                        "deleting": 0,
                                        "error": 0,
                                        "isConfigured": true,
                                        "isConfiguring": false,
                                        "isDeleting": false,
                                        "isError": false,
                                        "total": 1
                                    }
                                }
                            },
                            "desiredState": {},
                            "metadata": {
                                "createTime": "2020-05-13T09:29:49.464273Z",
                                "description": "us-west-2 autoscale group",
                                "displayName": "aws-autoscale-group",
                                "kind": "instance-group",
                                "links": {
                                    "rel": "/api/v1/infrastructure/instance-groups/amz-us-west-2-as-group"
                                },
                                "name": "amz-us-west-2-as-group",
                                "uid": "802ef1f8-9105-474a-b9a7-599837efd6b4",
                                "updateTime": "2020-05-13T09:29:49.464273Z"
                            }
                        },
                        {
                            "currentStatus": {
                                "instanceRefs": [
                                    {
                                        "ref": "/infrastructure/locations/eks-cluster/instances/30dc361a3729"
                                    },
                                    {
                                        "ref": "/infrastructure/locations/eks-cluster/instances/01a9eead50e5"
                                    }
                                ],
                                "state": {
                                    "conditions": [],
                                    "selfConfigState": {
                                        "configured": 1,
                                        "configuring": 0,
                                        "deleting": 0,
                                        "error": 0,
                                        "isConfigured": true,
                                        "isConfiguring": false,
                                        "isDeleting": false,
                                        "isError": false,
                                        "total": 1
                                    }
                                }
                            },
                            "desiredState": {},
                            "metadata": {
                                "createTime": "2020-05-13T16:58:17.058124Z",
                                "description": "K8S NGINX+ deployment",
                                "displayName": "k8s-nginx-deploy",
                                "kind": "instance-group",
                                "links": {
                                    "rel": "/api/v1/infrastructure/instance-groups/k8s-nginx-deploy"
                                },
                                "name": "k8s-nginx-deploy",
                                "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                "updateTime": "2020-05-13T16:58:17.058124Z"
                            }
                        }
                    ]
                }
            },
            "IdentityProviderRequest": {
                "value": {
                    "metadata": {
                        "name": "resource-name",
                        "displayName": "My Display Name",
                        "description": "This is a sample description string. It provides information about the resource.",
                        "tags": [
                            "production_public",
                            "dev",
                            "new_app",
                            "us-west-1",
                            "emea"
                        ]
                    },
                    "desiredState": {
                        "environmentRefs": [
                            {
                                "ref": "/services/environments/dev"
                            }
                        ],
                        "identityProvider": {
                            "type": "API_KEY"
                        }
                    }
                }
            },
            "IdentityProviderClientListRequest": {
                "value": {
                    "items": [
                        {
                            "metadata": {
                                "name": "resource-name",
                                "displayName": "My Display Name",
                                "description": "This is a sample description string. It provides information about the resource.",
                                "tags": [
                                    "production_public",
                                    "dev",
                                    "new_app",
                                    "us-west-1",
                                    "emea"
                                ]
                            },
                            "desiredState": {
                                "credential": {
                                    "type": "API_KEY",
                                    "apiKey": "<access key id>"
                                }
                            }
                        }
                    ]
                }
            },
            "IdentityProviderClientRequest": {
                "value": {
                    "metadata": {
                        "name": "resource-name",
                        "displayName": "My Display Name",
                        "description": "This is a sample description string. It provides information about the resource.",
                        "tags": [
                            "production_public",
                            "dev",
                            "new_app",
                            "us-west-1",
                            "emea"
                        ]
                    },
                    "desiredState": {
                        "credential": {
                            "type": "API_KEY",
                            "apiKey": "<access key id>"
                        }
                    }
                }
            },
            "IdentityProviderClientPatchMetadataRequest": {
                "value": {
                    "metadata": {
                        "name": "resource-name",
                        "description": "This is a sample description string. It provides information about the resource."
                    }
                }
            },
            "IdentityProviderClientPatchDesiredStateRequest": {
                "value": {
                    "desiredState": {
                        "credential": {
                            "type": "API_KEY",
                            "apiKey": "<access key id>"
                        }
                    }
                }
            },
            "ComponentRequest": {
                "value": {
                    "metadata": {
                        "name": "resource-name",
                        "displayName": "My Display Name",
                        "description": "This is a sample description string. It provides information about the resource.",
                        "tags": [
                            "production_public",
                            "dev",
                            "new_app",
                            "us-west-1",
                            "emea"
                        ]
                    },
                    "desiredState": {
                        "ingress": {
                            "uris": {
                                "/api/golf/": {
                                    "matchMethod": "PREFIX"
                                }
                            },
                            "gatewayRefs": [
                                {
                                    "ref": "/services/environments/dev/gateways/sportsgw"
                                }
                            ]
                        },
                        "publishedApiRefs": [
                            {
                                "ref": "/services/environments/dev/apps/sports/published-apis/golf-pub"
                            }
                        ],
                        "backend": {
                            "workloadGroups": {
                                "serverGrp1": {
                                    "uris": {
                                        "{{httpWorkloadInstance1}}": {}
                                    }
                                }
                            },
                            "monitoring": {}
                        },
                        "security": {
                            "rateLimit": {
                                "defaultLimit": {
                                    "rate": 1,
                                    "rateMeasure": "SECONDS"
                                }
                            }
                        }
                    }
                }
            },
            "OtherLocationRequest": {
                "value": {
                    "metadata": {
                        "name": "my-other-location",
                        "description": "Other Location for managing instances",
                        "displayName": "OtherLocation-1",
                        "tags": [
                            "dev",
                            "prod"
                        ]
                    },
                    "desiredState": {
                        "type": "OTHER_LOCATION"
                    }
                }
            },
            "AWSLocationRequest": {
                "value": {
                    "metadata": {
                        "name": "my-aws-location",
                        "description": "AWS Location for us-east-1",
                        "displayName": "us-east-1-location",
                        "tags": [
                            "dev",
                            "prod"
                        ]
                    },
                    "desiredState": {
                        "type": "AWS_LOCATION",
                        "vpcID": "vpc-1234",
                        "region": "us-east-1",
                        "integrationRef": {
                            "ref": "/api/v1/platform/integrations/my-aws-integration"
                        }
                    }
                }
            },
            "AzureLocationRequest": {
                "value": {
                    "metadata": {
                        "name": "my-azure-location",
                        "description": "Azure Location for West US 2",
                        "displayName": "westus2-location",
                        "tags": [
                            "dev",
                            "prod"
                        ]
                    },
                    "desiredState": {
                        "type": "AZURE_LOCATION",
                        "resourceGroup": "myResourceGroup",
                        "subscriptionID": "mySubscriptionID",
                        "region": "westus2",
                        "integrationRef": {
                            "ref": "/api/v1/platform/integrations/my-azure-integration"
                        }
                    }
                }
            },
            "OtherLocationResponse": {
                "value": {
                    "currentStatus": {
                        "type": "OTHER_LOCATION"
                    },
                    "desiredState": {
                        "type": "OTHER_LOCATION"
                    },
                    "metadata": {
                        "createTime": "2020-05-13T16:58:17.058124Z",
                        "description": "Other Location for managing instances",
                        "displayName": "OtherLocation-1",
                        "kind": "location",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/my-other-location"
                        },
                        "name": "my-other-location",
                        "tags": [
                            "dev",
                            "prod"
                        ],
                        "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                        "updateTime": "2020-05-13T16:58:17.058124Z"
                    }
                }
            },
            "AWSLocationResponse": {
                "value": {
                    "currentStatus": {
                        "integrationRef": {
                            "ref": "/api/v1/platform/integrations/my-aws-integration"
                        },
                        "region": "us-east-1",
                        "type": "AWS_LOCATION",
                        "vpcID": "vpc-1234"
                    },
                    "desiredState": {
                        "integrationRef": {
                            "ref": "/api/v1/platform/integrations/my-aws-integration"
                        },
                        "region": "us-east-1",
                        "type": "AWS_LOCATION",
                        "vpcID": "vpc-1234"
                    },
                    "metadata": {
                        "createTime": "2020-05-13T16:57:02.931198Z",
                        "description": "AWS Location for us-east-1",
                        "displayName": "us-east-1-location",
                        "kind": "location",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/my-aws-location"
                        },
                        "name": "my-aws-location",
                        "tags": [
                            "dev",
                            "prod"
                        ],
                        "uid": "62f72025-59a1-4c11-8cca-798b5e12efb8",
                        "updateTime": "2020-05-13T16:57:02.931198Z"
                    }
                }
            },
            "AzureLocationResponse": {
                "value": {
                    "currentStatus": {
                        "integrationRef": {
                            "ref": "/api/v1/platform/integrations/my-azure-integration"
                        },
                        "type": "AZURE_LOCATION",
                        "subscriptionID": "mySubscriptionID",
                        "region": "westus2"
                    },
                    "desiredState": {
                        "integrationRef": {
                            "ref": "/api/v1/platform/integrations/my-azure-integration"
                        },
                        "type": "AZURE_LOCATION",
                        "subscriptionID": "mySubscriptionID",
                        "region": "westus2"
                    },
                    "metadata": {
                        "createTime": "2020-05-13T16:57:02.931198Z",
                        "description": "Azure Location for West US 2",
                        "displayName": "westus2-location",
                        "kind": "location",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/my-azure-location"
                        },
                        "name": "my-azure-location",
                        "tags": [
                            "dev",
                            "prod"
                        ],
                        "uid": "62f72025-59a1-4c11-8cca-798b5e12efb8",
                        "updateTime": "2020-05-13T16:57:02.931198Z"
                    }
                }
            },
            "ListLocationResponse": {
                "value": {
                    "items": [
                        {
                            "currentStatus": {
                                "type": "OTHER_LOCATION"
                            },
                            "desiredState": {
                                "type": "OTHER_LOCATION"
                            },
                            "metadata": {
                                "createTime": "2020-05-13T09:29:49.464273Z",
                                "description": "Location for instances where location has not been specified",
                                "displayName": "Unspecified (default)",
                                "kind": "location",
                                "links": {
                                    "rel": "/api/v1/infrastructure/locations/unspecified"
                                },
                                "name": "unspecified",
                                "tags": [
                                    "default"
                                ],
                                "uid": "802ef1f8-9105-474a-b9a7-599837efd6b4",
                                "updateTime": "2020-05-13T09:29:49.464273Z"
                            }
                        },
                        {
                            "currentStatus": {
                                "type": "OTHER_LOCATION"
                            },
                            "desiredState": {
                                "type": "OTHER_LOCATION"
                            },
                            "metadata": {
                                "createTime": "2020-05-13T16:58:17.058124Z",
                                "description": "Other Location for managing instances",
                                "displayName": "OtherLocation-1",
                                "kind": "location",
                                "links": {
                                    "rel": "/api/v1/infrastructure/locations/my-other-location"
                                },
                                "name": "my-other-location",
                                "tags": [
                                    "dev",
                                    "prod"
                                ],
                                "uid": "97d06b70-0d00-4863-b86d-40ab29efefdc",
                                "updateTime": "2020-05-13T16:58:17.058124Z"
                            }
                        }
                    ]
                }
            },
            "AWSRequest": {
                "value": {
                    "metadata": {
                        "name": "my-instance-template",
                        "description": "AWS Instance Template for T2 large",
                        "displayName": "T2large-InstanceTemplate",
                        "tags": [
                            "dev",
                            "prod"
                        ]
                    },
                    "desiredState": {
                        "type": "AWS_INSTANCE_TEMPLATE",
                        "amiID": "ami-a0cfeed8",
                        "instanceType": "t2.large",
                        "subnetID": "subnet-12345678",
                        "securityGroupIDs": [
                            "sg-12345678",
                            "sg-98765432"
                        ],
                        "publicKey": "my-public-key",
                        "associatePublicIPAddress": true
                    }
                }
            },
            "AzureRequestWithMarketplaceImageAndUsingExistingNic": {
                "value": {
                    "metadata": {
                        "name": "my-azure-template-for-standard-A1",
                        "description": "Azure Instance Template for Standard A1",
                        "displayName": "Standard_A1-instance-template",
                        "tags": [
                            "dev",
                            "prod"
                        ]
                    },
                    "desiredState": {
                        "type": "AZURE_INSTANCE_TEMPLATE",
                        "image": {
                            "type": "AZURE_IMAGE_REFERENCE",
                            "publisher": "nginxinc",
                            "offer": "nginx-plus-v1",
                            "sku": "nginx-plus-ub1804",
                            "version": "latest"
                        },
                        "instanceType": "Standard_A1",
                        "adminUser": "azureuser",
                        "publicKey": "ssh-rsa my-public-key-string",
                        "networkInterface": {
                            "type": "AZURE_NIC_ID",
                            "nicID": "/subscriptions/mySubscriptionID/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNicID"
                        }
                    }
                }
            },
            "AzureRequestWithCustomImageAndCreatingNewNicAndPublicIP": {
                "value": {
                    "metadata": {
                        "name": "my-azure-template-for-standard-DS1_v2",
                        "description": "Azure Instance Template for Standard DS1v2",
                        "displayName": "DS1_v2-instance-template",
                        "tags": [
                            "dev",
                            "prod"
                        ]
                    },
                    "desiredState": {
                        "type": "AZURE_INSTANCE_TEMPLATE",
                        "image": {
                            "type": "AZURE_IMAGE_ID",
                            "imageID": "/subscriptions/mySubscriptionID/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myCustomImageID"
                        },
                        "instanceType": "Standard_DS1_v2",
                        "adminUser": "azureuser",
                        "publicKey": "ssh-rsa my-public-key-string",
                        "networkInterface": {
                            "type": "AZURE_NIC_CONFIG",
                            "virtualNetwork": "my-virtual-network",
                            "subnet": "my-subnet",
                            "securityGroup": "my-network-sg",
                            "publicIp": true
                        }
                    }
                }
            },
            "AWSResponse": {
                "value": {
                    "currentStatus": {
                        "amiID": "ami-a0cfeed8",
                        "associatePublicIPAddress": true,
                        "instanceType": "t2.large",
                        "publicKey": "my-public-key",
                        "securityGroupIDs": [
                            "sg-12345678",
                            "sg-98765432"
                        ],
                        "subnetID": "subnet-12345678",
                        "type": "AWS_INSTANCE_TEMPLATE"
                    },
                    "desiredState": {
                        "amiID": "ami-a0cfeed8",
                        "associatePublicIPAddress": true,
                        "instanceType": "t2.large",
                        "publicKey": "my-public-key",
                        "securityGroupIDs": [
                            "sg-12345678",
                            "sg-98765432"
                        ],
                        "subnetID": "subnet-12345678",
                        "type": "AWS_INSTANCE_TEMPLATE"
                    },
                    "metadata": {
                        "createTime": "2020-04-17T02:18:44.394232Z",
                        "description": "AWS Instance Template for T2 large",
                        "displayName": "T2large-InstanceTemplate",
                        "kind": "instance-template",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/location-1/instance-templates/my-instance-template"
                        },
                        "name": "my-instance-template",
                        "uid": "4157d480-cd0e-40a0-8ba8-d0d5ce17c5d6",
                        "updateTime": "2020-04-17T02:18:44.394232Z"
                    }
                }
            },
            "AzureResponse": {
                "value": {
                    "currentStatus": {
                        "type": "AZURE_INSTANCE_TEMPLATE",
                        "image": {
                            "type": "AZURE_IMAGE_REFERENCE",
                            "publisher": "nginxinc",
                            "offer": "nginx-plus-v1",
                            "sku": "nginx-plus-ub1804",
                            "version": "latest"
                        },
                        "instanceType": "Standard_A1",
                        "adminUser": "azureuser",
                        "publicKey": "ssh-rsa my-public-key-string",
                        "networkInterface": {
                            "type": "AZURE_NIC_ID",
                            "nicID": "/subscriptions/mySubscriptionID/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNicID"
                        }
                    },
                    "desiredState": {
                        "type": "AZURE_INSTANCE_TEMPLATE",
                        "image": {
                            "type": "AZURE_IMAGE_REFERENCE",
                            "publisher": "nginxinc",
                            "offer": "nginx-plus-v1",
                            "sku": "nginx-plus-ub1804",
                            "version": "latest"
                        },
                        "instanceType": "Standard_A1",
                        "adminUser": "azureuser",
                        "publicKey": "ssh-rsa my-public-key-string",
                        "networkInterface": {
                            "type": "AZURE_NIC_ID",
                            "nicID": "/subscriptions/mySubscriptionID/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNicID"
                        }
                    },
                    "metadata": {
                        "createTime": "2020-04-17T02:18:44.394232Z",
                        "description": "Azure Instance Template for Standard A1",
                        "displayName": "Standard_A1-instance-template",
                        "kind": "instance-template",
                        "links": {
                            "rel": "/api/v1/infrastructure/locations/azure-westus2/instance-templates/my-azure-template-for-standard-A1"
                        },
                        "name": "my-azure-template-for-standard-A1",
                        "uid": "4157d480-cd0e-40a0-8ba8-d0d5ce17c5d6",
                        "updateTime": "2020-04-17T02:18:44.394232Z"
                    }
                }
            },
            "AWSListResponse": {
                "value": {
                    "items": [
                        {
                            "currentStatus": {
                                "amiID": "ami-a0cfeed8",
                                "associatePublicIPAddress": true,
                                "instanceType": "t2.large",
                                "publicKey": "my-public-key",
                                "securityGroupIDs": [
                                    "sg-12345678",
                                    "sg-98765432"
                                ],
                                "subnetID": "subnet-12345678",
                                "type": "AWS_INSTANCE_TEMPLATE"
                            },
                            "desiredState": {
                                "amiID": "ami-a0cfeed8",
                                "associatePublicIPAddress": true,
                                "instanceType": "t2.large",
                                "publicKey": "my-public-key",
                                "securityGroupIDs": [
                                    "sg-12345678",
                                    "sg-98765432"
                                ],
                                "subnetID": "subnet-12345678",
                                "type": "AWS_INSTANCE_TEMPLATE"
                            },
                            "metadata": {
                                "createTime": "2020-04-17T02:18:44.394232Z",
                                "description": "AWS Instance Template for T2 large",
                                "displayName": "T2large-InstanceTemplate",
                                "kind": "instance-template",
                                "links": {
                                    "rel": "/api/v1/infrastructure/locations/location-1/instance-templates/my-instance-template"
                                },
                                "name": "my-instance-template",
                                "uid": "4157d480-cd0e-40a0-8ba8-d0d5ce17c5d6",
                                "updateTime": "2020-04-17T02:18:44.394232Z"
                            }
                        }
                    ]
                }
            }
        }
    }
}