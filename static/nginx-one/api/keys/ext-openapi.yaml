openapi: 3.0.3
servers:
  - url: /api/v1
info:
  title: Manage Dataplane Keys
  description: |
    Create dataplane keys to register NGINX instances with NGINX One. You'll need these dataplane keys when you install NGINX Agent on each instance. 
    Save the dataplane keys somewhere secure; the keys are shown only once when they're created and cannot be retrieved again.
  version: "v1"
tags:
  - name: "Dataplane Key"
paths:
  /dataplane-keys:
    get:
      tags:
        - "Dataplane Key"
      summary: List all dataplane keys
      description: |
        Returns a list of dataplane keys for the tenant namespace. This includes each key's name, creation date, and expiration date.
      operationId: listDataplaneKeys
      parameters:
        - $ref: '../../common.yaml#/components/parameters/Paginated'
        - $ref: '../../common.yaml#/components/parameters/Limit'
        - $ref: '../../common.yaml#/components/parameters/Offset'
        - $ref: '../../common.yaml#/components/parameters/FilterFieldDataplaneKeys'
        - $ref: '../../common.yaml#/components/parameters/FilterOperands'
        - $ref: '../../common.yaml#/components/parameters/FilterValues'
      responses:
        '200':
          description: Dataplane keys for the tenant namespace were successfully returned.
          content:
            application/json:
              schema:
                $ref: "../../common.yaml#/components/schemas/DataplaneKeyListResponse"
              examples:
                DataplaneKeys:
                  $ref: "../../common.yaml#/components/examples/DataplaneKeys"
    post:
      tags:
        - "Dataplane Key"
      summary: Create a dataplane key
      description: |
        Creates a new dataplane key that you can use to register NGINX instances with NGINX One.

        **IMPORTANT**: Save the dataplane key somewhere secure for reference. The key is displayed only once upon creation and can't be retrieved again.
      operationId: createDataplaneKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "../../common.yaml#/components/schemas/DataplaneKeyRequest"
            examples:
              DataPlaneKeyRequest:
                $ref: "../../common.yaml#/components/examples/DataplaneKeyRequest"
      responses:
        '200':
          description: A dataplane key was created. Save the key somewhere secure as you won't be able to retrieve it again.
          content:
            application/json:
              schema:
                $ref: "../../common.yaml#/components/schemas/DataplaneKeyResponse"
              examples:
                DataPlaneKeyResponse:
                  $ref: "../../common.yaml#/components/examples/DataplaneKeyResponse"
        '400':
          description: Request could not be processed due to invalid input. Verify the request data and try again.
        '500':
          description: The server encountered an internal error while processing the request. Please try again later.
  /dataplane-keys/{dataplaneKeyUUID}:
    get:
      tags:
        - "Dataplane Key"
      summary: Retrieve a dataplane key
      description: |
        Retrieves the details for an existing dataplane key.
      operationId: getDataplaneKey
      parameters:
        - $ref: '../../common.yaml#/components/parameters/DataplaneKeyUUID'
      responses:
        '200':
          description: The details for the dataplane key were successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "../../common.yaml#/components/schemas/DataplaneKey"
              examples:
                DataplaneKeys:
                  $ref: "../../common.yaml#/components/examples/DataplaneKey"
    delete:
      tags:
        - "Dataplane Key"
      summary: Delete a dataplane key
      description: |
        Deletes a dataplane key.
      operationId: deleteDataplaneKey
      parameters:
        - $ref: '../../common.yaml#/components/parameters/DataplaneKeyUUID'
      responses:
        '404':
          description: Dataplane key not found
        '204':
          description: The dataplane key was successfully deleted.
    patch:
      tags:
        - "Dataplane Key"
      summary: Update a dataplane key
      description: |
        Updates an existing dataplane key. 
        
        You can update the dataplane key's name or extend its expiration date. It's not possible to update the expiration date for a dataplane key that has expired.
      operationId: updateDataplaneKey
      parameters:
        - $ref: '../../common.yaml#/components/parameters/DataplaneKeyUUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "../../common.yaml#/components/schemas/DataplaneKeyRequest"
            examples:
              DataPlaneKeyRequest:
                $ref: "../../common.yaml#/components/examples/DataplaneKeyRequest"
      responses:
        '404':
          description: The dataplane key could not be found.
        '400':
          description: The dataplane key could not be updated.
        '500':
          description: The server encountered an internal error while processing the request. Please try again later.
        '200':
          description: The dataplane key was successfully updated.
          content:
            application/json:
              schema:
                $ref: "../../common.yaml#/components/schemas/DataplaneKey"
              examples:
                DataplaneKeys:
                  $ref: "../../common.yaml#/components/examples/DataplaneKey"
  /dataplane-keys/{dataplaneKeyUUID}/revoke:
    put:
      tags:
        - "Dataplane Key"
      summary: Revoke a dataplane key
      description: |
        Revoke an existing dataplane key.
        
        Revoking a dataplane key disconnects any active clients that were registered with the key.
      operationId: revokeDataplaneKey
      parameters:
        - $ref: '../../common.yaml#/components/parameters/DataplaneKeyUUID'
      responses:
        '404':
          description: Dataplane key not found
        '202':
          description: Dataplane key revoke request accepted. The backend will process the request, and update accordingly.
          content:
            application/json:
              schema:
                $ref: "../../common.yaml#/components/schemas/DataplaneKey"
              examples:
                DataplaneKeys:
                  $ref: "../../common.yaml#/components/examples/DataplaneKey"
