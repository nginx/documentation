openapi: 3.0.3
info:
  title: Common Components
  description: Defines shared components used across NGINX One REST APIs, including schemas, parameters, and responses.
  version: "v1"
paths: {}
components:
  parameters:
    FilterFieldInstances:
      name: filter_fields
      in: query
      description: |
        Filters for instances used in conjunction with other filter params having same array length.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/FilterNameInstances'
    FilterFieldDataplaneKeys:
      name: filter_fields
      in: query
      description: |
        Filters for dataplane keys used in conjunction with other filter params having same array length.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/FilterNameDataplaneKeys'
    FilterValues:
      name: filter_values
      in: query
      description: |
        Values used in conjunction with other filter params having same array length. Delimit by | character.
      schema:
        type: array
        items:
          type: string
          pattern: '^[0-9a-zA-Z]+(\|[0-9a-zA-Z]+)*$'
          example: value1|value2|value3
          maxLength: 1024
    FilterOperands:
      name: filter_ops
      in: query
      description: |
        Operands used in conjunction with other filter params having same array length.
      schema:
        type: array
        items:
          type: string
          enum: ["IN"]
    InstanceUUID:
      name: instanceUUID
      in: path
      schema:
        type: string
        format: uuid
      description: |
        Unique identifier (UUID) for a specific instance.
      required: true
    DataplaneKeyUUID:
      name: dataplaneKeyUUID
      in: path
      schema:
        type: string
        format: uuid
      description: |
        Unique identifier (UUID) for a specific dataplane key.
      required: true
    Limit:
      name: limit
      in: query
      schema:
        type: integer
      description: |
        Size limit for the collection that's returned. A value of `0` returns no results except for a total count. Ignored if `paginated` is `false`.
      required: false
    Offset:
      name: offset
      in: query
      schema:
        type: integer
      description: |
        Sets the starting point for results, beginning at `1`. Values less than `1` are treated as `1`. Ignored if `paginated` is `false`.
    Paginated:
      name: paginated
      in: query
      schema:
        type: boolean
        default: true
      description: |
        Returns a condensed, non-paginated list when set to `false`.
      required: false
  schemas:
    FilterNameInstances:
      type: string
      description: |
        Keywords for filters supported by instances.
        When filtering base on `instance_status`, only the following `filter_values` are supported:
          * online
          * offline
          * unavailable
          * unknown
      enum: ["hostname", "nginx_version", "os_version", "instance_status"]
      x-enum-varnames:
        - filter_name_hostname
        - filter_name_nginx_version
        - filter_name_os_version
        - filter_name_instance_status
    FilterNameDataplaneKeys:
      type: string
      description: |
        Keywords for filters supported by dataplane keys.
        When filtering base on `status`, only the following `filter_values` are supported:
          * revoked
          * valid
      enum: ["status"]
      x-enum-varnames:
        - filter_name_dataplane_key_status
    SummaryDisplayCount:
      description: Displays a count value with its name and optional display name.
      type: object
      required:
        - name
        - count
      properties:
        name:
          description: Name of the count being displayed.
          type: string
        count:
          description: Numerical count of the summary value.
          type: integer
        display:
          description: Optional display name for the count, for user-friendly representation.
    CertificateSummary:
      description: A summary and count of certificates, including the total number of certificates, expired certificates, and certificates about to expire.
      type: object
      required:
        - total
        - expired
        - expiring
        - valid
      properties:
        total:
          description: Total number of certificates.
          type: integer
        expired:
          description: Current number of invalid or expired certificates.
          type: integer
        expiring:
          description: Current number of certificates due to expire in the next 30 days.
          type: integer
        valid:
          description: Current number of certificates that's neither expired nor expiring.
          type: integer
    OperatingSystemVersionSummary:
      description: A summary of operating systems and versions for NGINX instances.
      type: array
      items:
        $ref: "#/components/schemas/SummaryDisplayCount"
    NGINXVersionSummary:
      description: A summary of NGINX versions.
      type: array
      items:
        $ref: "#/components/schemas/SummaryDisplayCount"
    StatusSummary:
      description: A summary of NGINX instance statuses, including how many are online or unavailable.
      type: object
      required:
        - online
        - offline
        - unavailable
      properties:
        online:
          description: Number of NGINX instances reporting as `online`.
          type: integer
        offline:
          description: Number of NGINX instances reporting as `offline`.
          type: integer
        unavailable:
          description: Number of NGINX instances reporting as `unavailable`.
          type: integer
    CveSummary:
      description: summary information for CVEs.
      type: object
      required:
        - severity
        - count
        - affected_instances
      properties:
        severity:
          $ref: "#/components/schemas/CveSeverityType"
        count:
          description: total severity count of CVEs.
          type: integer
        affected_instances:
          description: total count of affected NGINX instances.
          type: integer
    CveSeverityType:
        type: string
        description: |
          Type of the severity:
            * `low` - low security.
            * `minor` - minor security.
            * `major` - major security.
            * `medium` - medium security.
            * `other`  - when severity not above ones.
        enum:
          - low
          - minor
          - major
          - medium
          - other
    RecommendationType:
        type: string
        description: |
          Type of the recommendation:
            * `best_practice` - best practice recommendation.
            * `severity` - severity recommendation.
            * `optimization` - optimization recommendation.
            * `other` - when recommendation not above ones.
        enum:
          - best_practice
          - security
          - optimization
          - other
    IssueSummary:
      description: summary information for issues in config analysis report.
      type: object
      required:
        - type
        - count
        - affected_instances
      properties:
        type:
          $ref: "#/components/schemas/RecommendationType"
        count:
          description: total count of recommendation.
          type: integer
        affected_instances:
          description: total count of affected NGINX instances.
          type: integer
    InstanceSummary:
      description: A summary of NGINX instances, including certificates, OS versions, NGINX versions, and status details.
      type: object
      properties:
        certs:
          $ref: "#/components/schemas/CertificateSummary"
        os:
          $ref: "#/components/schemas/OperatingSystemVersionSummary"
        nginx_versions:
          $ref: "#/components/schemas/NGINXVersionSummary"
        statuses:
          $ref: "#/components/schemas/StatusSummary"
        cves:
          type: array
          items:
            $ref: "#/components/schemas/CveSummary"
        recommendations:
          type: array
          items:
            $ref: "#/components/schemas/IssueSummary"
    DataplaneKeys:
      type: array
      items:
        $ref: "#/components/schemas/DataplaneKey"
    DataplaneKey:
      type: object
      description: Represents a dataplane key with details such as UUID, name, and timestamps.
      required:
        - uuid
        - name
        - revoked
        - expires_at
        - created_at
        - modified_at
      properties:
        uuid:
          description: Unique identifier (UUID) for the dataplane key.
          type: string
          format: uuid
        name:
          description: Name assigned to the dataplane key.
          type: string
        revoked:
          description: Indication whether the key has been revoked or not.
          type: boolean
        revoked_at:
          type: string
          format: date-time
          description: The date and time when the dataplane key was revoked.
        expires_at:
          type: string
          format: date-time
          description: The date and time when the dataplane key expires.
        created_at:
          type: string
          format: date-time
          description: The date and time when the dataplane key was created.
        modified_at:
          type: string
          format: date-time
          description: The date and time when the dataplane key was last modified.
    DataplaneKeyRequest:
      type: object
      description: Request structure for creating a new dataplane key.
      required:
        - name
      properties:
        name:
          description: Name to be give to the new dataplane key.
          type: string
        expires_at:
          type: string
          format: date-time
          description: Date and time when the dataplane key expires.
    DataplaneKeyResponse:
      type: object
      description: Response structure containing details of the created or retrieved dataplane key.
      required:
        - key
        - uuid
        - expires_at
      properties:
        name:
          description: Name given to the dataplane key.
          type: string
        uuid:
          description: Unique identifier (UUID) for the dataplane key.
          type: string
          format: uuid
        key:
          description: Dataplane key value. Save the key somewhere secure as it's shown only once and can't be retrieved again.
          type: string
        expires_at:
          type: string
          format: date-time
          description: Date and time when the dataplane key expires.
    PaginationResponse:
      type: object
      description: Outlines pagination details for list responses, including total results, start index, and items per page.
      required:
        - count
        - start_index
        - items_per_page
      properties:
        count:
          type: integer
          description: |
            The total number of results from the list or query operation. 
            The value may exceed the number of resources returned. For example, when returning a single page of results when multiple pages are available.
        start_index:
          type: integer
          description: |
            The 1-based index of the first result in the list. Not included when `abridged=true`."
        items_per_page:
          type: integer
          description: |
            The number of items per page in the response. Not returned when `abridged=true`.
      example:
        {
          "count": 1,
          "start_index": 1,
          "items_per_page": 100
        }
    DataplaneKeyListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationResponse'
        - type: object
          description: List of dataplane keys.
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/DataplaneKey'
    InstanceListResponse:
      allOf:
        - $ref: '#/components/schemas/PaginationResponse'
        - type: object
          description: List of dataplane instances.
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Instance'
      example:
        {
          "count": 1,
          "start_index": 1,
          "items_per_page": 100,
          "items": [
            {
              "agent_version": "v2.30.3",
              "hostname": "4d116619f106",
              "key_uuid": "fee8a1ad-a658-403c-8b5d-134a50581bdf",
              "last_reported": "2023-12-06T22:37:24.120114Z",
              "nginx_build": {
                "conf_path": "/etc/nginx/nginx.conf",
                "version": "1.25.3"
              },
              "nginx_id": "b636d4376dea15405589692d3c5d3869ff3a9b26b0e7bb4bb1aa7e658ace1437",
              "registered_at": "2023-12-06T22:37:24.120114Z",
              "status": "unknown",
              "system_id": "b2c0b6a8-8b6a-3a8f-a541-17d8899c119a",
              "uuid": "b5174026-f5dd-427f-beea-22995b7d93e6"
            }
          ]
        }
    OperatingSystem:
      description: Release details for the operating system.
      type: object
      required:
        - name
        - id
        - codename
        - version
        - version_id
      properties:
        name:
          description: Name of the OS release.
          type: string
        id:
          description: Unique ID of the OS release.
          type: string
        codename:
          description: Codename for the OS release.
          type: string
        version:
          description: Version string of the  OS release.
          type: string
        version_id:
          description: Version of the OS release.
          type: string
      example:
        {
          "name": "Ubuntu",
          "version": "18.04.5 LTS (Bionic Beaver)",
          "version_id": "18.04",
        }
    NginxConfigProblem:
      type: object
      description: Representation of a problem found during NGINX configuration analysis.
      properties:
          directive:
            description: Directive in the NGINX configuration where the issue is identified.
            type: string
          file:
            description: File where the issue is detected.
            type: string
          line:
            description: Line number in the configuration where the issue is found.
            type: integer
    System:
      type: object
      description: Representation of a host system, including its unique identifier and operating system details.
      properties:
        uuid:
          description: Unique identifier (UUID) for the system object.
        system_id:
          description: Unique identifier provided by NGINX Agent for the system.
        os:
          $ref: "#/components/schemas/OperatingSystem"
    NginxBuild:
      description: |
        Build details of the NGINX binary, including the configure parameters it was built with.
      type: object
      required:
        - version
      properties:
        version:
          description: Base open-source NGINX version.
          type: string
        plus_release:
          description: NGINX Plus release string, applicable only for NGINX Plus instances.
          type: string
        conf_path:
          description: Full path to the NGINX configuration, corresponding to the NGINX binary's `--conf-path`.
          type: string
    CveDetails:
      description: |
        CVEs details, including the type and count.
      type: object
      required:
        - type
        - count
      properties:
        type:
          $ref: "#/components/schemas/CveSeverityType"
        count:
          description: count of CVE type.
          type: integer
    IssueDetails:
      description: |
        Issue details, including the type and count.
      type: object
      required:
        - type
        - count
      properties:
        type:
          $ref: "#/components/schemas/RecommendationType"
        count:
          description: count of Issue type.
          type: integer
    CertAssociation:
      type: object
      description: Summary information for a certificate that's associated with an instance.
      required:
        - name
        - uid
        - paths
        - domain
        - not_before
        - not_after
        - details
        - status
      properties:
        name:
          type: string
          description: A friendly name for the certificate.
        uid:
          type: string
          format: uuid
          example: '6692f820-c15c-4286-a405-38806b22064f'
        paths:
          type: array
          description: |
            Paths for the certificate file. Multiple, since the same certificate can be in different places.
          example: ["/etc/ssl/cert.pem", "/etc/ssl/cert.crt"]
          items:
            type: string
        domain:
          type: string
          description: Hostname or domain for the certificate. Usually the subject-alt-name (SAN) value for the certificate.
          example: nginx.com
        status:
          type: string
          description: |
            Status of the certificate:
              * `valid` - the certificate is valid for use.
              * `expiring` - the certificate expires within 30 days.
              * `expired` - the certificate has expired.
          enum:
            - valid
            - expiring
            - expired
        not_before:
          type: string
          format: date-time
          description: the effective date of the certificate.
        not_after:
          type: string
          format: date-time
          description: The expiration date for the certificate.
    InstanceDetails:
      type: object
      description: Detailed information about an NGINX instance.
      allOf:
        - $ref: '#/components/schemas/Instance'
        - type: object
          properties:
            certs:
              type: array
              items:
                $ref: '#/components/schemas/CertAssociation'
            os:
              $ref: "#/components/schemas/OperatingSystem"
      example:
        {
          "agent_version": "v2.30.3",
          "certs": [
              {
                  "domain": "test.com",
                  "name": "client",
                  "not_after": "2024-01-06T00:01:30Z",
                  "not_before": "2023-12-07T00:01:30Z",
                  "paths": [
                      "/etc/nginx/client.pem"
                  ],
                  "status": "expiring",
                  "uid": "5f13a59c-0f33-427a-a160-c6ef3209939b"
              }
          ],
          "hostname": "4d116619f106",
          "key_uuid": "fee8a1ad-a658-403c-8b5d-134a50581bdf",
          "last_reported": "2023-12-06T22:37:24.120114Z",
          "nginx_build": {
              "conf_path": "/etc/nginx/nginx.conf",
              "version": "1.25.3"
          },
          "nginx_id": "b636d4376dea15405589692d3c5d3869ff3a9b26b0e7bb4bb1aa7e658ace1437",
          "os": {
              "codename": "jammy",
              "id": "ubuntu",
              "name": "Ubuntu",
              "version": "22.04.3 LTS (Jammy Jellyfish)",
              "version_id": "22.04"
          },
          "registered_at": "2023-12-06T22:37:24.120114Z",
          "status": "unknown",
          "system_id": "b2c0b6a8-8b6a-3a8f-a541-17d8899c119a",
          "uuid": "b5174026-f5dd-427f-beea-22995b7d93e6"
      }
    Instance:
      type: object
      description: Summary information about an  NGINX instance.
      required:
        - uuid
        - hostname
        - system_id
        - agent_version
        - registered_at
        - last_reported
        - status
      properties:
        uuid:
          description: Unique identifier (UUID) for the NGINX instance.
          type: string
          format: uuid
        hostname:
          description: Hostname of the system.
          type: string
        system_id:
          description: Unique identifier assigned by NGINX Agent to identify the system.
          type: string
        nginx_id:
          description: Unique identifier for the NGINX process on the host system, generated by NGINX Agent.
          type: string
        agent_version:
          description: Version of NGINX Agent that is connecting.
          type: string
        key_uuid:
          description: |
            UUID of the dataplane key used in the most recent connection. This field may be empty if the key was deleted.
          format: uuid
          type: string
        nginx_build:
          $ref: "#/components/schemas/NginxBuild"
        registered_at:
          description: Timestamp marking the initial registration of the NGINX instance.
          type: string
          format: date-time
        last_reported:
          description: Timestamp of the last report received from NGINX Agent.
          type: string
          format: date-time
        status:
          type: string
          description: |
            Current status of the NGINX instance. Possible values are:
            * `unknown` - The status for the NGINX instance is unknown.
            * `unavailable` The NGINX Agent is not connected to the management plane.
            * `offline` - The NGINX Agent is connected to the management plane, but the NGINX instance is not online.
            * `online` - The NGINX Agent is connected to the management plane, and NGINX instance is online.
          enum:
            - unknown
            - unavailable
            - offline
            - online
        cve_severity:
          type: array
          items:
            $ref: '#/components/schemas/CveDetails'
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/IssueDetails'
    NginxConfigReport:
      type: object
      description: A report analyzing the NGINX configuration. It identifies issues, their severity, and provides guidance for resolution.
      properties:
        rule:
          description: Name of the rule that was violated.
          type: string
        info:
          description: Detailed description of the issue.
          type: string
        severity:
          description: Indicates the severity level of the issue.
          type: string
        category:
          description: Classification category of the issue.
          type: string
        documentation:
          description: Links to documentation that can assist in resolving the identified issue.
          type: array
          items:
            type: string
        where:
          description: Specific locations in the configuration where issues were detected.
          type: array
          items:
              $ref: "#/components/schemas/NginxConfigProblem"
    NginxSecurityAdvisory:
      type: object
      description: Details about a specific NGINX security advisory, including its severity, a link to more information, and a brief description.
      properties:
        id:
          description: Unique identifier of the security advisory.
          type: string
        severity:
          description: The level of severity associated with the security advisory.
          type: string
        advisory:
          description: URL providing detailed information about the security advisory.
          type: string
        info:
          description: A concise summary of the NGINX security advisory.
          type: string
    DirectoryWithFileContent:
      type: object
      description: Represents a directory and its contents, detailing the directory's full path, assigned permissions, last modified time, and the files within it.
      required:
        - name
        - permissions
        - mtime
        - files
      properties:
        name:
          type: string
          description: The full path name of the directory.
        permissions:
          type: string
          description: Permissions settings assigned to the directory.
        mtime:
          type: string
          description: Timestamp indicating the last time the directory was modified.
          format: date-time
        files:
          type: array
          description: A list of files contained in the directory.
          items:
            $ref: "#/components/schemas/FileData"
    FileData:
      type: object
      description: Details about a file, including its path, content, size, and last modified time.
      required:
        - name
        - contents
        - size
        - mtime
      properties:
        name:
          type: string
          description: The file's absolute path.
          minLength: 1
          maxLength: 4096
        contents:
          type: string
          format: byte
          description: Base64-encoded content of the file.
          maxLength: 3145728
        size:
          type: integer
          description: Size of the file, measured in bytes.
        mtime:
          type: string
          format: date-time
          description: Timestamp of the last modification made to the file.
    NginxConfig:
      type: object
      description: |
        Details of an NGINX configuration, including its unique identifier, the main configuration path, and the configuration directories.
      required:
        - uuid
        - conf_path
        - configs
      properties:
        uuid:
          description: A unique identifier for the NGINX configuration.
          type: string
          format: uuid
        conf_path:
          type: string
          description: |
            The full path to the main NGINX configuration file. This corresponds to the `--conf-path` parameter used in the NGINX binary.
          example: /etc/nginx/nginx.conf.
        configs:
          type: array
          description: An array of directories containing NGINX configuration files.
          items:
            $ref: "#/components/schemas/DirectoryWithFileContent"
        aux:
          type: array
          description: An array of auxiliary directory contents related to the NGINX configuration.
          items:
            $ref: "#/components/schemas/DirectoryWithFileContent"
  examples:
    DataplaneKey:
      value:
        {
          "expires_at": "2023-12-01T00:00:00Z",
          "name": "foo",
          "uuid": "c51f9b68-c436-4a69-9aa4-c01fd89895b0"
        }
    DataplaneKeys:
      value:
        {
          "items": [
            {
              "expires_at": "2023-12-01T00:00:00Z",
              "name": "foo",
              "uuid": "c51f9b68-c436-4a69-9aa4-c01fd89895b0"
            },
            {
              "expires_at": "2023-12-01T00:00:00Z",
              "name": "foo",
              "uuid": "c0fd9d55-7b4b-43aa-aa44-7289cc5b3a5c"
            }
          ],
        }
    DataplaneKeyRequest:
      value:
        {
          "name": "foo",
          "expires_at": "2023-12-01T00:00:00Z"
        }
    DataplaneKeyResponse:
      value:
        {
          "expires_at": "2023-12-01T00:00:00Z",
          "key": "AVQFrgADVFpJ9qvI7BX1+OlHUxdZRMsSCm4Q35CrqAQ=",
          "name": "foo",
          "uuid": "c51f9b68-c436-4a69-9aa4-c01fd89895b0"
        }