name: nim
secrets:
  nim_admin_password:
    file: admin_password.txt
  # Optional - set admin and user credential from .htpasswd file
  #nim_credential_file:
  #  file: nim_creds.txt
  # Optional - set the external SSL cert, key and ca in PEM format for the nim ingress proxy
  #nim_proxy_cert_file:
  #  file: ./certs/nim_cert.pem
  #nim_proxy_cert_key:
  #  file: ./certs/nim_key.pem
  #nim_proxy_ca_cert:
  #  file: ./certs/nim_ca.pem
services:
  nim:
    image: private-registry.nginx.com/nms/nim-standalone-compose:2.20.0
    hostname: nim
    ports:
      - 443:443
    networks:
      - external_network
    volumes:
      - nim-data:/data
      - proxy-certs:/usr/local/share/ca-certificates
    # Uncomment to set custom service limits
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '0.5'
    #      memory: '512M'
    restart: no
    healthcheck:
      test: ["CMD", "sh", "/etc/nms/scripts/health.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    stop_grace_period: 30s
    secrets:
      - nim_admin_password
      # Uncomment the line below if using a .htpasswd credential file. The credential file takes priority over the nim_admin_password file
      #- nim_credential_file
      # Uncomment the lines below if using user provided cert, key and CA for the nim ingress proxy
      #- nim_proxy_cert_file
      #- nim_proxy_cert_key
      #- nim_proxy_ca_cert
    environment:
      # set the NIM logging level
      NIM_LOG_LEVEL: "INFO"
      # set a custom time-to-live in days value for metrics retention
      NIM_METRICS_TTL: "1"
      # set a custom time-to-live in days value for events retention
      NIM_EVENTS_TTL: "1"
      # set a custom time-to-live in days value for security violation retention
      NIM_SECURITY_TTL: "1"
      # enable maintenance mode to preform backup,restore and troubleshooting
      #NIM_MAINTENANCE: "true"
      # set a custom watchdog timeout in seconds.
      NIM_WATCHDOG_TIMEOUT: "60"
      # set the NIM license mode of operation to either connected or disconnected. Default is connected.
      NIM_LICENSE_MODE_OF_OPERATION: "connected"
      # Enable this setting to use proxy
      PROXY_ENABLE: false
      # Configure this setting to set the host of the proxy server to be used
      PROXY_HOST: ""
      # Configure this setting to set the protocol of the proxy server to be used - http/https (default - http)
      PROXY_PROTOCOL: "http"
      # Configure this setting to set the port of the proxy server to be used
      PROXY_PORT: 3128
      # Enable this setting to use basic auth for proxy
      PROXY_AUTH_REQUIRED: false
      # Configure this setting to set the user name in basic auth (proxy_auth_required: true)
      PROXY_AUTH_USERNAME: ""
      # Configure this setting to set the password in basic auth (proxy_auth_required: true)
      # Recommended to use .env file for the password
      # PROXY_PASSWORD: ""
      # Configure this setting to set the proxy connection verification (is the proxy trusted by the host)
      PROXY_SSL_VERIFY: true
      ENABLE_METRICS: false
networks:
  external_network:
    driver: bridge
volumes:
  # By default docker compose will create a named volume
  # Refer to https://docs.docker.com/reference/compose-file/volumes/ for additional storage options such as nfs
  proxy-certs:
    driver: local
  nim-data:
    driver: local
    #driver_opts:
    #  type: "nfs"
    #  o: "addr=172.16.0.92,rw"
    #  device: ":/mnt/nfs_share/data"




When Nginx instance manager runs in lightweight mode(ENABLE_METRICS: false), all metrics related APIs are not registered and will return 403 Bad Request and all the UI screens where metrics were shown will now show a banner as shown below saying “metrics are disabled”. If you want re-enable the metrics, set the ENABLE_METRICS env to true and re-deploy NIM docker cmpose with docker compose up d then these notifications will disappear and start showing the metrics(provided clickhouse config is added back to the docker compose.yaml).

When NGINX Instance Manager is run in lightweight mode (ENABLE_METRICS: false), all metrics-related APIs are disabled and will return a 403 Bad Request. Additionally, any UI screens that previously displayed metrics will now show a banner stating that “metrics are disabled.”

If you wish to re-enable metrics, set the ENABLE_METRICS environment variable to "true "and redeploy NIM using "docker compose up -d". Once redeployed (and with ClickHouse configuration included in your docker-compose.yaml), the notifications will disappear and metrics will be displayed again.

Install script changes:

We are making significant changes to the installation script and going forward customers can use install script to install only latest Nginx Instance Manager. As part of the changes, we have -s option which stands for “skip clickhouse installation”. When customers give -s option then script will not install the clickhouse and metrics will be disabled.




Kubernetes:

Previously, the configuration used a simple boolean flag—nmsClickhouse.enabled = true/false—defined in values.yaml. This has now been replaced with a tri-state mode field, which accepts one of three values: internal, external, or disabled.

internal: Default value and deploys a ClickHouse pod within the cluster. Internally maps to clickhouse.enable = true in the nms.conf ConfigMap.

external: Connects to an external ClickHouse server. Also maps to clickhouse.enable = true in nms.conf. Here, externalClickhouse.address is needed to connect.

disabled: A newly introduced mode that skips deploying a ClickHouse pod and doesn’t require an external ClickHouse server, too. It internally maps to clickhouse.enable = false in nms.conf configmap and enables a lightweight version of NIM without ClickHouse.



Deployment Command

helm install -n nms \
--set adminPasswordHash=$(openssl passwd -6 'YourPassword123#') \
nms nginx-stable/nms-hybrid \
--create-namespace \
-f <path-to-your-values.yaml> \
[--version <chart-version>] \
--wait


Values.yaml (https://gitlab.com/f5/nginx/controller/product/platform/-/blob/main/k8s/charts/values.yaml?ref_type=heads#L44)

## nmsClickhouse server configuration packaged with helm
## Enable this if external clickhouse is disabled
nmsClickhouse:
  # Defines how ClickHouse is provisioned for NMS:
  # "internal" - deploy ClickHouse as part of this chart
  # "external" - connect to an existing external ClickHouse instance
  # "disabled" - do not use ClickHouse at all
  mode: "internal"  # options: "internal", "external", "disabled"
