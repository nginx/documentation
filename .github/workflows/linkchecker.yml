# Using https://github.com/wummel/linkchecker to test NGINX Documentation
# Recursively checks all internal and external links in the docs.
# Warnings for redirects are disabled
# To ignore a url use the --ignore-url param. eg --ignore-url ^http://www.example.com

name: QE LinkChecker

# This workflow runs on a schedule or can be run manually
on:
  workflow_dispatch:
  schedule:
    # Runs every day at 7am UTC
    - cron: '0 7 * * *'

env:
  basepath: https://docs.nginx.com/
  defaults: '--no-warnings --check-extern --ignore-url ^https://consent.trustarc.com'

  # Ignore lists
  nim_ignore: '--ignore-url ^https://product.apis.f5.com --ignore-url ^https://product-s.apis.f5.com --ignore-url ^https://www.maxmind.com'
  app_dos_ignore: '--ignore-url ^http://serv/'
  app_waf_ignore: '--ignore-url ^http://www.example.com --ignore-url ^file:// --ignore-url ^https://www.fastbot.de'
  nic_ignore: '--ignore-url ^http://127.0.0.1 --ignore-url ^https://docs.nginx.com/nginx-ingress-controller/css'
  naas_ignore: '--ignore-url ^https://docs.nginx.com/nginxaas/azure/css/'
  mesh_ignore: '--ignore-url ^http://localhost --ignore-url ^https://lightstep.com'
  nwaf_ignore: '--ignore-url ^https://www.owasp.org/'
  nms_ignore: '--ignore-url ^https://myserver.host.com --ignore-url ^https://oauth2.googleapis.com --ignore-url ^https://openidconnect.googleapis.com --ignore-url ^https://www.base64url.com/'

jobs:
  nginx-one:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-one/ "$defaults"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-one docs
      - name: Run LinkChecker nginx-one
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-instance-manager:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-instance-manager/ "$defaults" "$nim_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-instance-manager docs
      - name: Run LinkChecker nginx-instance-manager
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}
        
  nginx-solutions:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"solutions/ "$defaults"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-solutions docs
      - name: Run LinkChecker nginx-solutions
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}
        
  nginx-app-protect-dos:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-app-protect-dos/ "$defaults" "$app_dos_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-app-protect-dos docs
      - name: Run LinkChecker nginx-app-protect-dos
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-app-protect-waf:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-app-protect-waf/ "$defaults" "$app_waf_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Step : Run LinkChecker on nginx-app-protect-waf docs
      - name: Run LinkChecker nginx-app-protect-waf
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-ingress-controller:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-ingress-controller/  "$defaults" "$nic_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-ingress-controller docs
      - name: Run LinkChecker nginx-ingress-controller
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginxaas-azure:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginxaas/azure/   "$defaults" "$naas_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginxaas-azuret docs
      - name: Run LinkChecker nginxaas-azure
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}
      
  nginx-service-mesh:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-service-mesh/ "$defaults" "$mesh_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-service-mesh docs
      - name: Run LinkChecker nginx-service-mesh
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-amplify:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-amplify/  "$defaults"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-amplify docs
      - name: Run LinkChecker nginx-amplify
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-controller:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-controller/  "$defaults"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-controller docs
      - name: Run LinkChecker nginx-controller
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-waf:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-waf/ "$defaults" "$nwaf_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-waf docs
      - name: Run LinkChecker nginx-waf
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}

  nginx-management-suite:
    runs-on: ubuntu-latest
    steps:
      # Build the linkchecker command
      - name: Setup linkchecker cmds
        run: |
          echo "cmd=linkchecker "$basepath"nginx-management-suite/ "$defaults" "$nms_ignore"" >> "$GITHUB_ENV"
      # Install LinkChecker
      - name: Install LinkChecker
        run: sudo apt-get update && sudo apt-get install -y linkchecker
      # Run LinkChecker on nginx-management-suite docs
      - name: Run LinkChecker nginx-management-suite
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ${{ env.cmd }}