<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn About App Security on DEV -- docs-nginx-com</title>
    <link>http://localhost:1313/nginx-controller/app-delivery/security/concepts/</link>
    <description>Recent content in Learn About App Security on DEV -- docs-nginx-com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/nginx-controller/app-delivery/security/concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About App Security</title>
      <link>http://localhost:1313/nginx-controller/app-delivery/security/concepts/what-is-waf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-controller/app-delivery/security/concepts/what-is-waf/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;The App Security Add-on for F5 NGINX Controller ADC lets you protect your applications with a web applications firewall (WAF). The WAF protects your apps from a variety of application layer attacks such as &lt;a href=&#34;https://www.f5.com/services/resources/glossary/cross-site-scripting-xss-or-css&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cross-site scripting (XSS)&lt;/a&gt;, &lt;a href=&#34;https://www.f5.com/services/resources/glossary/sql-injection&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SQL injection&lt;/a&gt;, and &lt;a href=&#34;https://www.f5.com/services/resources/glossary/cookie-poisoning&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cookie poisoning&lt;/a&gt;, among others.&lt;/p&gt;&#xA;&lt;p&gt;A WAF protects your web apps by filtering, monitoring, and blocking any malicious HTTP/S traffic traveling to the web application, and prevents any unauthorized data from leaving the app. It does this by adhering to a set of policies that help determine what traffic is malicious and what traffic is safe. Just as a proxy server acts as an intermediary to protect the identity of a client, a WAF operates in similar fashion but in the reverse—called a reverse proxy—acting as an intermediary that protects the web app server from a potentially malicious client.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Default WAF Policy</title>
      <link>http://localhost:1313/nginx-controller/app-delivery/security/concepts/app-sec-default-policy-original/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-controller/app-delivery/security/concepts/app-sec-default-policy-original/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;You can use the F5 NGINX Controller App Security module to configure and manage a web application firewall (WAF). The App Security WAF protects your applications from HTTP and web-based threats, including the &lt;a href=&#34;https://owasp.org/www-project-top-ten/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP Top 10&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;NGINX Controller App Security provides out-of-the-box analytics events and metrics, which are reported through the NGINX Controller API and user interface. App Security works with &lt;a href=&#34;https://www.nginx.com/products/nginx-app-protect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX App Protect&lt;/a&gt;, running NGINX Plus as the WAF in the data path.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bring Your Own WAF Policy</title>
      <link>http://localhost:1313/nginx-controller/app-delivery/security/concepts/bring-your-own-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-controller/app-delivery/security/concepts/bring-your-own-policy/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;You can use the App Security Add-on for F5 NGINX Controller ADC to bring your own (&amp;ldquo;BYO&amp;rdquo;) NGINX App Protect policies into NGINX Controller. This lets you use your existing declarative JSON policies from NGINX App Protect to protect your ADC app components.&lt;/p&gt;&#xA;&lt;p&gt;A BYO NGINX App Protect policy lets you maintain consistent Security Policies across your F5 WAF and NGINX WAF deployments. For example, say you already use F5 BIG-IP Application Security Manager (ASM) or F5 Advanced WAF and are now adopting NGINX Controller App Security. You can convert your XML Security Policies to an NGINX App Protect policy by using the &lt;a href=&#34;https://docs.nginx.com/nginx-app-protect/configuration/#policy-converter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX App Protect Policy Converter tool&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>App Security Metrics</title>
      <link>http://localhost:1313/nginx-controller/app-delivery/security/concepts/app-sec-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-controller/app-delivery/security/concepts/app-sec-metrics/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;This topic provides reference information for the metrics and events that F5 NGINX Controller reports for Application Security.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;security-metrics-and-event-dimensions&#34;&gt;Security Metrics and Event Dimensions  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#security-metrics-and-event-dimensions&#34; title=&#34;Security Metrics and Event Dimensions&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;The following table shows the attributes and dimensions you can view and filter by for WAF violation events.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;table class=&#34;table table-striped table-bordered table-v1&#34;&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Attribute&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Possible Values&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Description and Additional Information&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;category&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;security violation&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;timestamp&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Timestamp of the request&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;UTC&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;message&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Provides summary info about if a request was rejected or flagged, from what source, and due to what attack types.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;level&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;CRITICAL&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Security violation events are only &lt;code&gt;INFO&lt;/code&gt; for now&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;hostname&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Hostname used in the request&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;environment&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;app&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;component&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;gateway&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;corelationId&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;http.request_endpoint&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Request URI&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;http.request_method&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Method used for the request&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;request_outcome&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;REJECTED&lt;/code&gt;, &lt;code&gt;PASSED&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;The outcome of the request after Controller App Security processed the request.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;request_outcome_reason&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;SECURITY_WAF_OK&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_VIOLATION&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_FLAGGED&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_BYPASS&lt;/code&gt;, &lt;code&gt;SECURITY_NGINX_VIOLATION&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_FLAGGED&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;request_outcome_reason provides the reason why App Security rejected or flagged a request to be reviewed. Outcome reasons for &lt;code&gt;SECURITY_WAF_BYPASSED&lt;/code&gt; and &lt;code&gt;SECURITY_NGINX_VIOLATION&lt;/code&gt; have not been implemented.&lt;br /&gt;&lt;blockquote class=&#34;note&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;  &lt;div&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br/&gt; App Security Events are not created for requests that don&amp;rsquo;t trigger any violations. This means you should not see Events with &lt;code&gt;outcome_reason = SECURITY_WAF_OK&lt;/code&gt;.&lt;/div&gt;&#xA;&lt;/blockquote&gt;&#xA;|&#xA;| http.response_code | | Response code returned to App Security. A `0` code is returned if App Security did not block the request.|&#xA;| http.hostname | | Hostname of request|&#xA;| http.remote_addr | | Client IP of the request|&#xA;| http.remote_port | | Port of the client initiating the request|&#xA;| http.server_addr | | Server IP address that NGINX is listening on|&#xA;| http.server_port | | Server IP port that NGINX is listening on|&#xA;| waf.http_request | | Request including header, body, etc.|&#xA;| waf.support_id | | ID seen on the App Security rejection page|&#xA;| waf.signature_ids | | ID list of signatures triggered with the request. It usually does not go above three signature IDs.|&#xA;| waf.signature_names | | Names of signatures triggered with the request. It usually does not go above three signature names.|&#xA;|waf.attack_types | | Attack types triggered by the request.  It can be based on any of the above signature or other protection mechanisms used in the WAF policy. It usually does not go above three attack types.|&#xA;| violations ||Comma-separated list of logical violation names|&#xA;| sub_violation ||More specific violations within ‘HTTP protocol compliance failed’ (violation = `VIOL_HTTP_PROTOCOL`) and/or ‘Evasion technique detected’ violations (violation = `VIOL_EVASION`) |&#xA;| sig_cves||Signature CVEs value of the matched signatures.|&#xA;| is_truncated||A flag that returns true if a request is truncated in the security events, or false if it is not. |&#xA;| x_forwarded_for_header_value||X-Forwarded-For header information. This option is commonly used when proxies are involved to track the originator of the request.|&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;  &#xA;&#xA;&#xA;&lt;div data-mf=&#34;true&#34; style=&#34;display: none;&#34; class=&#34;table-v2 table table-striped table-bordered narrow&#34;&gt;&#xA;    &lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Attribute&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Possible Values&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Description and Additional Information&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;category&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;security violation&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;timestamp&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Timestamp of the request&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;UTC&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;message&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Provides summary info about if a request was rejected or flagged, from what source, and due to what attack types.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;level&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;CRITICAL&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Security violation events are only &lt;code&gt;INFO&lt;/code&gt; for now&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;hostname&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Hostname used in the request&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;environment&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;app&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;component&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;gateway&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;corelationId&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;http.request_endpoint&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Request URI&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;http.request_method&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Method used for the request&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;request_outcome&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;REJECTED&lt;/code&gt;, &lt;code&gt;PASSED&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;The outcome of the request after Controller App Security processed the request.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;request_outcome_reason&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;SECURITY_WAF_OK&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_VIOLATION&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_FLAGGED&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_BYPASS&lt;/code&gt;, &lt;code&gt;SECURITY_NGINX_VIOLATION&lt;/code&gt;, &lt;code&gt;SECURITY_WAF_FLAGGED&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;request_outcome_reason provides the reason why App Security rejected or flagged a request to be reviewed. Outcome reasons for &lt;code&gt;SECURITY_WAF_BYPASSED&lt;/code&gt; and &lt;code&gt;SECURITY_NGINX_VIOLATION&lt;/code&gt; have not been implemented.&lt;br /&gt;&lt;blockquote class=&#34;note&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;  &lt;div&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br/&gt; App Security Events are not created for requests that don&amp;rsquo;t trigger any violations. This means you should not see Events with &lt;code&gt;outcome_reason = SECURITY_WAF_OK&lt;/code&gt;.&lt;/div&gt;&#xA;&lt;/blockquote&gt;&#xA;|&#xA;| http.response_code | | Response code returned to App Security. A `0` code is returned if App Security did not block the request.|&#xA;| http.hostname | | Hostname of request|&#xA;| http.remote_addr | | Client IP of the request|&#xA;| http.remote_port | | Port of the client initiating the request|&#xA;| http.server_addr | | Server IP address that NGINX is listening on|&#xA;| http.server_port | | Server IP port that NGINX is listening on|&#xA;| waf.http_request | | Request including header, body, etc.|&#xA;| waf.support_id | | ID seen on the App Security rejection page|&#xA;| waf.signature_ids | | ID list of signatures triggered with the request. It usually does not go above three signature IDs.|&#xA;| waf.signature_names | | Names of signatures triggered with the request. It usually does not go above three signature names.|&#xA;|waf.attack_types | | Attack types triggered by the request.  It can be based on any of the above signature or other protection mechanisms used in the WAF policy. It usually does not go above three attack types.|&#xA;| violations ||Comma-separated list of logical violation names|&#xA;| sub_violation ||More specific violations within ‘HTTP protocol compliance failed’ (violation = `VIOL_HTTP_PROTOCOL`) and/or ‘Evasion technique detected’ violations (violation = `VIOL_EVASION`) |&#xA;| sig_cves||Signature CVEs value of the matched signatures.|&#xA;| is_truncated||A flag that returns true if a request is truncated in the security events, or false if it is not. |&#xA;| x_forwarded_for_header_value||X-Forwarded-For header information. This option is commonly used when proxies are involved to track the originator of the request.|&#xA;&#xA;&lt;/div&gt;&#xA;&lt;h3 &#xA;id=&#34;attack-types-and-description&#34;&gt;Attack Types and Description  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#attack-types-and-description&#34; title=&#34;Attack Types and Description&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;Each signature and violation has an Attack Type which is the attack vector WAF protects from. The list of Attack Types and descriptions are listed here. You may see these attack types and violations in Security Events and Metrics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extend App Security with Snippets</title>
      <link>http://localhost:1313/nginx-controller/app-delivery/security/concepts/extend-app-security-snippets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-controller/app-delivery/security/concepts/extend-app-security-snippets/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;F5 NGINX Controller &lt;a href=&#34;http://localhost:1313/nginx-controller/app-delivery/about-snippets/&#34;&gt;Snippets&lt;/a&gt; let you customize your NGINX configuration by adding NGINX directives that aren&amp;rsquo;t represented by the NGINX Controller API.&lt;/p&gt;&#xA;&lt;p&gt;Snippets also let you customize App Security for your Components by adding NGINX App Protect directives that aren&amp;rsquo;t present in the NGINX Controller API. You can use Snippets when &lt;a href=&#34;http://localhost:1313/nginx-controller/app-delivery/security/tutorials/tune-waf-for-app/&#34;&gt;tuning your NGINX App Protect WAF performance&lt;/a&gt; as well.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;caution call-out&#34;&gt;&#xA;  &lt;div&gt;&lt;strong class=&#34;call-out-type&#34;&gt;Caution&lt;/strong&gt;&lt;br/&gt; &lt;p&gt;When you use Snippets to customize your NGINX configuration, your changes are applied to the &lt;code&gt;nginx.conf&lt;/code&gt; file &lt;em&gt;as is&lt;/em&gt;. NGINX Controller does not verify that your configuration is valid before applying the Snippet.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
