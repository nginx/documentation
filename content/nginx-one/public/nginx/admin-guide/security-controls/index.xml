<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security Controls on DEV -- docs-nginx-com</title>
    <link>http://localhost:1313/nginx/admin-guide/security-controls/</link>
    <description>Recent content in Security Controls on DEV -- docs-nginx-com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/nginx/admin-guide/security-controls/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NGINX SSL Termination</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/terminating-ssl-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/terminating-ssl-http/</guid>
      <description>&lt;p&gt;This section describes how to configure an HTTPS server on NGINX and F5 NGINX Plus.&lt;/p&gt;&#xA;&lt;p&gt;&lt;span id=&#34;setup&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;setting-up-an-https-server&#34;&gt;Setting up an HTTPS Server  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#setting-up-an-https-server&#34; title=&#34;Setting up an HTTPS Server&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;To set up an HTTPS server, in your &lt;strong&gt;nginx.conf&lt;/strong&gt; file include the &lt;code&gt;ssl&lt;/code&gt; parameter to the &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_core_module.html#listen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;listen&lt;/a&gt; directive in the &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_core_module.html#server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;server&lt;/a&gt; block, then specify the locations of the server certificate and private key files:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;code-block&#34; data-mf=&#34;true&#34; style=&#34;display: none;&#34;&gt;&lt;span class=&#34;code-type chroma&#34;&gt;nginx&lt;/span&gt;&lt;div class=&#34;code-container chroma&#34;&gt;&#xA;        &lt;button onclick=&#34;copyToClipBoard(this, &amp;#34;id-18440f1fb0abf7d0&amp;#34;)&#34; class=&#34;code-copy-button multi-line&#34; type=&#34;button&#34;&gt;Copy&lt;/button&gt;&#xA;        &lt;div class=&#34;highlight-v2&#34; id=&#34;id-18440f1fb0abf7d0&#34;&gt;&#xA;            &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;listen&lt;/span&gt;              &lt;span class=&#34;mi&#34;&gt;443&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;server_name&lt;/span&gt;         &lt;span class=&#34;s&#34;&gt;www.example.com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_certificate&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;www.example.com.crt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_certificate_key&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;www.example.com.key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_protocols&lt;/span&gt;       &lt;span class=&#34;s&#34;&gt;TLSv1&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;TLSv1.1&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;TLSv1.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_ciphers&lt;/span&gt;         &lt;span class=&#34;s&#34;&gt;HIGH:!aNULL:!MD5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&lt;div id=&#34;code-block-v1&#34; data-mf=&#34;false&#34;&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;listen&lt;/span&gt;              &lt;span class=&#34;mi&#34;&gt;443&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;server_name&lt;/span&gt;         &lt;span class=&#34;s&#34;&gt;www.example.com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_certificate&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;www.example.com.crt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_certificate_key&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;www.example.com.key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_protocols&lt;/span&gt;       &lt;span class=&#34;s&#34;&gt;TLSv1&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;TLSv1.1&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;TLSv1.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;ssl_ciphers&lt;/span&gt;         &lt;span class=&#34;s&#34;&gt;HIGH:!aNULL:!MD5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The server certificate is a public entity. It is sent to every client that connects to the NGINX or NGINX Plus server. The private key is a secure entity and should be stored in a file with restricted access. However, the NGINX master process must be able to read this file. Alternatively, the private key can be stored in the same file as the certificate:&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSL Termination for TCP Upstream Servers</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/terminating-ssl-tcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/terminating-ssl-tcp/</guid>
      <description>&lt;p&gt;This article explains how to set up SSL termination for F5 NGINX Plus and a load-balanced group of servers that accept TCP connections.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;what-is-ssl-termination&#34;&gt;What is SSL Termination?  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#what-is-ssl-termination&#34; title=&#34;What is SSL Termination?&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;SSL termination means that NGINX Plus acts as the server-side SSL endpoint for connections with clients: it performs the decryption of requests and encryption of responses that backend servers would otherwise have to do. The operation is called termination because NGINX Plus closes the client connection and forwards the client data over a newly created, unencrypted connection to the servers in an upstream group. In release R6 and later, NGINX Plus performs SSL termination for TCP connections as well as HTTP connections.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restricting Access with HTTP Basic Authentication</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/configuring-http-basic-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/configuring-http-basic-authentication/</guid>
      <description>&lt;p&gt;&lt;span id=&#34;intro&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;introduction&#34;&gt;Introduction  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#introduction&#34; title=&#34;Introduction&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;You can restrict access to your website or some parts of it by implementing a username/password authentication. Usernames and passwords are taken from a file created and populated by a password file creation tool, for example, &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;code&gt;apache2-utils&lt;/code&gt;&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;p&gt;HTTP Basic authentication can also be combined with other access restriction methods, for example restricting access by &lt;a href=&#34;http://localhost:1313/nginx/admin-guide/security-controls/denylisting-ip-addresses/&#34;&gt;IP address&lt;/a&gt; or &lt;a href=&#34;http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-by-geoip/&#34;&gt;geographical location&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;span id=&#34;prereq&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;prerequisites&#34;&gt;Prerequisites  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#prerequisites&#34; title=&#34;Prerequisites&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;F5 NGINX Plus or NGINX Open Source&lt;/li&gt;&#xA;&lt;li&gt;Password file creation utility such as &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;code&gt;apache2-utils&lt;/code&gt;&lt;/span&gt; (Debian, Ubuntu) or &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;code&gt;httpd-tools&lt;/code&gt;&lt;/span&gt; (RHEL/CentOS/Oracle Linux).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;span id=&#34;pass&#34;&gt;&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication Based on Subrequest Result</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/configuring-subrequest-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/configuring-subrequest-authentication/</guid>
      <description>&lt;p&gt;&lt;span id=&#34;intro&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;introduction&#34;&gt;Introduction  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#introduction&#34; title=&#34;Introduction&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;NGINX and F5 NGINX Plus can authenticate each request to your website with an external server or service. To perform authentication, NGINX makes an HTTP subrequest to an external server where it is verified. Such type of authentication allows implementing various authentication schemes, such as multifactor authentication, or allows implementing LDAP or OAuth authentication.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;response-codes&#34;&gt;Response Codes  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#response-codes&#34; title=&#34;Response Codes&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Subrequest Response Codes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2xx - access is allowed&lt;/li&gt;&#xA;&lt;li&gt;401, 403 - access is denied&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 &#xA;id=&#34;prerequisites&#34;&gt;Prerequisites  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#prerequisites&#34; title=&#34;Prerequisites&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;NGINX Plus or NGINX Open Source&lt;/li&gt;&#xA;&lt;li&gt;External authentication server or service&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;span id=&#34;config&#34;&gt;&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up JWT Authentication</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/configuring-jwt-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/configuring-jwt-authentication/</guid>
      <description>&lt;p&gt;&lt;span id=&#34;intro&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;introduction&#34;&gt;Introduction  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#introduction&#34; title=&#34;Introduction&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;With F5 NGINX Plus it is possible to control access to your resources using JWT authentication. JWT is data format for user information in the OpenID Connect standard, which is the standard identity layer on top of the OAuth 2.0 protocol. Deployers of APIs and microservices are also turning to the JWT standard for its simplicity and flexibility. With JWT authentication, a client provides a JSON Web Token, and the token will be validated against a local key file or a remote service.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Single Sign-On with OpenID Connect and Identity Providers</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/configuring-oidc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/configuring-oidc/</guid>
      <description>&lt;p&gt;This guide explains how to enable single sign-on (SSO) for applications being proxied by F5 NGINX Plus using:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OpenID Connect as the authentication mechanism.&lt;/li&gt;&#xA;&lt;li&gt;An external Identity Provider (IdP) such as AD FS, Auth0, Cognito, Entra ID, Keycloak, OneLogin, Okta, Ping Identity and others.&lt;/li&gt;&#xA;&lt;li&gt;NGINX Plus as an OIDC client application that verifies user identity (Relying Party).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;OpenID Connect is an identity protocol that utilizes the authorization and authentication mechanisms of OAuth 2.0. With it, NGINX Plus can provide a layer of authentication for protected applications that do not natively support it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Limiting Access to Proxied HTTP Resources</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-proxied-http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-proxied-http/</guid>
      <description>&lt;p&gt;This article explains how to set the maximum number of requests for a connection, or the maximum rate of downloading content from the server.&lt;/p&gt;&#xA;&lt;p&gt;&lt;span id=&#34;intro&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;introduction&#34;&gt;Introduction  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#introduction&#34; title=&#34;Introduction&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Using NGINX and F5 NGINX Plus, it is possible to limit:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The number of connections per key value (for example, per IP address)&lt;/li&gt;&#xA;&lt;li&gt;The request rate per key value (the number of requests that are allowed to be processed during a second or minute)&lt;/li&gt;&#xA;&lt;li&gt;The download speed for a connection&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Note that IP addresses can be shared behind NAT devices, so limiting by IP address should be used judiciously.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restricting Access to Proxied TCP Resources</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-proxied-tcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-proxied-tcp/</guid>
      <description>&lt;p&gt;This chapter provides scenarios for restricting access to a database or media server that communicates over TCP. Access can be limited by IP address, the number of simultaneous connections, or bandwidth.&lt;/p&gt;&#xA;&lt;p&gt;&lt;span id=&#34;restrict&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;restricting-access-by-ip-address&#34;&gt;Restricting Access by IP Address  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#restricting-access-by-ip-address&#34; title=&#34;Restricting Access by IP Address&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;NGINX can allow or deny access based on a particular IP address or the range of IP addresses of client computers. To allow or deny access, use the &lt;a href=&#34;https://nginx.org/en/docs/stream/ngx_stream_access_module.html#allow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;allow&lt;/a&gt; and &lt;a href=&#34;https://nginx.org/en/docs/stream/ngx_stream_access_module.html#deny&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;deny&lt;/a&gt; directives inside the &lt;a href=&#34;https://nginx.org/en/docs/stream/ngx_stream_core_module.html#stream&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;stream&lt;/a&gt; context or a &lt;a href=&#34;https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;server&lt;/a&gt; block:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restricting Access by Geographical Location</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-by-geoip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/controlling-access-by-geoip/</guid>
      <description>&lt;p&gt;&lt;span id=&#34;intro&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;introduction&#34;&gt;Introduction  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#introduction&#34; title=&#34;Introduction&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;F5 NGINX Plus can differentiate users based on their geographical location. For example, you can have different website content for different countries, or you can restrict content distribution to a particular country or city.&lt;/p&gt;&#xA;&lt;p&gt;NGINX Plus uses third-party MaxMind databases to match the IP address of the user and its location. As soon as the geoposition is known, it is then possible to use geoip-based variables in the &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_map_module.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;map&lt;/a&gt; or the &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_split_clients_module.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;split_clients&lt;/a&gt; module.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Securing HTTP Traffic to Upstream Servers</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/securing-http-traffic-upstream/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/securing-http-traffic-upstream/</guid>
      <description>&lt;p&gt;This article explains how to encrypt HTTP traffic between NGINX and an upstream group or a proxied server.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;prerequisites&#34;&gt;Prerequisites  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#prerequisites&#34; title=&#34;Prerequisites&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://nginx.org/en/download.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX Open Source&lt;/a&gt; or &lt;a href=&#34;https://nginx.com/products/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;F5 NGINX Plus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;A &lt;a href=&#34;http://localhost:1313/nginx/admin-guide/web-server/reverse-proxy/&#34;&gt;proxied server&lt;/a&gt; or an &lt;a href=&#34;http://localhost:1313/nginx/admin-guide/load-balancer/http-load-balancer/&#34;&gt;upstream group of servers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;SSL certificates and a private key&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 &#xA;id=&#34;obtaining-ssl-server-certificates&#34;&gt;Obtaining SSL Server Certificates  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#obtaining-ssl-server-certificates&#34; title=&#34;Obtaining SSL Server Certificates&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;You can purchase a server certificate from a trusted certificate authority (CA). You can create own internal CA with an &lt;a href=&#34;https://www.openssl.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenSSL&lt;/a&gt; library and generate your own certificate instead. The server certificate, along with a private key, should be placed on each upstream server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Securing TCP Traffic to Upstream Servers</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/securing-tcp-traffic-upstream/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/securing-tcp-traffic-upstream/</guid>
      <description>&lt;p&gt;This article explains how to secure TCP traffic between NGINX and an upstream TCP server or group of upstream TCP servers.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;prerequisites&#34;&gt;Prerequisites  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#prerequisites&#34; title=&#34;Prerequisites&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;F5 NGINX Plus &lt;a href=&#34;http://localhost:1313/nginx/releases/&#34;&gt;R6&lt;/a&gt; or later, or the latest NGINX Open Source compiled with the &lt;code&gt;--with-stream&lt;/code&gt; and &lt;code&gt;with-stream_ssl_module&lt;/code&gt; configuration parameters&lt;/li&gt;&#xA;&lt;li&gt;A proxied TCP server or an &lt;a href=&#34;http://localhost:1313/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/&#34;&gt;upstream group of TCP servers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;SSL certificates and a private key&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 &#xA;id=&#34;obtaining-ssl-server-certificates&#34;&gt;Obtaining SSL Server Certificates  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#obtaining-ssl-server-certificates&#34; title=&#34;Obtaining SSL Server Certificates&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;First, obtain SSL server certificates and a private key. Obtain an SSL server certificate from a trusted certificate authority (CA). Alternatively, generate one using an SSL library such as &lt;a href=&#34;http://www.openssl.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenSSL&lt;/a&gt;. Place the server certificates and private key on each of the upstream servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dynamic Denylisting of IP Addresses</title>
      <link>http://localhost:1313/nginx/admin-guide/security-controls/denylisting-ip-addresses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx/admin-guide/security-controls/denylisting-ip-addresses/</guid>
      <description>&lt;p&gt;This section describes how to create a denylist or allowlist of specific client IP addresses, which denies or allows them access to your site, and how to dynamically maintain the list of addresses.&lt;/p&gt;&#xA;&lt;p&gt;&lt;span id=&#34;overview&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;In F5 NGINX Plus &lt;a href=&#34;http://localhost:1313/nginx/releases/#r13&#34;&gt;Release 13&lt;/a&gt; (R13) and later, you can denylist some IP addresses as well as create and maintain a database of denylisted IP addresses. You can also explicitly allowlist other IP addresses. The IP addresses database is managed with the NGINX Plus &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_api_module.html&#34;&gt;API&lt;/a&gt; and &lt;a target=&#34;_blank&#34; href=&#34;https://nginx.org/en/docs/http/ngx_http_keyval_module.html&#34;&gt;keyval&lt;/a&gt; modules.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
