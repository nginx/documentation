<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2024 on DEV -- docs-nginx-com</title>
    <link>http://localhost:1313/unit/news/2024/</link>
    <description>Recent content in 2024 on DEV -- docs-nginx-com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/unit/news/2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unit 1.34.0 Released</title>
      <link>http://localhost:1313/nginx-unit/news/2024/unit-1.34.0-released/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/unit-1.34.0-released/</guid>
      <description>&lt;p&gt;We are pleased to announce the release of NGINX Unit 1.34.0. This release&#xA;includes a number of new features and changes:&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;json-formatted-access-logs&#34;&gt;JSON formatted access logs  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#json-formatted-access-logs&#34; title=&#34;JSON formatted access logs&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;This release introduces the ability to specify a JSON format for access logs.&lt;/p&gt;&#xA;&lt;p&gt;When defining an access log you can specify &amp;lsquo;format&amp;rsquo; as an object defining&#xA;JSON field name/value pairs, e.g.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;code-block&#34; data-mf=&#34;true&#34; style=&#34;display: none;&#34;&gt;&lt;span class=&#34;code-type chroma&#34;&gt;json&lt;/span&gt;&lt;div class=&#34;code-container chroma&#34;&gt;&#xA;        &lt;button onclick=&#34;copyToClipBoard(this, &amp;#34;id-18440f200ccd10f8&amp;#34;)&#34; class=&#34;code-copy-button multi-line&#34; type=&#34;button&#34;&gt;Copy&lt;/button&gt;&#xA;        &lt;div class=&#34;highlight-v2&#34; id=&#34;id-18440f200ccd10f8&#34;&gt;&#xA;            &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;access_log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/access.log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;remote_addr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$remote_addr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;time_local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$time_local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;request_line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$request_line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;body_bytes_sent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$body_bytes_sent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;header_referer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$header_referer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;header_user_agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$header_user_agent&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&lt;div id=&#34;code-block-v1&#34; data-mf=&#34;false&#34;&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;access_log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/access.log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;format&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;remote_addr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$remote_addr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;time_local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$time_local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;request_line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$request_line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;body_bytes_sent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$body_bytes_sent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;header_referer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$header_referer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;header_user_agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$header_user_agent&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;The JSON &lt;em&gt;values&lt;/em&gt; support being strings, variables and JavaScript.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit 1.33.0 Released</title>
      <link>http://localhost:1313/nginx-unit/news/2024/unit-1.33.0-released/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/unit-1.33.0-released/</guid>
      <description>&lt;p&gt;We are pleased to announce the release of NGINX Unit 1.33.0. This release includes&#xA;a number of new features and changes:&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;new-configuration-options&#34;&gt;New configuration options  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#new-configuration-options&#34; title=&#34;New configuration options&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;This release introduces three new configuration options:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;listen_threads&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;This option can be set under &lt;strong&gt;/settings/listen_threads&lt;/strong&gt; and controls the&#xA;number of threads the router process creates to handle client&#xA;connections. By default, Unit creates the same number of threads as there&#xA;are CPUs available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit 1.32.1 Released</title>
      <link>http://localhost:1313/nginx-unit/news/2024/unit-1.32.1-released/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/unit-1.32.1-released/</guid>
      <description>&lt;p&gt;NGINX Unit 1.32.1 is a maintenance release that fixes bugs in the new WebAssembly Language Module and in our njs implementation.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;resolved-issues&#34;&gt;Resolved issues  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#resolved-issues&#34; title=&#34;Resolved issues&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;This release fixes the following issues:&lt;/p&gt;&#xA;&lt;h3 &#xA;id=&#34;applications-of-type-wasm-wasi-component-cant-be-restarted&#34;&gt;Applications of type &lt;code&gt;wasm-wasi-component&lt;/code&gt; can&amp;rsquo;t be restarted  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#applications-of-type-wasm-wasi-component-cant-be-restarted&#34; title=&#34;Applications of type wasm-wasi-component can&amp;rsquo;t be restarted&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;Applications deployed as &lt;code&gt;wasm-wasi-components&lt;/code&gt; can&amp;rsquo;t be restarted using the &lt;code&gt;restart&lt;/code&gt; endpoint.&lt;/p&gt;&#xA;&lt;p&gt;After deploying a new Wasm Component binary to disk, the restart will trigger a reload of the component in Unit without restarting the server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The WebAssembly Component Model - Part 1</title>
      <link>http://localhost:1313/nginx-unit/news/2024/wasm-component-model-part-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/wasm-component-model-part-1/</guid>
      <description>&lt;p&gt;Are you interested in getting started with the WebAssembly Component Model but feel overwhelmed by the ecosystem and unsure where to begin? If so, this blog post is for you!&lt;/p&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll share some of the lessons we learned and the &amp;ldquo;aha&amp;rdquo; moments we experienced while adding support for the WebAssembly Component Model to NGINX Unit, thanks to the assistance of the robust and active community.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re already familiar with the Wasm ecosystem or just would like to get started with code, feel free to jump directly to &lt;a href=&#34;http://localhost:1313/news/2024/wasm-component-model-part-2&#34;&gt;Part 2&lt;/a&gt; of this blog series.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wasm Components: Working with the Spin SDK for Rust</title>
      <link>http://localhost:1313/nginx-unit/news/2024/fermyon-spin-rust-sdk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/fermyon-spin-rust-sdk/</guid>
      <description>&lt;p&gt;In our blog series &lt;a href=&#34;http://localhost:1313/nginx-unit/news/2024/wasm-component-model-part-1/&#34;&gt;Part 1&lt;/a&gt; and &lt;a href=&#34;http://localhost:1313/nginx-unit/news/2024/wasm-component-model-part-2/&#34;&gt;Part 2&lt;/a&gt; , we have covered the core mechanism of the WebAssembly Component Model and showcased how to create a Wasm Component using WASI 0.2 APIs and the &lt;strong&gt;wasi/http:proxy&lt;/strong&gt; world.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, we will have a look at the &lt;a href=&#34;https://www.fermyon.com/spin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fermyon&amp;rsquo;s Spin&lt;/a&gt; SDK for &lt;a href=&#34;https://fermyon.github.io/rust-docs/spin/main/spin_sdk/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rust&lt;/a&gt; and create a Wasm Component that can be hosted on NGINX Unit.&lt;/p&gt;&#xA;&lt;p&gt;The Spin SDKs provide a great developer experience, as they wrap a lot of the manual work in easy to consume APIs. In this blog post we will focus on Rust, but if you would like to learn more about the other language SDKs, please see the official &lt;a href=&#34;https://developer.fermyon.com/spin/v2/language-support-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The WebAssembly Component Model - Part 2</title>
      <link>http://localhost:1313/nginx-unit/news/2024/wasm-component-model-part-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/wasm-component-model-part-2/</guid>
      <description>&lt;p&gt;This is Part 2 of our blog series about the Wasm Component Model, it&amp;rsquo;s ecosytem and how to use Wasm Components with NGINX Unit.&#xA;In &lt;a href=&#34;http://localhost:1313/news/2024/wasm-component-model-part-1&#34;&gt;Part 1&lt;/a&gt; we have covered all the conceptional parts. In this part, we will focus on the process of creating a Wasm Component.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;tutorial---a-rust-based-wasm-component&#34;&gt;Tutorial - A Rust based Wasm Component  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#tutorial---a-rust-based-wasm-component&#34; title=&#34;Tutorial - A Rust based Wasm Component&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Rust is the premier language for WebAssembly development and the most mature in terms of support. In the example, we will use Rust and its ecosystem to create a Wasm Component that can be hosted directly on NGINX Unit.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit 1.32.0 Released</title>
      <link>http://localhost:1313/nginx-unit/news/2024/unit-1.32.0-released/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginx-unit/news/2024/unit-1.32.0-released/</guid>
      <description>&lt;p&gt;Unit 1.32.0 comes with a new language module for WebAssembly that supports&#xA;the WASI 0.2 HTTP world so that WebAssembly Components implementing this&#xA;interface can be hosted on Unit.&lt;/p&gt;&#xA;&lt;p&gt;This new language module improves upon the existing WebAssembly support. We&#xA;recommend all users to use this new implementation for WebAssembly. We consider&#xA;the old &lt;strong&gt;unit-wasm&lt;/strong&gt; module deprecated now.&lt;/p&gt;&#xA;&lt;p&gt;Additionally, we have added the following features:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enhanced the {doc}&lt;code&gt;njs (NGINX JavaScript) experience &amp;lt;../../scripting&amp;gt;&lt;/code&gt; by making all Unit variables&#xA;accessible from JavaScript&lt;/li&gt;&#xA;&lt;li&gt;Added support for&#xA;{ref}&lt;code&gt;conditional access logging &amp;lt;conditional-access-logging-news&amp;gt;&lt;/code&gt;, to help&#xA;you filter the requests that are logged&lt;/li&gt;&#xA;&lt;li&gt;Added support for changing Unit&amp;rsquo;s control socket permissions&lt;/li&gt;&#xA;&lt;li&gt;Added a &lt;a href=&#34;http://localhost:1313/nginx-unit/configuration/#configuration-variables&#34;&gt;new variable&lt;/a&gt;&#xA;, &lt;strong&gt;$request_id&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;hellip;and much more! Keep reading to learn more about what changed since 1.31.1.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
