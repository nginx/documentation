<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security controls on DEV -- docs-nginx-com</title>
    <link>http://localhost:1313/nginxaas/azure/quicksart/security-controls/</link>
    <description>Recent content in Security controls on DEV -- docs-nginx-com</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/nginxaas/azure/quicksart/security-controls/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use a certificate from Azure Key Vault</title>
      <link>http://localhost:1313/nginxaas/azure/quickstart/security-controls/certificates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginxaas/azure/quickstart/security-controls/certificates/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;This tutorial walks through a complete example of using SSL/TLS certificates from Azure Key Vault in an F5 NGINX as a Service for Azure (NGINXaaS) deployment to secure traffic. In this guide, you will create all necessary resources to add a certificate to an NGINXaaS deployment using the &lt;a href=&#34;https://portal.azure.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure portal&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;create-an-azure-key-vault-akv&#34;&gt;Create an Azure Key Vault (AKV)  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#create-an-azure-key-vault-akv&#34; title=&#34;Create an Azure Key Vault (AKV)&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;NGINXaaS enables customers to securely store SSL/TLS certificates in Azure Key Vault. If you do not have a key vault, follow these steps to create one:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restricting access with HTTP basic authentication</title>
      <link>http://localhost:1313/nginxaas/azure/security-controls/auth-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginxaas/azure/security-controls/auth-basic/</guid>
      <description>&lt;p&gt;You can restrict access to resources by implementing username/password authentication using the &amp;ldquo;HTTP Basic Authentication&amp;rdquo; protocol.&lt;/p&gt;&#xA;&lt;p&gt;For more information on configuring HTTP Basic Authentication please refer to the &lt;a href=&#34;https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX Plus Restricting Access with HTTP Basic Authentication&lt;/a&gt; documentation.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;uploading-a-password-file&#34;&gt;Uploading a password file  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#uploading-a-password-file&#34; title=&#34;Uploading a password file&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;F5 NGINX as a Service for Azure (NGINXaaS) accepts a file containing usernames and passwords using any of the password types specified in the &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html#auth_basic_user_file&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX documentation&lt;/a&gt;. The password file can be uploaded as a &amp;ldquo;protected file&amp;rdquo; when creating or updating your NGINX configuration to protect the file&amp;rsquo;s contents from being read. The password file can alternatively be uploaded as a regular file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up JWT authentication</title>
      <link>http://localhost:1313/nginxaas/azure/quickstart/security-controls/jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginxaas/azure/quickstart/security-controls/jwt/</guid>
      <description>&lt;p&gt;F5 NGINX as a Service for Azure (NGINXaaS) provides the option to control access to your resources using JWT authentication. With JWT authentication, a client provides a JSON Web Token, and the token will be validated against a local key file or a remote service. This document will explain how to validate tokens using Microsoft Entra as the remote service.&lt;/p&gt;&#xA;&lt;p&gt;For more information on JWT authentication with NGINX+, please refer to &lt;a href=&#34;https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ngx_http_auth_jwt_module&lt;/a&gt; and &lt;a href=&#34;https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-jwt-authentication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX Plus Setting up JWT Authentication&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Securing upstream traffic</title>
      <link>http://localhost:1313/nginxaas/azure/quickstart/security-controls/securing-upstream-traffic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginxaas/azure/quickstart/security-controls/securing-upstream-traffic/</guid>
      <description>&lt;p&gt;Learn how to encrypt HTTP traffic between F5 NGINX as a Service for Azure (NGINXaaS) and an upstream group or a proxied server. To secure TCP traffic to upstream servers, follow the &lt;a href=&#34;https://docs.nginx.com/nginx/admin-guide/security-controls/securing-tcp-traffic-upstream/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NGINX Plus guide&lt;/a&gt;. As with securing HTTP traffic, you will need to &lt;a href=&#34;http://localhost:1313/nginxaas/azure/getting-started/ssl-tls-certificates/ssl-tls-certificates-portal/&#34;&gt;add the SSL/TLS client certificate&lt;/a&gt; to the NGINXaaS deployment.&lt;/p&gt;&#xA;&lt;h3 &#xA;id=&#34;prerequisites&#34;&gt;Prerequisites  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#prerequisites&#34; title=&#34;Prerequisites&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/nginxaas/azure/getting-started/ssl-tls-certificates/ssl-tls-certificates-portal/&#34;&gt;Add a SSL/TLS Certificate&lt;/a&gt; to the NGINXaaS deployment.&lt;/li&gt;&#xA;&lt;li&gt;Enable &lt;a href=&#34;http://localhost:1313/nginxaas/azure/quickstart/njs-support/&#34;&gt;njs module&lt;/a&gt; if configuration uses njs directives.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 &#xA;id=&#34;configuring-nginx&#34;&gt;Configuring NGINX  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#configuring-nginx&#34; title=&#34;Configuring NGINX&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/nginxaas/azure/getting-started/ssl-tls-certificates/ssl-tls-certificates-portal/&#34;&gt;Add the client certificate and the key&lt;/a&gt; that will be used to authenticate NGINX to the NGINXaaS deployment. Make a note of the filepaths you assign to the &lt;code&gt;Certificate path&lt;/code&gt; and &lt;code&gt;Key path&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set up OIDC authentication</title>
      <link>http://localhost:1313/nginxaas/azure/quickstart/security-controls/oidc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginxaas/azure/quickstart/security-controls/oidc/</guid>
      <description>&lt;h2 &#xA;id=&#34;overview&#34;&gt;Overview  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#overview&#34; title=&#34;Overview&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Learn how to configure F5 NGINX as a Service (NGINXaaS) for Azure with OpenID Connect (OIDC) authentication.&lt;/p&gt;&#xA;&lt;h2 &#xA;id=&#34;prerequisites&#34;&gt;Prerequisites  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#prerequisites&#34; title=&#34;Prerequisites&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Configure an NGINXaaS deployment with &lt;a href=&#34;http://localhost:1313/nginxaas/azure/getting-started/ssl-tls-certificates/&#34;&gt;SSL/TLS certificates&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Enable &lt;a href=&#34;http://localhost:1313/nginxaas/azure/quickstart/runtime-state-sharing/&#34;&gt;Runtime State Sharing&lt;/a&gt; on the NGINXaaS deployment.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nginxinc/nginx-openid-connect/blob/main/README.md#configuring-your-idp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Configure the IdP&lt;/a&gt;. For example, you can &lt;a href=&#34;https://learn.microsoft.com/en-us/entra/identity-platform/quickstart-register-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;register a Microsoft Entra Web application&lt;/a&gt; as the IdP.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 &#xA;id=&#34;configure-nginx-as-a-service-for-azure-with-idp&#34;&gt;Configure NGINX as a Service for Azure with IdP  &lt;a class=&#34;headerlink float-right&#34; href=&#34;#configure-nginx-as-a-service-for-azure-with-idp&#34; title=&#34;Configure NGINX as a Service for Azure with IdP&#34;&gt;&lt;i class=&#34;fas fa-link fa-xs&#34;&gt;&lt;/i&gt;&lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;Configuring NGINXaaS for Azure with OIDC is similar as &lt;a href=&#34;https://github.com/nginxinc/nginx-openid-connect/blob/main/README.md#configuring-nginx-plus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Configuring NGINX Plus&lt;/a&gt; in &lt;a href=&#34;https://github.com/nginxinc/nginx-openid-connect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nginx-openid-connect&lt;/a&gt; but it also has its own specific configurations that must be completed to work normally.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect to upstreams with Azure Private Link</title>
      <link>http://localhost:1313/nginxaas/azure/quickstart/security-controls/private-link-to-upstreams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/nginxaas/azure/quickstart/security-controls/private-link-to-upstreams/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/private-link/private-link-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure Private Link&lt;/a&gt; eliminates exposure to the public internet by handling traffic over Microsoft&amp;rsquo;s backbone network. This is especially useful if your NGINXaaS deployment and your upstreams are in different virtual networks.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;note&#34;&gt;&#xA;  &lt;div&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br/&gt; Depending on your use-case, we recommend using &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;virtual network peering&lt;/a&gt; instead of a Private Link service to maintain NGINX&amp;rsquo;s load balancing capabilities.&lt;/div&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;To set up a Private Link between your NGINXaaS deployment and your upstreams, you&amp;rsquo;ll need two resources:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
